{
  "resourceType": "Library",
  "id": "FHIRHelpers",
  "extension": [ {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "Device/cqf-tooling"
    }
  } ],
  "url": "http://hl7.org/fhir/Library/FHIRHelpers",
  "version": "4.0.1",
  "name": "FHIRHelpers",
  "relatedArtifact": [ {
    "type": "depends-on",
    "display": "FHIR model information",
    "resource": "http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1"
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": "/*
@author: Bryn Rhodes
@description: This library defines functions to convert between FHIR
 data types and CQL system-defined types, as well as functions to support
 FHIRPath implementation. For more information, see the FHIRHelpers wiki page:
 https://github.com/cqframework/clinical_quality_language/wiki/FHIRHelpers
@allowFluent: true
*/
library FHIRHelpers version '4.0.1'

using FHIR version '4.0.1'

define function ToInterval(period FHIR.Period):
    if period is null then
        null
    else
        if period."start" is null then
            Interval(period."start".value, period."end".value]
        else
            Interval[period."start".value, period."end".value]

define function ToCalendarUnit(unit System.String):
    case unit
        when 'ms' then 'millisecond'
        when 's' then 'second'
        when 'min' then 'minute'
        when 'h' then 'hour'
        when 'd' then 'day'
        when 'wk' then 'week'
        when 'mo' then 'month'
        when 'a' then 'year'
        else unit
    end

define function ToQuantity(quantity FHIR.Quantity):
    case
        when quantity is null then null
        when quantity.value is null then null
        when quantity.comparator is not null then
            Message(null, true, 'FHIRHelpers.ToQuantity.ComparatorQuantityNotSupported', 'Error', 'FHIR Quantity value has a comparator and cannot be converted to a System.Quantity value.')
        when quantity.system is null or quantity.system.value = 'http://unitsofmeasure.org'
              or quantity.system.value = 'http://hl7.org/fhirpath/CodeSystem/calendar-units' then
            System.Quantity { value: quantity.value.value, unit: ToCalendarUnit(Coalesce(quantity.code.value, quantity.unit.value, '1')) }
        else
            Message(null, true, 'FHIRHelpers.ToQuantity.InvalidFHIRQuantity', 'Error', 'Invalid FHIR Quantity code: ' & quantity.unit.value & ' (' & quantity.system.value & '|' & quantity.code.value & ')')
    end

define function ToQuantityIgnoringComparator(quantity FHIR.Quantity):
    case
        when quantity is null then null
        when quantity.value is null then null
        when quantity.system is null or quantity.system.value = 'http://unitsofmeasure.org'
              or quantity.system.value = 'http://hl7.org/fhirpath/CodeSystem/calendar-units' then
            System.Quantity { value: quantity.value.value, unit: ToCalendarUnit(Coalesce(quantity.code.value, quantity.unit.value, '1')) }
        else
            Message(null, true, 'FHIRHelpers.ToQuantity.InvalidFHIRQuantity', 'Error', 'Invalid FHIR Quantity code: ' & quantity.unit.value & ' (' & quantity.system.value & '|' & quantity.code.value & ')')
    end

define function ToInterval(quantity FHIR.Quantity):
    if quantity is null then null else
        case quantity.comparator.value
            when '<' then
                Interval[
                    null,
                    ToQuantityIgnoringComparator(quantity)
                )
            when '<=' then
                Interval[
                    null,
                    ToQuantityIgnoringComparator(quantity)
                ]
            when '>=' then
                Interval[
                    ToQuantityIgnoringComparator(quantity),
                    null
                ]
            when '>' then
                Interval(
                    ToQuantityIgnoringComparator(quantity),
                    null
                ]
            else
                Interval[ToQuantity(quantity), ToQuantity(quantity)]
        end

define function ToRatio(ratio FHIR.Ratio):
    if ratio is null then
        null
    else
        System.Ratio { numerator: ToQuantity(ratio.numerator), denominator: ToQuantity(ratio.denominator) }

define function ToInterval(range FHIR.Range):
    if range is null then
        null
    else
        Interval[ToQuantity(range.low), ToQuantity(range.high)]

define function ToCode(coding FHIR.Coding):
    if coding is null then
        null
    else
        System.Code {
          code: coding.code.value,
          system: coding.system.value,
          version: coding.version.value,
          display: coding.display.value
        }

define function ToConcept(concept FHIR.CodeableConcept):
    if concept is null then
        null
    else
        System.Concept {
            codes: concept.coding C return ToCode(C),
            display: concept.text.value
        }

define function reference(reference String):
    if reference is null then
        null
    else
        Reference { reference: string { value: reference } }

define function resolve(reference String) returns Resource: external
define function resolve(reference Reference) returns Resource: external
define function reference(resource Resource) returns Reference: external
define function extension(element Element, url String) returns List<Element>: external
define function extension(resource Resource, url String) returns List<Element>: external
define function hasValue(element Element) returns Boolean: external
define function getValue(element Element) returns Any: external
define function ofType(identifier String) returns List<Any>: external
define function is(identifier String) returns Boolean: external
define function as(identifier String) returns Any: external
define function elementDefinition(element Element) returns ElementDefinition: external
define function slice(element Element, url String, name String) returns List<Element>: external
define function checkModifiers(resource Resource) returns Resource: external
define function checkModifiers(resource Resource, modifier String) returns Resource: external
define function checkModifiers(element Element) returns Element: external
define function checkModifiers(element Element, modifier String) returns Element: external
define function conformsTo(resource Resource, structure String) returns Boolean: external
define function memberOf(code code, valueSet String) returns Boolean: external
define function memberOf(coding Coding, valueSet String) returns Boolean: external
define function memberOf(concept CodeableConcept, valueSet String) returns Boolean: external
define function subsumes(coding Coding, subsumedCoding Coding) returns Boolean: external
define function subsumes(concept CodeableConcept, subsumedConcept CodeableConcept) returns Boolean: external
define function subsumedBy(coding Coding, subsumingCoding Coding) returns Boolean: external
define function subsumedBy(concept CodeableConcept, subsumingConcept CodeableConcept) returns Boolean: external
define function htmlChecks(element Element) returns Boolean: external

define function ToString(value AccountStatus): value.value
define function ToString(value ActionCardinalityBehavior): value.value
define function ToString(value ActionConditionKind): value.value
define function ToString(value ActionGroupingBehavior): value.value
define function ToString(value ActionParticipantType): value.value
define function ToString(value ActionPrecheckBehavior): value.value
define function ToString(value ActionRelationshipType): value.value
define function ToString(value ActionRequiredBehavior): value.value
define function ToString(value ActionSelectionBehavior): value.value
define function ToString(value ActivityDefinitionKind): value.value
define function ToString(value ActivityParticipantType): value.value
define function ToString(value AddressType): value.value
define function ToString(value AddressUse): value.value
define function ToString(value AdministrativeGender): value.value
define function ToString(value AdverseEventActuality): value.value
define function ToString(value AggregationMode): value.value
define function ToString(value AllergyIntoleranceCategory): value.value
define function ToString(value AllergyIntoleranceCriticality): value.value
define function ToString(value AllergyIntoleranceSeverity): value.value
define function ToString(value AllergyIntoleranceType): value.value
define function ToString(value AppointmentStatus): value.value
define function ToString(value AssertionDirectionType): value.value
define function ToString(value AssertionOperatorType): value.value
define function ToString(value AssertionResponseTypes): value.value
define function ToString(value AuditEventAction): value.value
define function ToString(value AuditEventAgentNetworkType): value.value
define function ToString(value AuditEventOutcome): value.value
define function ToString(value BindingStrength): value.value
define function ToString(value BiologicallyDerivedProductCategory): value.value
define function ToString(value BiologicallyDerivedProductStatus): value.value
define function ToString(value BiologicallyDerivedProductStorageScale): value.value
define function ToString(value BundleType): value.value
define function ToString(value CapabilityStatementKind): value.value
define function ToString(value CarePlanActivityKind): value.value
define function ToString(value CarePlanActivityStatus): value.value
define function ToString(value CarePlanIntent): value.value
define function ToString(value CarePlanStatus): value.value
define function ToString(value CareTeamStatus): value.value
define function ToString(value CatalogEntryRelationType): value.value
define function ToString(value ChargeItemDefinitionPriceComponentType): value.value
define function ToString(value ChargeItemStatus): value.value
define function ToString(value ClaimResponseStatus): value.value
define function ToString(value ClaimStatus): value.value
define function ToString(value ClinicalImpressionStatus): value.value
define function ToString(value CodeSearchSupport): value.value
define function ToString(value CodeSystemContentMode): value.value
define function ToString(value CodeSystemHierarchyMeaning): value.value
define function ToString(value CommunicationPriority): value.value
define function ToString(value CommunicationRequestStatus): value.value
define function ToString(value CommunicationStatus): value.value
define function ToString(value CompartmentCode): value.value
define function ToString(value CompartmentType): value.value
define function ToString(value CompositionAttestationMode): value.value
define function ToString(value CompositionStatus): value.value
define function ToString(value ConceptMapEquivalence): value.value
define function ToString(value ConceptMapGroupUnmappedMode): value.value
define function ToString(value ConditionalDeleteStatus): value.value
define function ToString(value ConditionalReadStatus): value.value
define function ToString(value ConsentDataMeaning): value.value
define function ToString(value ConsentProvisionType): value.value
define function ToString(value ConsentState): value.value
define function ToString(value ConstraintSeverity): value.value
define function ToString(value ContactPointSystem): value.value
define function ToString(value ContactPointUse): value.value
define function ToString(value ContractPublicationStatus): value.value
define function ToString(value ContractStatus): value.value
define function ToString(value ContributorType): value.value
define function ToString(value CoverageStatus): value.value
define function ToString(value CurrencyCode): value.value
define function ToString(value DayOfWeek): value.value
define function ToString(value DaysOfWeek): value.value
define function ToString(value DetectedIssueSeverity): value.value
define function ToString(value DetectedIssueStatus): value.value
define function ToString(value DeviceMetricCalibrationState): value.value
define function ToString(value DeviceMetricCalibrationType): value.value
define function ToString(value DeviceMetricCategory): value.value
define function ToString(value DeviceMetricColor): value.value
define function ToString(value DeviceMetricOperationalStatus): value.value
define function ToString(value DeviceNameType): value.value
define function ToString(value DeviceRequestStatus): value.value
define function ToString(value DeviceUseStatementStatus): value.value
define function ToString(value DiagnosticReportStatus): value.value
define function ToString(value DiscriminatorType): value.value
define function ToString(value DocumentConfidentiality): value.value
define function ToString(value DocumentMode): value.value
define function ToString(value DocumentReferenceStatus): value.value
define function ToString(value DocumentRelationshipType): value.value
define function ToString(value EligibilityRequestPurpose): value.value
define function ToString(value EligibilityRequestStatus): value.value
define function ToString(value EligibilityResponsePurpose): value.value
define function ToString(value EligibilityResponseStatus): value.value
define function ToString(value EnableWhenBehavior): value.value
define function ToString(value EncounterLocationStatus): value.value
define function ToString(value EncounterStatus): value.value
define function ToString(value EndpointStatus): value.value
define function ToString(value EnrollmentRequestStatus): value.value
define function ToString(value EnrollmentResponseStatus): value.value
define function ToString(value EpisodeOfCareStatus): value.value
define function ToString(value EventCapabilityMode): value.value
define function ToString(value EventTiming): value.value
define function ToString(value EvidenceVariableType): value.value
define function ToString(value ExampleScenarioActorType): value.value
define function ToString(value ExplanationOfBenefitStatus): value.value
define function ToString(value ExposureState): value.value
define function ToString(value ExtensionContextType): value.value
define function ToString(value FHIRAllTypes): value.value
define function ToString(value FHIRDefinedType): value.value
define function ToString(value FHIRDeviceStatus): value.value
define function ToString(value FHIRResourceType): value.value
define function ToString(value FHIRSubstanceStatus): value.value
define function ToString(value FHIRVersion): value.value
define function ToString(value FamilyHistoryStatus): value.value
define function ToString(value FilterOperator): value.value
define function ToString(value FlagStatus): value.value
define function ToString(value GoalLifecycleStatus): value.value
define function ToString(value GraphCompartmentRule): value.value
define function ToString(value GraphCompartmentUse): value.value
define function ToString(value GroupMeasure): value.value
define function ToString(value GroupType): value.value
define function ToString(value GuidanceResponseStatus): value.value
define function ToString(value GuidePageGeneration): value.value
define function ToString(value GuideParameterCode): value.value
define function ToString(value HTTPVerb): value.value
define function ToString(value IdentifierUse): value.value
define function ToString(value IdentityAssuranceLevel): value.value
define function ToString(value ImagingStudyStatus): value.value
define function ToString(value ImmunizationEvaluationStatus): value.value
define function ToString(value ImmunizationStatus): value.value
define function ToString(value InvoicePriceComponentType): value.value
define function ToString(value InvoiceStatus): value.value
define function ToString(value IssueSeverity): value.value
define function ToString(value IssueType): value.value
define function ToString(value LinkType): value.value
define function ToString(value LinkageType): value.value
define function ToString(value ListMode): value.value
define function ToString(value ListStatus): value.value
define function ToString(value LocationMode): value.value
define function ToString(value LocationStatus): value.value
define function ToString(value MeasureReportStatus): value.value
define function ToString(value MeasureReportType): value.value
define function ToString(value MediaStatus): value.value
define function ToString(value MedicationAdministrationStatus): value.value
define function ToString(value MedicationDispenseStatus): value.value
define function ToString(value MedicationKnowledgeStatus): value.value
define function ToString(value MedicationRequestIntent): value.value
define function ToString(value MedicationRequestPriority): value.value
define function ToString(value MedicationRequestStatus): value.value
define function ToString(value MedicationStatementStatus): value.value
define function ToString(value MedicationStatus): value.value
define function ToString(value MessageSignificanceCategory): value.value
define function ToString(value Messageheader_Response_Request): value.value
define function ToString(value MimeType): value.value
define function ToString(value NameUse): value.value
define function ToString(value NamingSystemIdentifierType): value.value
define function ToString(value NamingSystemType): value.value
define function ToString(value NarrativeStatus): value.value
define function ToString(value NoteType): value.value
define function ToString(value NutritiionOrderIntent): value.value
define function ToString(value NutritionOrderStatus): value.value
define function ToString(value ObservationDataType): value.value
define function ToString(value ObservationRangeCategory): value.value
define function ToString(value ObservationStatus): value.value
define function ToString(value OperationKind): value.value
define function ToString(value OperationParameterUse): value.value
define function ToString(value OrientationType): value.value
define function ToString(value ParameterUse): value.value
define function ToString(value ParticipantRequired): value.value
define function ToString(value ParticipantStatus): value.value
define function ToString(value ParticipationStatus): value.value
define function ToString(value PaymentNoticeStatus): value.value
define function ToString(value PaymentReconciliationStatus): value.value
define function ToString(value ProcedureStatus): value.value
define function ToString(value PropertyRepresentation): value.value
define function ToString(value PropertyType): value.value
define function ToString(value ProvenanceEntityRole): value.value
define function ToString(value PublicationStatus): value.value
define function ToString(value QualityType): value.value
define function ToString(value QuantityComparator): value.value
define function ToString(value QuestionnaireItemOperator): value.value
define function ToString(value QuestionnaireItemType): value.value
define function ToString(value QuestionnaireResponseStatus): value.value
define function ToString(value ReferenceHandlingPolicy): value.value
define function ToString(value ReferenceVersionRules): value.value
define function ToString(value ReferredDocumentStatus): value.value
define function ToString(value RelatedArtifactType): value.value
define function ToString(value RemittanceOutcome): value.value
define function ToString(value RepositoryType): value.value
define function ToString(value RequestIntent): value.value
define function ToString(value RequestPriority): value.value
define function ToString(value RequestStatus): value.value
define function ToString(value ResearchElementType): value.value
define function ToString(value ResearchStudyStatus): value.value
define function ToString(value ResearchSubjectStatus): value.value
define function ToString(value ResourceType): value.value
define function ToString(value ResourceVersionPolicy): value.value
define function ToString(value ResponseType): value.value
define function ToString(value RestfulCapabilityMode): value.value
define function ToString(value RiskAssessmentStatus): value.value
define function ToString(value SPDXLicense): value.value
define function ToString(value SearchComparator): value.value
define function ToString(value SearchEntryMode): value.value
define function ToString(value SearchModifierCode): value.value
define function ToString(value SearchParamType): value.value
define function ToString(value SectionMode): value.value
define function ToString(value SequenceType): value.value
define function ToString(value ServiceRequestIntent): value.value
define function ToString(value ServiceRequestPriority): value.value
define function ToString(value ServiceRequestStatus): value.value
define function ToString(value SlicingRules): value.value
define function ToString(value SlotStatus): value.value
define function ToString(value SortDirection): value.value
define function ToString(value SpecimenContainedPreference): value.value
define function ToString(value SpecimenStatus): value.value
define function ToString(value Status): value.value
define function ToString(value StrandType): value.value
define function ToString(value StructureDefinitionKind): value.value
define function ToString(value StructureMapContextType): value.value
define function ToString(value StructureMapGroupTypeMode): value.value
define function ToString(value StructureMapInputMode): value.value
define function ToString(value StructureMapModelMode): value.value
define function ToString(value StructureMapSourceListMode): value.value
define function ToString(value StructureMapTargetListMode): value.value
define function ToString(value StructureMapTransform): value.value
define function ToString(value SubscriptionChannelType): value.value
define function ToString(value SubscriptionStatus): value.value
define function ToString(value SupplyDeliveryStatus): value.value
define function ToString(value SupplyRequestStatus): value.value
define function ToString(value SystemRestfulInteraction): value.value
define function ToString(value TaskIntent): value.value
define function ToString(value TaskPriority): value.value
define function ToString(value TaskStatus): value.value
define function ToString(value TestReportActionResult): value.value
define function ToString(value TestReportParticipantType): value.value
define function ToString(value TestReportResult): value.value
define function ToString(value TestReportStatus): value.value
define function ToString(value TestScriptRequestMethodCode): value.value
define function ToString(value TriggerType): value.value
define function ToString(value TypeDerivationRule): value.value
define function ToString(value TypeRestfulInteraction): value.value
define function ToString(value UDIEntryType): value.value
define function ToString(value UnitsOfTime): value.value
define function ToString(value Use): value.value
define function ToString(value VariableType): value.value
define function ToString(value VisionBase): value.value
define function ToString(value VisionEyes): value.value
define function ToString(value VisionStatus): value.value
define function ToString(value XPathUsageType): value.value
define function ToString(value base64Binary): value.value
define function ToBoolean(value boolean): value.value
define function ToDate(value date): value.value
define function ToDateTime(value dateTime): value.value
define function ToDecimal(value decimal): value.value
define function ToDateTime(value instant): value.value
define function ToInteger(value integer): value.value
define function ToString(value string): value.value
define function ToTime(value time): value.value
define function ToString(value uri): value.value
define function ToString(value xhtml): value.value
"
  }, {
    "contentType": "application/elm+xml",
    "data": "<?xml version="1.0" encoding="UTF-8"?>
<library xmlns="urn:hl7-org:elm:r1" xmlns:t="urn:hl7-org:elm-types:r1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:fhir="http://hl7.org/fhir" xmlns:qdm43="urn:healthit-gov:qdm:v4_3" xmlns:qdm53="urn:healthit-gov:qdm:v5_3" xmlns:a="urn:hl7-org:cql-annotations:r1">
   <annotation translatorVersion="1.3" translatorOptions="EnableAnnotations,EnableLocators,DisableListDemotion,DisableListPromotion" xsi:type="a:CqlToElmInfo"/>
   <annotation xsi:type="a:Annotation">
      <a:s r="1428">
         <a:s>/*
@author: Bryn Rhodes
@description: This library defines functions to convert between FHIR
 data types and CQL system-defined types, as well as functions to support
 FHIRPath implementation. For more information, see the FHIRHelpers wiki page:
 https://github.com/cqframework/clinical_quality_language/wiki/FHIRHelpers
@allowFluent: true
*/library FHIRHelpers version '4.0.1'</a:s>
      </a:s>
   </annotation>
   <identifier id="FHIRHelpers" system="http://fhir.org/guides/who/immz" version="4.0.1"/>
   <schemaIdentifier id="urn:hl7-org:elm" version="r1"/>
   <usings>
      <def localIdentifier="System" uri="urn:hl7-org:elm-types:r1"/>
      <def localId="1" locator="11:1-11:26" localIdentifier="FHIR" uri="http://hl7.org/fhir" version="4.0.1">
         <annotation xsi:type="a:Annotation">
            <a:s r="1">
               <a:s>using </a:s>
               <a:s>
                  <a:s>FHIR</a:s>
               </a:s>
               <a:s> version '4.0.1'</a:s>
            </a:s>
         </annotation>
      </def>
   </usings>
   <statements>
      <def localId="25" locator="13:1-20:62" name="ToInterval" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="25">
               <a:s>define function ToInterval(period </a:s>
               <a:s r="2">
                  <a:s>FHIR.Period</a:s>
               </a:s>
               <a:s>):
    </a:s>
               <a:s r="24">
                  <a:s r="24">
                     <a:s>if </a:s>
                     <a:s r="4">
                        <a:s r="3">
                           <a:s>period</a:s>
                        </a:s>
                        <a:s> is null</a:s>
                     </a:s>
                     <a:s r="5"> then
        null
    else
        </a:s>
                     <a:s r="23">
                        <a:s>if </a:s>
                        <a:s r="8">
                           <a:s r="7">
                              <a:s r="6">
                                 <a:s>period</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="7">
                                 <a:s>&quot;start&quot;</a:s>
                              </a:s>
                           </a:s>
                           <a:s> is null</a:s>
                        </a:s>
                        <a:s> then
            </a:s>
                        <a:s r="15">
                           <a:s>Interval(</a:s>
                           <a:s r="11">
                              <a:s r="10">
                                 <a:s r="9">
                                    <a:s>period</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="10">
                                    <a:s>&quot;start&quot;</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="11">
                                 <a:s>value</a:s>
                              </a:s>
                           </a:s>
                           <a:s>, </a:s>
                           <a:s r="14">
                              <a:s r="13">
                                 <a:s r="12">
                                    <a:s>period</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="13">
                                    <a:s>&quot;end&quot;</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="14">
                                 <a:s>value</a:s>
                              </a:s>
                           </a:s>
                           <a:s>]</a:s>
                        </a:s>
                        <a:s>
        else
            </a:s>
                        <a:s r="22">
                           <a:s>Interval[</a:s>
                           <a:s r="18">
                              <a:s r="17">
                                 <a:s r="16">
                                    <a:s>period</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="17">
                                    <a:s>&quot;start&quot;</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="18">
                                 <a:s>value</a:s>
                              </a:s>
                           </a:s>
                           <a:s>, </a:s>
                           <a:s r="21">
                              <a:s r="20">
                                 <a:s r="19">
                                    <a:s>period</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="20">
                                    <a:s>&quot;end&quot;</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="21">
                                 <a:s>value</a:s>
                              </a:s>
                           </a:s>
                           <a:s>]</a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="24" locator="14:5-20:62" xsi:type="If">
            <condition localId="4" locator="14:8-14:21" xsi:type="IsNull">
               <operand localId="3" locator="14:8-14:13" name="period" xsi:type="OperandRef"/>
            </condition>
            <then xsi:type="As">
               <operand localId="5" locator="15:9-15:12" xsi:type="Null"/>
               <asTypeSpecifier xsi:type="IntervalTypeSpecifier">
                  <pointType name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
               </asTypeSpecifier>
            </then>
            <else localId="23" locator="17:9-20:62" xsi:type="If">
               <condition localId="8" locator="17:12-17:33" xsi:type="IsNull">
                  <operand localId="7" locator="17:12-17:25" path="start" xsi:type="Property">
                     <source localId="6" locator="17:12-17:17" name="period" xsi:type="OperandRef"/>
                  </operand>
               </condition>
               <then localId="15" locator="18:13-18:62" lowClosed="false" highClosed="true" xsi:type="Interval">
                  <low localId="11" locator="18:22-18:41" path="value" xsi:type="Property">
                     <source localId="10" locator="18:22-18:35" path="start" xsi:type="Property">
                        <source localId="9" locator="18:22-18:27" name="period" xsi:type="OperandRef"/>
                     </source>
                  </low>
                  <high localId="14" locator="18:44-18:61" path="value" xsi:type="Property">
                     <source localId="13" locator="18:44-18:55" path="end" xsi:type="Property">
                        <source localId="12" locator="18:44-18:49" name="period" xsi:type="OperandRef"/>
                     </source>
                  </high>
               </then>
               <else localId="22" locator="20:13-20:62" lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low localId="18" locator="20:22-20:41" path="value" xsi:type="Property">
                     <source localId="17" locator="20:22-20:35" path="start" xsi:type="Property">
                        <source localId="16" locator="20:22-20:27" name="period" xsi:type="OperandRef"/>
                     </source>
                  </low>
                  <high localId="21" locator="20:44-20:61" path="value" xsi:type="Property">
                     <source localId="20" locator="20:44-20:55" path="end" xsi:type="Property">
                        <source localId="19" locator="20:44-20:49" name="period" xsi:type="OperandRef"/>
                     </source>
                  </high>
               </else>
            </else>
         </expression>
         <operand name="period">
            <operandTypeSpecifier localId="2" locator="13:35-13:45" name="fhir:Period" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="54" locator="22:1-33:7" name="ToCalendarUnit" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="54">
               <a:s>define function ToCalendarUnit(unit </a:s>
               <a:s r="26">
                  <a:s>System.String</a:s>
               </a:s>
               <a:s>):
    </a:s>
               <a:s r="53">
                  <a:s r="53">
                     <a:s>case </a:s>
                     <a:s r="27">
                        <a:s>unit</a:s>
                     </a:s>
                     <a:s>
        </a:s>
                     <a:s r="30">
                        <a:s>when </a:s>
                        <a:s r="28">
                           <a:s>'ms'</a:s>
                        </a:s>
                        <a:s> then </a:s>
                        <a:s r="29">
                           <a:s>'millisecond'</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
        </a:s>
                     <a:s r="33">
                        <a:s>when </a:s>
                        <a:s r="31">
                           <a:s>'s'</a:s>
                        </a:s>
                        <a:s> then </a:s>
                        <a:s r="32">
                           <a:s>'second'</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
        </a:s>
                     <a:s r="36">
                        <a:s>when </a:s>
                        <a:s r="34">
                           <a:s>'min'</a:s>
                        </a:s>
                        <a:s> then </a:s>
                        <a:s r="35">
                           <a:s>'minute'</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
        </a:s>
                     <a:s r="39">
                        <a:s>when </a:s>
                        <a:s r="37">
                           <a:s>'h'</a:s>
                        </a:s>
                        <a:s> then </a:s>
                        <a:s r="38">
                           <a:s>'hour'</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
        </a:s>
                     <a:s r="42">
                        <a:s>when </a:s>
                        <a:s r="40">
                           <a:s>'d'</a:s>
                        </a:s>
                        <a:s> then </a:s>
                        <a:s r="41">
                           <a:s>'day'</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
        </a:s>
                     <a:s r="45">
                        <a:s>when </a:s>
                        <a:s r="43">
                           <a:s>'wk'</a:s>
                        </a:s>
                        <a:s> then </a:s>
                        <a:s r="44">
                           <a:s>'week'</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
        </a:s>
                     <a:s r="48">
                        <a:s>when </a:s>
                        <a:s r="46">
                           <a:s>'mo'</a:s>
                        </a:s>
                        <a:s> then </a:s>
                        <a:s r="47">
                           <a:s>'month'</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
        </a:s>
                     <a:s r="51">
                        <a:s>when </a:s>
                        <a:s r="49">
                           <a:s>'a'</a:s>
                        </a:s>
                        <a:s> then </a:s>
                        <a:s r="50">
                           <a:s>'year'</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
        else </a:s>
                     <a:s r="52">
                        <a:s>unit</a:s>
                     </a:s>
                     <a:s>
    end</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="53" locator="23:5-33:7" xsi:type="Case">
            <comparand localId="27" locator="23:10-23:13" name="unit" xsi:type="OperandRef"/>
            <caseItem localId="30" locator="24:9-24:36">
               <when localId="28" locator="24:14-24:17" valueType="t:String" value="ms" xsi:type="Literal"/>
               <then localId="29" locator="24:24-24:36" valueType="t:String" value="millisecond" xsi:type="Literal"/>
            </caseItem>
            <caseItem localId="33" locator="25:9-25:30">
               <when localId="31" locator="25:14-25:16" valueType="t:String" value="s" xsi:type="Literal"/>
               <then localId="32" locator="25:23-25:30" valueType="t:String" value="second" xsi:type="Literal"/>
            </caseItem>
            <caseItem localId="36" locator="26:9-26:32">
               <when localId="34" locator="26:14-26:18" valueType="t:String" value="min" xsi:type="Literal"/>
               <then localId="35" locator="26:25-26:32" valueType="t:String" value="minute" xsi:type="Literal"/>
            </caseItem>
            <caseItem localId="39" locator="27:9-27:28">
               <when localId="37" locator="27:14-27:16" valueType="t:String" value="h" xsi:type="Literal"/>
               <then localId="38" locator="27:23-27:28" valueType="t:String" value="hour" xsi:type="Literal"/>
            </caseItem>
            <caseItem localId="42" locator="28:9-28:27">
               <when localId="40" locator="28:14-28:16" valueType="t:String" value="d" xsi:type="Literal"/>
               <then localId="41" locator="28:23-28:27" valueType="t:String" value="day" xsi:type="Literal"/>
            </caseItem>
            <caseItem localId="45" locator="29:9-29:29">
               <when localId="43" locator="29:14-29:17" valueType="t:String" value="wk" xsi:type="Literal"/>
               <then localId="44" locator="29:24-29:29" valueType="t:String" value="week" xsi:type="Literal"/>
            </caseItem>
            <caseItem localId="48" locator="30:9-30:30">
               <when localId="46" locator="30:14-30:17" valueType="t:String" value="mo" xsi:type="Literal"/>
               <then localId="47" locator="30:24-30:30" valueType="t:String" value="month" xsi:type="Literal"/>
            </caseItem>
            <caseItem localId="51" locator="31:9-31:28">
               <when localId="49" locator="31:14-31:16" valueType="t:String" value="a" xsi:type="Literal"/>
               <then localId="50" locator="31:23-31:28" valueType="t:String" value="year" xsi:type="Literal"/>
            </caseItem>
            <else localId="52" locator="32:14-32:17" name="unit" xsi:type="OperandRef"/>
         </expression>
         <operand name="unit">
            <operandTypeSpecifier localId="26" locator="22:37-22:49" name="t:String" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="129" locator="35:1-46:7" name="ToQuantity" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="129">
               <a:s>define function ToQuantity(quantity </a:s>
               <a:s r="55">
                  <a:s>FHIR.Quantity</a:s>
               </a:s>
               <a:s>):
    </a:s>
               <a:s r="128">
                  <a:s r="128">
                     <a:s>case
        </a:s>
                     <a:s r="59">
                        <a:s>when </a:s>
                        <a:s r="57">
                           <a:s r="56">
                              <a:s>quantity</a:s>
                           </a:s>
                           <a:s> is null</a:s>
                        </a:s>
                        <a:s r="58"> then null</a:s>
                     </a:s>
                     <a:s>
        </a:s>
                     <a:s r="64">
                        <a:s>when </a:s>
                        <a:s r="62">
                           <a:s r="61">
                              <a:s r="60">
                                 <a:s>quantity</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="61">
                                 <a:s>value</a:s>
                              </a:s>
                           </a:s>
                           <a:s> is null</a:s>
                        </a:s>
                        <a:s r="63"> then null</a:s>
                     </a:s>
                     <a:s>
        </a:s>
                     <a:s r="74">
                        <a:s>when </a:s>
                        <a:s r="67">
                           <a:s r="66">
                              <a:s r="65">
                                 <a:s>quantity</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="66">
                                 <a:s>comparator</a:s>
                              </a:s>
                           </a:s>
                           <a:s> is not null</a:s>
                        </a:s>
                        <a:s> then
            </a:s>
                        <a:s r="73">
                           <a:s r="68">Message(null, true, </a:s>
                           <a:s r="70">
                              <a:s>'FHIRHelpers.ToQuantity.ComparatorQuantityNotSupported'</a:s>
                           </a:s>
                           <a:s>, </a:s>
                           <a:s r="71">
                              <a:s>'Error'</a:s>
                           </a:s>
                           <a:s>, </a:s>
                           <a:s r="72">
                              <a:s>'FHIR Quantity value has a comparator and cannot be converted to a System.Quantity value.'</a:s>
                           </a:s>
                           <a:s>)</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
        </a:s>
                     <a:s r="103">
                        <a:s>when </a:s>
                        <a:s r="89">
                           <a:s r="83">
                              <a:s r="77">
                                 <a:s r="76">
                                    <a:s r="75">
                                       <a:s>quantity</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="76">
                                       <a:s>system</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s> is null</a:s>
                              </a:s>
                              <a:s> or </a:s>
                              <a:s r="82">
                                 <a:s r="80">
                                    <a:s r="79">
                                       <a:s r="78">
                                          <a:s>quantity</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="79">
                                          <a:s>system</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="80">
                                       <a:s>value</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s> = </a:s>
                                 <a:s r="81">
                                    <a:s>'http://unitsofmeasure.org'</a:s>
                                 </a:s>
                              </a:s>
                           </a:s>
                           <a:s>
              or </a:s>
                           <a:s r="88">
                              <a:s r="86">
                                 <a:s r="85">
                                    <a:s r="84">
                                       <a:s>quantity</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="85">
                                       <a:s>system</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="86">
                                    <a:s>value</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> = </a:s>
                              <a:s r="87">
                                 <a:s>'http://hl7.org/fhirpath/CodeSystem/calendar-units'</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                        <a:s> then
            </a:s>
                        <a:s r="102">
                           <a:s>System.Quantity { </a:s>
                           <a:s>
                              <a:s>value: </a:s>
                              <a:s r="92">
                                 <a:s r="91">
                                    <a:s r="90">
                                       <a:s>quantity</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="91">
                                       <a:s>value</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="92">
                                    <a:s>value</a:s>
                                 </a:s>
                              </a:s>
                           </a:s>
                           <a:s>, </a:s>
                           <a:s>
                              <a:s>unit: </a:s>
                              <a:s r="101">
                                 <a:s>ToCalendarUnit(</a:s>
                                 <a:s r="100">
                                    <a:s>Coalesce(</a:s>
                                    <a:s r="95">
                                       <a:s r="94">
                                          <a:s r="93">
                                             <a:s>quantity</a:s>
                                          </a:s>
                                          <a:s>.</a:s>
                                          <a:s r="94">
                                             <a:s>code</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="95">
                                          <a:s>value</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>, </a:s>
                                    <a:s r="98">
                                       <a:s r="97">
                                          <a:s r="96">
                                             <a:s>quantity</a:s>
                                          </a:s>
                                          <a:s>.</a:s>
                                          <a:s r="97">
                                             <a:s>unit</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="98">
                                          <a:s>value</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>, </a:s>
                                    <a:s r="99">
                                       <a:s>'1'</a:s>
                                    </a:s>
                                    <a:s>)</a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                           </a:s>
                           <a:s> }</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
        else
            </a:s>
                     <a:s r="127">
                        <a:s r="104">Message(null, true, </a:s>
                        <a:s r="106">
                           <a:s>'FHIRHelpers.ToQuantity.InvalidFHIRQuantity'</a:s>
                        </a:s>
                        <a:s>, </a:s>
                        <a:s r="107">
                           <a:s>'Error'</a:s>
                        </a:s>
                        <a:s>, </a:s>
                        <a:s r="126">
                           <a:s r="124">
                              <a:s r="120">
                                 <a:s r="118">
                                    <a:s r="114">
                                       <a:s r="112">
                                          <a:s r="108">
                                             <a:s>'Invalid FHIR Quantity code: '</a:s>
                                          </a:s>
                                          <a:s> &amp; </a:s>
                                          <a:s r="111">
                                             <a:s r="110">
                                                <a:s r="109">
                                                   <a:s>quantity</a:s>
                                                </a:s>
                                                <a:s>.</a:s>
                                                <a:s r="110">
                                                   <a:s>unit</a:s>
                                                </a:s>
                                             </a:s>
                                             <a:s>.</a:s>
                                             <a:s r="111">
                                                <a:s>value</a:s>
                                             </a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s> &amp; </a:s>
                                       <a:s r="113">
                                          <a:s>' ('</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s> &amp; </a:s>
                                    <a:s r="117">
                                       <a:s r="116">
                                          <a:s r="115">
                                             <a:s>quantity</a:s>
                                          </a:s>
                                          <a:s>.</a:s>
                                          <a:s r="116">
                                             <a:s>system</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="117">
                                          <a:s>value</a:s>
                                       </a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s> &amp; </a:s>
                                 <a:s r="119">
                                    <a:s>'|'</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> &amp; </a:s>
                              <a:s r="123">
                                 <a:s r="122">
                                    <a:s r="121">
                                       <a:s>quantity</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="122">
                                       <a:s>code</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="123">
                                    <a:s>value</a:s>
                                 </a:s>
                              </a:s>
                           </a:s>
                           <a:s> &amp; </a:s>
                           <a:s r="125">
                              <a:s>')'</a:s>
                           </a:s>
                        </a:s>
                        <a:s>)</a:s>
                     </a:s>
                     <a:s>
    end</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="128" locator="36:5-46:7" xsi:type="Case">
            <caseItem localId="59" locator="37:9-37:39">
               <when localId="57" locator="37:14-37:29" xsi:type="IsNull">
                  <operand localId="56" locator="37:14-37:21" name="quantity" xsi:type="OperandRef"/>
               </when>
               <then asType="t:Quantity" xsi:type="As">
                  <operand localId="58" locator="37:36-37:39" xsi:type="Null"/>
               </then>
            </caseItem>
            <caseItem localId="64" locator="38:9-38:45">
               <when localId="62" locator="38:14-38:35" xsi:type="IsNull">
                  <operand localId="61" locator="38:14-38:27" path="value" xsi:type="Property">
                     <source localId="60" locator="38:14-38:21" name="quantity" xsi:type="OperandRef"/>
                  </operand>
               </when>
               <then asType="t:Quantity" xsi:type="As">
                  <operand localId="63" locator="38:42-38:45" xsi:type="Null"/>
               </then>
            </caseItem>
            <caseItem localId="74" locator="39:9-40:189">
               <when localId="67" locator="39:14-39:44" xsi:type="Not">
                  <operand locator="39:14-39:44" xsi:type="IsNull">
                     <operand localId="66" locator="39:14-39:32" path="comparator" xsi:type="Property">
                        <source localId="65" locator="39:14-39:21" name="quantity" xsi:type="OperandRef"/>
                     </operand>
                  </operand>
               </when>
               <then asType="t:Quantity" xsi:type="As">
                  <operand localId="73" locator="40:13-40:189" xsi:type="Message">
                     <source localId="68" locator="40:21-40:24" xsi:type="Null"/>
                     <condition localId="69" locator="40:27-40:30" valueType="t:Boolean" value="true" xsi:type="Literal"/>
                     <code localId="70" locator="40:33-40:87" valueType="t:String" value="FHIRHelpers.ToQuantity.ComparatorQuantityNotSupported" xsi:type="Literal"/>
                     <severity localId="71" locator="40:90-40:96" valueType="t:String" value="Error" xsi:type="Literal"/>
                     <message localId="72" locator="40:99-40:188" valueType="t:String" value="FHIR Quantity value has a comparator and cannot be converted to a System.Quantity value." xsi:type="Literal"/>
                  </operand>
               </then>
            </caseItem>
            <caseItem localId="103" locator="41:9-43:138">
               <when localId="89" locator="41:14-42:92" xsi:type="Or">
                  <operand localId="83" locator="41:14-41:91" xsi:type="Or">
                     <operand localId="77" locator="41:14-41:36" xsi:type="IsNull">
                        <operand localId="76" locator="41:14-41:28" path="system" xsi:type="Property">
                           <source localId="75" locator="41:14-41:21" name="quantity" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                     <operand localId="82" locator="41:41-41:91" xsi:type="Equal">
                        <operand localId="80" locator="41:41-41:61" path="value" xsi:type="Property">
                           <source localId="79" locator="41:41-41:55" path="system" xsi:type="Property">
                              <source localId="78" locator="41:41-41:48" name="quantity" xsi:type="OperandRef"/>
                           </source>
                        </operand>
                        <operand localId="81" locator="41:65-41:91" valueType="t:String" value="http://unitsofmeasure.org" xsi:type="Literal"/>
                     </operand>
                  </operand>
                  <operand localId="88" locator="42:18-42:92" xsi:type="Equal">
                     <operand localId="86" locator="42:18-42:38" path="value" xsi:type="Property">
                        <source localId="85" locator="42:18-42:32" path="system" xsi:type="Property">
                           <source localId="84" locator="42:18-42:25" name="quantity" xsi:type="OperandRef"/>
                        </source>
                     </operand>
                     <operand localId="87" locator="42:42-42:92" valueType="t:String" value="http://hl7.org/fhirpath/CodeSystem/calendar-units" xsi:type="Literal"/>
                  </operand>
               </when>
               <then localId="102" locator="43:13-43:138" classType="t:Quantity" xsi:type="Instance">
                  <element name="value">
                     <value localId="92" locator="43:38-43:57" path="value" xsi:type="Property">
                        <source localId="91" locator="43:38-43:51" path="value" xsi:type="Property">
                           <source localId="90" locator="43:38-43:45" name="quantity" xsi:type="OperandRef"/>
                        </source>
                     </value>
                  </element>
                  <element name="unit">
                     <value localId="101" locator="43:66-43:136" name="ToCalendarUnit" xsi:type="FunctionRef">
                        <operand localId="100" locator="43:81-43:135" xsi:type="Coalesce">
                           <operand localId="95" locator="43:90-43:108" path="value" xsi:type="Property">
                              <source localId="94" locator="43:90-43:102" path="code" xsi:type="Property">
                                 <source localId="93" locator="43:90-43:97" name="quantity" xsi:type="OperandRef"/>
                              </source>
                           </operand>
                           <operand localId="98" locator="43:111-43:129" path="value" xsi:type="Property">
                              <source localId="97" locator="43:111-43:123" path="unit" xsi:type="Property">
                                 <source localId="96" locator="43:111-43:118" name="quantity" xsi:type="OperandRef"/>
                              </source>
                           </operand>
                           <operand localId="99" locator="43:132-43:134" valueType="t:String" value="1" xsi:type="Literal"/>
                        </operand>
                     </value>
                  </element>
               </then>
            </caseItem>
            <else asType="t:Quantity" xsi:type="As">
               <operand localId="127" locator="45:13-45:205" xsi:type="Message">
                  <source localId="104" locator="45:21-45:24" xsi:type="Null"/>
                  <condition localId="105" locator="45:27-45:30" valueType="t:Boolean" value="true" xsi:type="Literal"/>
                  <code localId="106" locator="45:33-45:76" valueType="t:String" value="FHIRHelpers.ToQuantity.InvalidFHIRQuantity" xsi:type="Literal"/>
                  <severity localId="107" locator="45:79-45:85" valueType="t:String" value="Error" xsi:type="Literal"/>
                  <message localId="126" locator="45:88-45:204" xsi:type="Concatenate">
                     <operand xsi:type="Coalesce">
                        <operand localId="124" locator="45:88-45:198" xsi:type="Concatenate">
                           <operand xsi:type="Coalesce">
                              <operand localId="120" locator="45:88-45:176" xsi:type="Concatenate">
                                 <operand xsi:type="Coalesce">
                                    <operand localId="118" locator="45:88-45:170" xsi:type="Concatenate">
                                       <operand xsi:type="Coalesce">
                                          <operand localId="114" locator="45:88-45:146" xsi:type="Concatenate">
                                             <operand xsi:type="Coalesce">
                                                <operand localId="112" locator="45:88-45:139" xsi:type="Concatenate">
                                                   <operand xsi:type="Coalesce">
                                                      <operand localId="108" locator="45:88-45:117" valueType="t:String" value="Invalid FHIR Quantity code: " xsi:type="Literal"/>
                                                      <operand valueType="t:String" value="" xsi:type="Literal"/>
                                                   </operand>
                                                   <operand xsi:type="Coalesce">
                                                      <operand localId="111" locator="45:121-45:139" path="value" xsi:type="Property">
                                                         <source localId="110" locator="45:121-45:133" path="unit" xsi:type="Property">
                                                            <source localId="109" locator="45:121-45:128" name="quantity" xsi:type="OperandRef"/>
                                                         </source>
                                                      </operand>
                                                      <operand valueType="t:String" value="" xsi:type="Literal"/>
                                                   </operand>
                                                </operand>
                                                <operand valueType="t:String" value="" xsi:type="Literal"/>
                                             </operand>
                                             <operand xsi:type="Coalesce">
                                                <operand localId="113" locator="45:143-45:146" valueType="t:String" value=" (" xsi:type="Literal"/>
                                                <operand valueType="t:String" value="" xsi:type="Literal"/>
                                             </operand>
                                          </operand>
                                          <operand valueType="t:String" value="" xsi:type="Literal"/>
                                       </operand>
                                       <operand xsi:type="Coalesce">
                                          <operand localId="117" locator="45:150-45:170" path="value" xsi:type="Property">
                                             <source localId="116" locator="45:150-45:164" path="system" xsi:type="Property">
                                                <source localId="115" locator="45:150-45:157" name="quantity" xsi:type="OperandRef"/>
                                             </source>
                                          </operand>
                                          <operand valueType="t:String" value="" xsi:type="Literal"/>
                                       </operand>
                                    </operand>
                                    <operand valueType="t:String" value="" xsi:type="Literal"/>
                                 </operand>
                                 <operand xsi:type="Coalesce">
                                    <operand localId="119" locator="45:174-45:176" valueType="t:String" value="|" xsi:type="Literal"/>
                                    <operand valueType="t:String" value="" xsi:type="Literal"/>
                                 </operand>
                              </operand>
                              <operand valueType="t:String" value="" xsi:type="Literal"/>
                           </operand>
                           <operand xsi:type="Coalesce">
                              <operand localId="123" locator="45:180-45:198" path="value" xsi:type="Property">
                                 <source localId="122" locator="45:180-45:192" path="code" xsi:type="Property">
                                    <source localId="121" locator="45:180-45:187" name="quantity" xsi:type="OperandRef"/>
                                 </source>
                              </operand>
                              <operand valueType="t:String" value="" xsi:type="Literal"/>
                           </operand>
                        </operand>
                        <operand valueType="t:String" value="" xsi:type="Literal"/>
                     </operand>
                     <operand xsi:type="Coalesce">
                        <operand localId="125" locator="45:202-45:204" valueType="t:String" value=")" xsi:type="Literal"/>
                        <operand valueType="t:String" value="" xsi:type="Literal"/>
                     </operand>
                  </message>
               </operand>
            </else>
         </expression>
         <operand name="quantity">
            <operandTypeSpecifier localId="55" locator="35:37-35:49" name="fhir:Quantity" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="194" locator="48:1-57:7" name="ToQuantityIgnoringComparator" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="194">
               <a:s>define function ToQuantityIgnoringComparator(quantity </a:s>
               <a:s r="130">
                  <a:s>FHIR.Quantity</a:s>
               </a:s>
               <a:s>):
    </a:s>
               <a:s r="193">
                  <a:s r="193">
                     <a:s>case
        </a:s>
                     <a:s r="134">
                        <a:s>when </a:s>
                        <a:s r="132">
                           <a:s r="131">
                              <a:s>quantity</a:s>
                           </a:s>
                           <a:s> is null</a:s>
                        </a:s>
                        <a:s r="133"> then null</a:s>
                     </a:s>
                     <a:s>
        </a:s>
                     <a:s r="139">
                        <a:s>when </a:s>
                        <a:s r="137">
                           <a:s r="136">
                              <a:s r="135">
                                 <a:s>quantity</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="136">
                                 <a:s>value</a:s>
                              </a:s>
                           </a:s>
                           <a:s> is null</a:s>
                        </a:s>
                        <a:s r="138"> then null</a:s>
                     </a:s>
                     <a:s>
        </a:s>
                     <a:s r="168">
                        <a:s>when </a:s>
                        <a:s r="154">
                           <a:s r="148">
                              <a:s r="142">
                                 <a:s r="141">
                                    <a:s r="140">
                                       <a:s>quantity</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="141">
                                       <a:s>system</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s> is null</a:s>
                              </a:s>
                              <a:s> or </a:s>
                              <a:s r="147">
                                 <a:s r="145">
                                    <a:s r="144">
                                       <a:s r="143">
                                          <a:s>quantity</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="144">
                                          <a:s>system</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="145">
                                       <a:s>value</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s> = </a:s>
                                 <a:s r="146">
                                    <a:s>'http://unitsofmeasure.org'</a:s>
                                 </a:s>
                              </a:s>
                           </a:s>
                           <a:s>
              or </a:s>
                           <a:s r="153">
                              <a:s r="151">
                                 <a:s r="150">
                                    <a:s r="149">
                                       <a:s>quantity</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="150">
                                       <a:s>system</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="151">
                                    <a:s>value</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> = </a:s>
                              <a:s r="152">
                                 <a:s>'http://hl7.org/fhirpath/CodeSystem/calendar-units'</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                        <a:s> then
            </a:s>
                        <a:s r="167">
                           <a:s>System.Quantity { </a:s>
                           <a:s>
                              <a:s>value: </a:s>
                              <a:s r="157">
                                 <a:s r="156">
                                    <a:s r="155">
                                       <a:s>quantity</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="156">
                                       <a:s>value</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="157">
                                    <a:s>value</a:s>
                                 </a:s>
                              </a:s>
                           </a:s>
                           <a:s>, </a:s>
                           <a:s>
                              <a:s>unit: </a:s>
                              <a:s r="166">
                                 <a:s>ToCalendarUnit(</a:s>
                                 <a:s r="165">
                                    <a:s>Coalesce(</a:s>
                                    <a:s r="160">
                                       <a:s r="159">
                                          <a:s r="158">
                                             <a:s>quantity</a:s>
                                          </a:s>
                                          <a:s>.</a:s>
                                          <a:s r="159">
                                             <a:s>code</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="160">
                                          <a:s>value</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>, </a:s>
                                    <a:s r="163">
                                       <a:s r="162">
                                          <a:s r="161">
                                             <a:s>quantity</a:s>
                                          </a:s>
                                          <a:s>.</a:s>
                                          <a:s r="162">
                                             <a:s>unit</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="163">
                                          <a:s>value</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>, </a:s>
                                    <a:s r="164">
                                       <a:s>'1'</a:s>
                                    </a:s>
                                    <a:s>)</a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                           </a:s>
                           <a:s> }</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
        else
            </a:s>
                     <a:s r="192">
                        <a:s r="169">Message(null, true, </a:s>
                        <a:s r="171">
                           <a:s>'FHIRHelpers.ToQuantity.InvalidFHIRQuantity'</a:s>
                        </a:s>
                        <a:s>, </a:s>
                        <a:s r="172">
                           <a:s>'Error'</a:s>
                        </a:s>
                        <a:s>, </a:s>
                        <a:s r="191">
                           <a:s r="189">
                              <a:s r="185">
                                 <a:s r="183">
                                    <a:s r="179">
                                       <a:s r="177">
                                          <a:s r="173">
                                             <a:s>'Invalid FHIR Quantity code: '</a:s>
                                          </a:s>
                                          <a:s> &amp; </a:s>
                                          <a:s r="176">
                                             <a:s r="175">
                                                <a:s r="174">
                                                   <a:s>quantity</a:s>
                                                </a:s>
                                                <a:s>.</a:s>
                                                <a:s r="175">
                                                   <a:s>unit</a:s>
                                                </a:s>
                                             </a:s>
                                             <a:s>.</a:s>
                                             <a:s r="176">
                                                <a:s>value</a:s>
                                             </a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s> &amp; </a:s>
                                       <a:s r="178">
                                          <a:s>' ('</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s> &amp; </a:s>
                                    <a:s r="182">
                                       <a:s r="181">
                                          <a:s r="180">
                                             <a:s>quantity</a:s>
                                          </a:s>
                                          <a:s>.</a:s>
                                          <a:s r="181">
                                             <a:s>system</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="182">
                                          <a:s>value</a:s>
                                       </a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s> &amp; </a:s>
                                 <a:s r="184">
                                    <a:s>'|'</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> &amp; </a:s>
                              <a:s r="188">
                                 <a:s r="187">
                                    <a:s r="186">
                                       <a:s>quantity</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="187">
                                       <a:s>code</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="188">
                                    <a:s>value</a:s>
                                 </a:s>
                              </a:s>
                           </a:s>
                           <a:s> &amp; </a:s>
                           <a:s r="190">
                              <a:s>')'</a:s>
                           </a:s>
                        </a:s>
                        <a:s>)</a:s>
                     </a:s>
                     <a:s>
    end</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="193" locator="49:5-57:7" xsi:type="Case">
            <caseItem localId="134" locator="50:9-50:39">
               <when localId="132" locator="50:14-50:29" xsi:type="IsNull">
                  <operand localId="131" locator="50:14-50:21" name="quantity" xsi:type="OperandRef"/>
               </when>
               <then asType="t:Quantity" xsi:type="As">
                  <operand localId="133" locator="50:36-50:39" xsi:type="Null"/>
               </then>
            </caseItem>
            <caseItem localId="139" locator="51:9-51:45">
               <when localId="137" locator="51:14-51:35" xsi:type="IsNull">
                  <operand localId="136" locator="51:14-51:27" path="value" xsi:type="Property">
                     <source localId="135" locator="51:14-51:21" name="quantity" xsi:type="OperandRef"/>
                  </operand>
               </when>
               <then asType="t:Quantity" xsi:type="As">
                  <operand localId="138" locator="51:42-51:45" xsi:type="Null"/>
               </then>
            </caseItem>
            <caseItem localId="168" locator="52:9-54:138">
               <when localId="154" locator="52:14-53:92" xsi:type="Or">
                  <operand localId="148" locator="52:14-52:91" xsi:type="Or">
                     <operand localId="142" locator="52:14-52:36" xsi:type="IsNull">
                        <operand localId="141" locator="52:14-52:28" path="system" xsi:type="Property">
                           <source localId="140" locator="52:14-52:21" name="quantity" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                     <operand localId="147" locator="52:41-52:91" xsi:type="Equal">
                        <operand localId="145" locator="52:41-52:61" path="value" xsi:type="Property">
                           <source localId="144" locator="52:41-52:55" path="system" xsi:type="Property">
                              <source localId="143" locator="52:41-52:48" name="quantity" xsi:type="OperandRef"/>
                           </source>
                        </operand>
                        <operand localId="146" locator="52:65-52:91" valueType="t:String" value="http://unitsofmeasure.org" xsi:type="Literal"/>
                     </operand>
                  </operand>
                  <operand localId="153" locator="53:18-53:92" xsi:type="Equal">
                     <operand localId="151" locator="53:18-53:38" path="value" xsi:type="Property">
                        <source localId="150" locator="53:18-53:32" path="system" xsi:type="Property">
                           <source localId="149" locator="53:18-53:25" name="quantity" xsi:type="OperandRef"/>
                        </source>
                     </operand>
                     <operand localId="152" locator="53:42-53:92" valueType="t:String" value="http://hl7.org/fhirpath/CodeSystem/calendar-units" xsi:type="Literal"/>
                  </operand>
               </when>
               <then localId="167" locator="54:13-54:138" classType="t:Quantity" xsi:type="Instance">
                  <element name="value">
                     <value localId="157" locator="54:38-54:57" path="value" xsi:type="Property">
                        <source localId="156" locator="54:38-54:51" path="value" xsi:type="Property">
                           <source localId="155" locator="54:38-54:45" name="quantity" xsi:type="OperandRef"/>
                        </source>
                     </value>
                  </element>
                  <element name="unit">
                     <value localId="166" locator="54:66-54:136" name="ToCalendarUnit" xsi:type="FunctionRef">
                        <operand localId="165" locator="54:81-54:135" xsi:type="Coalesce">
                           <operand localId="160" locator="54:90-54:108" path="value" xsi:type="Property">
                              <source localId="159" locator="54:90-54:102" path="code" xsi:type="Property">
                                 <source localId="158" locator="54:90-54:97" name="quantity" xsi:type="OperandRef"/>
                              </source>
                           </operand>
                           <operand localId="163" locator="54:111-54:129" path="value" xsi:type="Property">
                              <source localId="162" locator="54:111-54:123" path="unit" xsi:type="Property">
                                 <source localId="161" locator="54:111-54:118" name="quantity" xsi:type="OperandRef"/>
                              </source>
                           </operand>
                           <operand localId="164" locator="54:132-54:134" valueType="t:String" value="1" xsi:type="Literal"/>
                        </operand>
                     </value>
                  </element>
               </then>
            </caseItem>
            <else asType="t:Quantity" xsi:type="As">
               <operand localId="192" locator="56:13-56:205" xsi:type="Message">
                  <source localId="169" locator="56:21-56:24" xsi:type="Null"/>
                  <condition localId="170" locator="56:27-56:30" valueType="t:Boolean" value="true" xsi:type="Literal"/>
                  <code localId="171" locator="56:33-56:76" valueType="t:String" value="FHIRHelpers.ToQuantity.InvalidFHIRQuantity" xsi:type="Literal"/>
                  <severity localId="172" locator="56:79-56:85" valueType="t:String" value="Error" xsi:type="Literal"/>
                  <message localId="191" locator="56:88-56:204" xsi:type="Concatenate">
                     <operand xsi:type="Coalesce">
                        <operand localId="189" locator="56:88-56:198" xsi:type="Concatenate">
                           <operand xsi:type="Coalesce">
                              <operand localId="185" locator="56:88-56:176" xsi:type="Concatenate">
                                 <operand xsi:type="Coalesce">
                                    <operand localId="183" locator="56:88-56:170" xsi:type="Concatenate">
                                       <operand xsi:type="Coalesce">
                                          <operand localId="179" locator="56:88-56:146" xsi:type="Concatenate">
                                             <operand xsi:type="Coalesce">
                                                <operand localId="177" locator="56:88-56:139" xsi:type="Concatenate">
                                                   <operand xsi:type="Coalesce">
                                                      <operand localId="173" locator="56:88-56:117" valueType="t:String" value="Invalid FHIR Quantity code: " xsi:type="Literal"/>
                                                      <operand valueType="t:String" value="" xsi:type="Literal"/>
                                                   </operand>
                                                   <operand xsi:type="Coalesce">
                                                      <operand localId="176" locator="56:121-56:139" path="value" xsi:type="Property">
                                                         <source localId="175" locator="56:121-56:133" path="unit" xsi:type="Property">
                                                            <source localId="174" locator="56:121-56:128" name="quantity" xsi:type="OperandRef"/>
                                                         </source>
                                                      </operand>
                                                      <operand valueType="t:String" value="" xsi:type="Literal"/>
                                                   </operand>
                                                </operand>
                                                <operand valueType="t:String" value="" xsi:type="Literal"/>
                                             </operand>
                                             <operand xsi:type="Coalesce">
                                                <operand localId="178" locator="56:143-56:146" valueType="t:String" value=" (" xsi:type="Literal"/>
                                                <operand valueType="t:String" value="" xsi:type="Literal"/>
                                             </operand>
                                          </operand>
                                          <operand valueType="t:String" value="" xsi:type="Literal"/>
                                       </operand>
                                       <operand xsi:type="Coalesce">
                                          <operand localId="182" locator="56:150-56:170" path="value" xsi:type="Property">
                                             <source localId="181" locator="56:150-56:164" path="system" xsi:type="Property">
                                                <source localId="180" locator="56:150-56:157" name="quantity" xsi:type="OperandRef"/>
                                             </source>
                                          </operand>
                                          <operand valueType="t:String" value="" xsi:type="Literal"/>
                                       </operand>
                                    </operand>
                                    <operand valueType="t:String" value="" xsi:type="Literal"/>
                                 </operand>
                                 <operand xsi:type="Coalesce">
                                    <operand localId="184" locator="56:174-56:176" valueType="t:String" value="|" xsi:type="Literal"/>
                                    <operand valueType="t:String" value="" xsi:type="Literal"/>
                                 </operand>
                              </operand>
                              <operand valueType="t:String" value="" xsi:type="Literal"/>
                           </operand>
                           <operand xsi:type="Coalesce">
                              <operand localId="188" locator="56:180-56:198" path="value" xsi:type="Property">
                                 <source localId="187" locator="56:180-56:192" path="code" xsi:type="Property">
                                    <source localId="186" locator="56:180-56:187" name="quantity" xsi:type="OperandRef"/>
                                 </source>
                              </operand>
                              <operand valueType="t:String" value="" xsi:type="Literal"/>
                           </operand>
                        </operand>
                        <operand valueType="t:String" value="" xsi:type="Literal"/>
                     </operand>
                     <operand xsi:type="Coalesce">
                        <operand localId="190" locator="56:202-56:204" valueType="t:String" value=")" xsi:type="Literal"/>
                        <operand valueType="t:String" value="" xsi:type="Literal"/>
                     </operand>
                  </message>
               </operand>
            </else>
         </expression>
         <operand name="quantity">
            <operandTypeSpecifier localId="130" locator="48:55-48:67" name="fhir:Quantity" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="233" locator="59:1-84:11" name="ToInterval" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="233">
               <a:s>define function ToInterval(quantity </a:s>
               <a:s r="195">
                  <a:s>FHIR.Quantity</a:s>
               </a:s>
               <a:s>):
    </a:s>
               <a:s r="232">
                  <a:s r="232">
                     <a:s>if </a:s>
                     <a:s r="197">
                        <a:s r="196">
                           <a:s>quantity</a:s>
                        </a:s>
                        <a:s> is null</a:s>
                     </a:s>
                     <a:s r="198"> then null else
        </a:s>
                     <a:s r="231">
                        <a:s>case </a:s>
                        <a:s r="201">
                           <a:s r="200">
                              <a:s r="199">
                                 <a:s>quantity</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="200">
                                 <a:s>comparator</a:s>
                              </a:s>
                           </a:s>
                           <a:s>.</a:s>
                           <a:s r="201">
                              <a:s>value</a:s>
                           </a:s>
                        </a:s>
                        <a:s>
            </a:s>
                        <a:s r="207">
                           <a:s>when </a:s>
                           <a:s r="202">
                              <a:s>'&lt;'</a:s>
                           </a:s>
                           <a:s> then
                </a:s>
                           <a:s r="206">
                              <a:s r="203">Interval[
                    null,
                    </a:s>
                              <a:s r="205">
                                 <a:s>ToQuantityIgnoringComparator(</a:s>
                                 <a:s r="204">
                                    <a:s>quantity</a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                              <a:s>
                )</a:s>
                           </a:s>
                        </a:s>
                        <a:s>
            </a:s>
                        <a:s r="213">
                           <a:s>when </a:s>
                           <a:s r="208">
                              <a:s>'&lt;='</a:s>
                           </a:s>
                           <a:s> then
                </a:s>
                           <a:s r="212">
                              <a:s r="209">Interval[
                    null,
                    </a:s>
                              <a:s r="211">
                                 <a:s>ToQuantityIgnoringComparator(</a:s>
                                 <a:s r="210">
                                    <a:s>quantity</a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                              <a:s>
                ]</a:s>
                           </a:s>
                        </a:s>
                        <a:s>
            </a:s>
                        <a:s r="219">
                           <a:s>when </a:s>
                           <a:s r="214">
                              <a:s>'>='</a:s>
                           </a:s>
                           <a:s> then
                </a:s>
                           <a:s r="218">
                              <a:s>Interval[
                    </a:s>
                              <a:s r="216">
                                 <a:s>ToQuantityIgnoringComparator(</a:s>
                                 <a:s r="215">
                                    <a:s>quantity</a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                              <a:s r="217">,
                    null
                ]</a:s>
                           </a:s>
                        </a:s>
                        <a:s>
            </a:s>
                        <a:s r="225">
                           <a:s>when </a:s>
                           <a:s r="220">
                              <a:s>'>'</a:s>
                           </a:s>
                           <a:s> then
                </a:s>
                           <a:s r="224">
                              <a:s>Interval(
                    </a:s>
                              <a:s r="222">
                                 <a:s>ToQuantityIgnoringComparator(</a:s>
                                 <a:s r="221">
                                    <a:s>quantity</a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                              <a:s r="223">,
                    null
                ]</a:s>
                           </a:s>
                        </a:s>
                        <a:s>
            else
                </a:s>
                        <a:s r="230">
                           <a:s>Interval[</a:s>
                           <a:s r="227">
                              <a:s>ToQuantity(</a:s>
                              <a:s r="226">
                                 <a:s>quantity</a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                           <a:s>, </a:s>
                           <a:s r="229">
                              <a:s>ToQuantity(</a:s>
                              <a:s r="228">
                                 <a:s>quantity</a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                           <a:s>]</a:s>
                        </a:s>
                        <a:s>
        end</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="232" locator="60:5-84:11" xsi:type="If">
            <condition localId="197" locator="60:8-60:23" xsi:type="IsNull">
               <operand localId="196" locator="60:8-60:15" name="quantity" xsi:type="OperandRef"/>
            </condition>
            <then xsi:type="As">
               <operand localId="198" locator="60:30-60:33" xsi:type="Null"/>
               <asTypeSpecifier xsi:type="IntervalTypeSpecifier">
                  <pointType name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
               </asTypeSpecifier>
            </then>
            <else localId="231" locator="61:9-84:11" xsi:type="Case">
               <comparand localId="201" locator="61:14-61:38" path="value" xsi:type="Property">
                  <source localId="200" locator="61:14-61:32" path="comparator" xsi:type="Property">
                     <source localId="199" locator="61:14-61:21" name="quantity" xsi:type="OperandRef"/>
                  </source>
               </comparand>
               <caseItem localId="207" locator="62:13-66:17">
                  <when localId="202" locator="62:18-62:20" valueType="t:String" value="&lt;" xsi:type="Literal"/>
                  <then localId="206" locator="63:17-66:17" lowClosed="true" highClosed="false" xsi:type="Interval">
                     <low asType="t:Quantity" xsi:type="As">
                        <operand localId="203" locator="64:21-64:24" xsi:type="Null"/>
                     </low>
                     <high localId="205" locator="65:21-65:58" name="ToQuantityIgnoringComparator" xsi:type="FunctionRef">
                        <operand localId="204" locator="65:50-65:57" name="quantity" xsi:type="OperandRef"/>
                     </high>
                  </then>
               </caseItem>
               <caseItem localId="213" locator="67:13-71:17">
                  <when localId="208" locator="67:18-67:21" valueType="t:String" value="&lt;=" xsi:type="Literal"/>
                  <then localId="212" locator="68:17-71:17" lowClosed="true" highClosed="true" xsi:type="Interval">
                     <low asType="t:Quantity" xsi:type="As">
                        <operand localId="209" locator="69:21-69:24" xsi:type="Null"/>
                     </low>
                     <high localId="211" locator="70:21-70:58" name="ToQuantityIgnoringComparator" xsi:type="FunctionRef">
                        <operand localId="210" locator="70:50-70:57" name="quantity" xsi:type="OperandRef"/>
                     </high>
                  </then>
               </caseItem>
               <caseItem localId="219" locator="72:13-76:17">
                  <when localId="214" locator="72:18-72:21" valueType="t:String" value=">=" xsi:type="Literal"/>
                  <then localId="218" locator="73:17-76:17" lowClosed="true" highClosed="true" xsi:type="Interval">
                     <low localId="216" locator="74:21-74:58" name="ToQuantityIgnoringComparator" xsi:type="FunctionRef">
                        <operand localId="215" locator="74:50-74:57" name="quantity" xsi:type="OperandRef"/>
                     </low>
                     <high asType="t:Quantity" xsi:type="As">
                        <operand localId="217" locator="75:21-75:24" xsi:type="Null"/>
                     </high>
                  </then>
               </caseItem>
               <caseItem localId="225" locator="77:13-81:17">
                  <when localId="220" locator="77:18-77:20" valueType="t:String" value=">" xsi:type="Literal"/>
                  <then localId="224" locator="78:17-81:17" lowClosed="false" highClosed="true" xsi:type="Interval">
                     <low localId="222" locator="79:21-79:58" name="ToQuantityIgnoringComparator" xsi:type="FunctionRef">
                        <operand localId="221" locator="79:50-79:57" name="quantity" xsi:type="OperandRef"/>
                     </low>
                     <high asType="t:Quantity" xsi:type="As">
                        <operand localId="223" locator="80:21-80:24" xsi:type="Null"/>
                     </high>
                  </then>
               </caseItem>
               <else localId="230" locator="83:17-83:68" lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low localId="227" locator="83:26-83:45" name="ToQuantity" xsi:type="FunctionRef">
                     <operand localId="226" locator="83:37-83:44" name="quantity" xsi:type="OperandRef"/>
                  </low>
                  <high localId="229" locator="83:48-83:67" name="ToQuantity" xsi:type="FunctionRef">
                     <operand localId="228" locator="83:59-83:66" name="quantity" xsi:type="OperandRef"/>
                  </high>
               </else>
            </else>
         </expression>
         <operand name="quantity">
            <operandTypeSpecifier localId="195" locator="59:37-59:49" name="fhir:Quantity" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="246" locator="86:1-90:107" name="ToRatio" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="246">
               <a:s>define function ToRatio(ratio </a:s>
               <a:s r="234">
                  <a:s>FHIR.Ratio</a:s>
               </a:s>
               <a:s>):
    </a:s>
               <a:s r="245">
                  <a:s r="245">
                     <a:s>if </a:s>
                     <a:s r="236">
                        <a:s r="235">
                           <a:s>ratio</a:s>
                        </a:s>
                        <a:s> is null</a:s>
                     </a:s>
                     <a:s r="237"> then
        null
    else
        </a:s>
                     <a:s r="244">
                        <a:s>System.Ratio { </a:s>
                        <a:s>
                           <a:s>numerator: </a:s>
                           <a:s r="240">
                              <a:s>ToQuantity(</a:s>
                              <a:s r="239">
                                 <a:s r="238">
                                    <a:s>ratio</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="239">
                                    <a:s>numerator</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                        </a:s>
                        <a:s>, </a:s>
                        <a:s>
                           <a:s>denominator: </a:s>
                           <a:s r="243">
                              <a:s>ToQuantity(</a:s>
                              <a:s r="242">
                                 <a:s r="241">
                                    <a:s>ratio</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="242">
                                    <a:s>denominator</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                        </a:s>
                        <a:s> }</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="245" locator="87:5-90:107" xsi:type="If">
            <condition localId="236" locator="87:8-87:20" xsi:type="IsNull">
               <operand localId="235" locator="87:8-87:12" name="ratio" xsi:type="OperandRef"/>
            </condition>
            <then asType="t:Ratio" xsi:type="As">
               <operand localId="237" locator="88:9-88:12" xsi:type="Null"/>
            </then>
            <else localId="244" locator="90:9-90:107" classType="t:Ratio" xsi:type="Instance">
               <element name="numerator">
                  <value localId="240" locator="90:35-90:61" name="ToQuantity" xsi:type="FunctionRef">
                     <operand localId="239" locator="90:46-90:60" path="numerator" xsi:type="Property">
                        <source localId="238" locator="90:46-90:50" name="ratio" xsi:type="OperandRef"/>
                     </operand>
                  </value>
               </element>
               <element name="denominator">
                  <value localId="243" locator="90:77-90:105" name="ToQuantity" xsi:type="FunctionRef">
                     <operand localId="242" locator="90:88-90:104" path="denominator" xsi:type="Property">
                        <source localId="241" locator="90:88-90:92" name="ratio" xsi:type="OperandRef"/>
                     </operand>
                  </value>
               </element>
            </else>
         </expression>
         <operand name="ratio">
            <operandTypeSpecifier localId="234" locator="86:31-86:40" name="fhir:Ratio" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="259" locator="92:1-96:63" name="ToInterval" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="259">
               <a:s>define function ToInterval(range </a:s>
               <a:s r="247">
                  <a:s>FHIR.Range</a:s>
               </a:s>
               <a:s>):
    </a:s>
               <a:s r="258">
                  <a:s r="258">
                     <a:s>if </a:s>
                     <a:s r="249">
                        <a:s r="248">
                           <a:s>range</a:s>
                        </a:s>
                        <a:s> is null</a:s>
                     </a:s>
                     <a:s r="250"> then
        null
    else
        </a:s>
                     <a:s r="257">
                        <a:s>Interval[</a:s>
                        <a:s r="253">
                           <a:s>ToQuantity(</a:s>
                           <a:s r="252">
                              <a:s r="251">
                                 <a:s>range</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="252">
                                 <a:s>low</a:s>
                              </a:s>
                           </a:s>
                           <a:s>)</a:s>
                        </a:s>
                        <a:s>, </a:s>
                        <a:s r="256">
                           <a:s>ToQuantity(</a:s>
                           <a:s r="255">
                              <a:s r="254">
                                 <a:s>range</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="255">
                                 <a:s>high</a:s>
                              </a:s>
                           </a:s>
                           <a:s>)</a:s>
                        </a:s>
                        <a:s>]</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="258" locator="93:5-96:63" xsi:type="If">
            <condition localId="249" locator="93:8-93:20" xsi:type="IsNull">
               <operand localId="248" locator="93:8-93:12" name="range" xsi:type="OperandRef"/>
            </condition>
            <then xsi:type="As">
               <operand localId="250" locator="94:9-94:12" xsi:type="Null"/>
               <asTypeSpecifier xsi:type="IntervalTypeSpecifier">
                  <pointType name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
               </asTypeSpecifier>
            </then>
            <else localId="257" locator="96:9-96:63" lowClosed="true" highClosed="true" xsi:type="Interval">
               <low localId="253" locator="96:18-96:38" name="ToQuantity" xsi:type="FunctionRef">
                  <operand localId="252" locator="96:29-96:37" path="low" xsi:type="Property">
                     <source localId="251" locator="96:29-96:33" name="range" xsi:type="OperandRef"/>
                  </operand>
               </low>
               <high localId="256" locator="96:41-96:62" name="ToQuantity" xsi:type="FunctionRef">
                  <operand localId="255" locator="96:52-96:61" path="high" xsi:type="Property">
                     <source localId="254" locator="96:52-96:56" name="range" xsi:type="OperandRef"/>
                  </operand>
               </high>
            </else>
         </expression>
         <operand name="range">
            <operandTypeSpecifier localId="247" locator="92:34-92:43" name="fhir:Range" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="278" locator="98:1-107:9" name="ToCode" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="278">
               <a:s>define function ToCode(coding </a:s>
               <a:s r="260">
                  <a:s>FHIR.Coding</a:s>
               </a:s>
               <a:s>):
    </a:s>
               <a:s r="277">
                  <a:s r="277">
                     <a:s>if </a:s>
                     <a:s r="262">
                        <a:s r="261">
                           <a:s>coding</a:s>
                        </a:s>
                        <a:s> is null</a:s>
                     </a:s>
                     <a:s r="263"> then
        null
    else
        </a:s>
                     <a:s r="276">
                        <a:s>System.Code {
          </a:s>
                        <a:s>
                           <a:s>code: </a:s>
                           <a:s r="266">
                              <a:s r="265">
                                 <a:s r="264">
                                    <a:s>coding</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="265">
                                    <a:s>code</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="266">
                                 <a:s>value</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
          </a:s>
                        <a:s>
                           <a:s>system: </a:s>
                           <a:s r="269">
                              <a:s r="268">
                                 <a:s r="267">
                                    <a:s>coding</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="268">
                                    <a:s>system</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="269">
                                 <a:s>value</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
          </a:s>
                        <a:s>
                           <a:s>version: </a:s>
                           <a:s r="272">
                              <a:s r="271">
                                 <a:s r="270">
                                    <a:s>coding</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="271">
                                    <a:s>version</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="272">
                                 <a:s>value</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
          </a:s>
                        <a:s>
                           <a:s>display: </a:s>
                           <a:s r="275">
                              <a:s r="274">
                                 <a:s r="273">
                                    <a:s>coding</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="274">
                                    <a:s>display</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="275">
                                 <a:s>value</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                        <a:s>
        }</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="277" locator="99:5-107:9" xsi:type="If">
            <condition localId="262" locator="99:8-99:21" xsi:type="IsNull">
               <operand localId="261" locator="99:8-99:13" name="coding" xsi:type="OperandRef"/>
            </condition>
            <then asType="t:Code" xsi:type="As">
               <operand localId="263" locator="100:9-100:12" xsi:type="Null"/>
            </then>
            <else localId="276" locator="102:9-107:9" classType="t:Code" xsi:type="Instance">
               <element name="code">
                  <value localId="266" locator="103:17-103:33" path="value" xsi:type="Property">
                     <source localId="265" locator="103:17-103:27" path="code" xsi:type="Property">
                        <source localId="264" locator="103:17-103:22" name="coding" xsi:type="OperandRef"/>
                     </source>
                  </value>
               </element>
               <element name="system">
                  <value localId="269" locator="104:19-104:37" path="value" xsi:type="Property">
                     <source localId="268" locator="104:19-104:31" path="system" xsi:type="Property">
                        <source localId="267" locator="104:19-104:24" name="coding" xsi:type="OperandRef"/>
                     </source>
                  </value>
               </element>
               <element name="version">
                  <value localId="272" locator="105:20-105:39" path="value" xsi:type="Property">
                     <source localId="271" locator="105:20-105:33" path="version" xsi:type="Property">
                        <source localId="270" locator="105:20-105:25" name="coding" xsi:type="OperandRef"/>
                     </source>
                  </value>
               </element>
               <element name="display">
                  <value localId="275" locator="106:20-106:39" path="value" xsi:type="Property">
                     <source localId="274" locator="106:20-106:33" path="display" xsi:type="Property">
                        <source localId="273" locator="106:20-106:25" name="coding" xsi:type="OperandRef"/>
                     </source>
                  </value>
               </element>
            </else>
         </expression>
         <operand name="coding">
            <operandTypeSpecifier localId="260" locator="98:31-98:41" name="fhir:Coding" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="294" locator="109:1-116:9" name="ToConcept" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="294">
               <a:s>define function ToConcept(concept </a:s>
               <a:s r="279">
                  <a:s>FHIR.CodeableConcept</a:s>
               </a:s>
               <a:s>):
    </a:s>
               <a:s r="293">
                  <a:s r="293">
                     <a:s>if </a:s>
                     <a:s r="281">
                        <a:s r="280">
                           <a:s>concept</a:s>
                        </a:s>
                        <a:s> is null</a:s>
                     </a:s>
                     <a:s r="282"> then
        null
    else
        </a:s>
                     <a:s r="292">
                        <a:s>System.Concept {
            </a:s>
                        <a:s>
                           <a:s>codes: </a:s>
                           <a:s r="288">
                              <a:s>
                                 <a:s r="284">
                                    <a:s r="283">
                                       <a:s>
                                          <a:s>concept.coding</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s> C</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> </a:s>
                              <a:s r="287">
                                 <a:s>return </a:s>
                                 <a:s r="286">
                                    <a:s>ToCode(</a:s>
                                    <a:s r="285">
                                       <a:s>C</a:s>
                                    </a:s>
                                    <a:s>)</a:s>
                                 </a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
            </a:s>
                        <a:s>
                           <a:s>display: </a:s>
                           <a:s r="291">
                              <a:s r="290">
                                 <a:s r="289">
                                    <a:s>concept</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="290">
                                    <a:s>text</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="291">
                                 <a:s>value</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                        <a:s>
        }</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="293" locator="110:5-116:9" xsi:type="If">
            <condition localId="281" locator="110:8-110:22" xsi:type="IsNull">
               <operand localId="280" locator="110:8-110:14" name="concept" xsi:type="OperandRef"/>
            </condition>
            <then asType="t:Concept" xsi:type="As">
               <operand localId="282" locator="111:9-111:12" xsi:type="Null"/>
            </then>
            <else localId="292" locator="113:9-116:9" classType="t:Concept" xsi:type="Instance">
               <element name="codes">
                  <value localId="288" locator="114:20-114:52" xsi:type="Query">
                     <source localId="284" locator="114:20-114:35" alias="C">
                        <expression localId="283" locator="114:20-114:33" path="coding" xsi:type="Property">
                           <source name="concept" xsi:type="OperandRef"/>
                        </expression>
                     </source>
                     <return localId="287" locator="114:37-114:52">
                        <expression localId="286" locator="114:44-114:52" name="ToCode" xsi:type="FunctionRef">
                           <operand localId="285" locator="114:51" name="C" xsi:type="AliasRef"/>
                        </expression>
                     </return>
                  </value>
               </element>
               <element name="display">
                  <value localId="291" locator="115:22-115:39" path="value" xsi:type="Property">
                     <source localId="290" locator="115:22-115:33" path="text" xsi:type="Property">
                        <source localId="289" locator="115:22-115:28" name="concept" xsi:type="OperandRef"/>
                     </source>
                  </value>
               </element>
            </else>
         </expression>
         <operand name="concept">
            <operandTypeSpecifier localId="279" locator="109:35-109:54" name="fhir:CodeableConcept" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="303" locator="118:1-122:60" name="reference" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="303">
               <a:s>define function reference(reference </a:s>
               <a:s r="295">
                  <a:s>String</a:s>
               </a:s>
               <a:s>):
    </a:s>
               <a:s r="302">
                  <a:s r="302">
                     <a:s>if </a:s>
                     <a:s r="297">
                        <a:s r="296">
                           <a:s>reference</a:s>
                        </a:s>
                        <a:s> is null</a:s>
                     </a:s>
                     <a:s r="298"> then
        null
    else
        </a:s>
                     <a:s r="301">
                        <a:s>Reference { </a:s>
                        <a:s>
                           <a:s>reference: </a:s>
                           <a:s r="300">
                              <a:s>string { </a:s>
                              <a:s>
                                 <a:s>value: </a:s>
                                 <a:s r="299">
                                    <a:s>reference</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> }</a:s>
                           </a:s>
                        </a:s>
                        <a:s> }</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="302" locator="119:5-122:60" xsi:type="If">
            <condition localId="297" locator="119:8-119:24" xsi:type="IsNull">
               <operand localId="296" locator="119:8-119:16" name="reference" xsi:type="OperandRef"/>
            </condition>
            <then asType="fhir:Reference" xsi:type="As">
               <operand localId="298" locator="120:9-120:12" xsi:type="Null"/>
            </then>
            <else localId="301" locator="122:9-122:60" classType="fhir:Reference" xsi:type="Instance">
               <element name="reference">
                  <value localId="300" locator="122:32-122:58" classType="fhir:string" xsi:type="Instance">
                     <element name="value">
                        <value localId="299" locator="122:48-122:56" name="reference" xsi:type="OperandRef"/>
                     </element>
                  </value>
               </element>
            </else>
         </expression>
         <operand name="reference">
            <operandTypeSpecifier localId="295" locator="118:37-118:42" name="t:String" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="306" locator="124:1-124:68" name="resolve" context="Patient" accessLevel="Public" external="true" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="306">
               <a:s>define function resolve(reference </a:s>
               <a:s r="304">
                  <a:s>String</a:s>
               </a:s>
               <a:s>) returns </a:s>
               <a:s r="305">
                  <a:s>Resource</a:s>
               </a:s>
               <a:s>: external</a:s>
            </a:s>
         </annotation>
         <operand name="reference">
            <operandTypeSpecifier localId="304" locator="124:35-124:40" name="t:String" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="309" locator="125:1-125:71" name="resolve" context="Patient" accessLevel="Public" external="true" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="309">
               <a:s>define function resolve(reference </a:s>
               <a:s r="307">
                  <a:s>Reference</a:s>
               </a:s>
               <a:s>) returns </a:s>
               <a:s r="308">
                  <a:s>Resource</a:s>
               </a:s>
               <a:s>: external</a:s>
            </a:s>
         </annotation>
         <operand name="reference">
            <operandTypeSpecifier localId="307" locator="125:35-125:43" name="fhir:Reference" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="312" locator="126:1-126:72" name="reference" context="Patient" accessLevel="Public" external="true" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="312">
               <a:s>define function reference(resource </a:s>
               <a:s r="310">
                  <a:s>Resource</a:s>
               </a:s>
               <a:s>) returns </a:s>
               <a:s r="311">
                  <a:s>Reference</a:s>
               </a:s>
               <a:s>: external</a:s>
            </a:s>
         </annotation>
         <operand name="resource">
            <operandTypeSpecifier localId="310" locator="126:36-126:43" name="fhir:Resource" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="317" locator="127:1-127:86" name="extension" context="Patient" accessLevel="Public" external="true" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="317">
               <a:s>define function extension(element </a:s>
               <a:s r="313">
                  <a:s>Element</a:s>
               </a:s>
               <a:s>, url </a:s>
               <a:s r="314">
                  <a:s>String</a:s>
               </a:s>
               <a:s>) returns </a:s>
               <a:s r="316">
                  <a:s>List&lt;</a:s>
                  <a:s r="315">
                     <a:s>Element</a:s>
                  </a:s>
                  <a:s>></a:s>
               </a:s>
               <a:s>: external</a:s>
            </a:s>
         </annotation>
         <operand name="element">
            <operandTypeSpecifier localId="313" locator="127:35-127:41" name="fhir:Element" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand name="url">
            <operandTypeSpecifier localId="314" locator="127:48-127:53" name="t:String" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="322" locator="128:1-128:88" name="extension" context="Patient" accessLevel="Public" external="true" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="322">
               <a:s>define function extension(resource </a:s>
               <a:s r="318">
                  <a:s>Resource</a:s>
               </a:s>
               <a:s>, url </a:s>
               <a:s r="319">
                  <a:s>String</a:s>
               </a:s>
               <a:s>) returns </a:s>
               <a:s r="321">
                  <a:s>List&lt;</a:s>
                  <a:s r="320">
                     <a:s>Element</a:s>
                  </a:s>
                  <a:s>></a:s>
               </a:s>
               <a:s>: external</a:s>
            </a:s>
         </annotation>
         <operand name="resource">
            <operandTypeSpecifier localId="318" locator="128:36-128:43" name="fhir:Resource" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand name="url">
            <operandTypeSpecifier localId="319" locator="128:50-128:55" name="t:String" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="325" locator="129:1-129:67" name="hasValue" context="Patient" accessLevel="Public" external="true" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="325">
               <a:s>define function hasValue(element </a:s>
               <a:s r="323">
                  <a:s>Element</a:s>
               </a:s>
               <a:s>) returns </a:s>
               <a:s r="324">
                  <a:s>Boolean</a:s>
               </a:s>
               <a:s>: external</a:s>
            </a:s>
         </annotation>
         <operand name="element">
            <operandTypeSpecifier localId="323" locator="129:34-129:40" name="fhir:Element" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="328" locator="130:1-130:63" name="getValue" context="Patient" accessLevel="Public" external="true" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="328">
               <a:s>define function getValue(element </a:s>
               <a:s r="326">
                  <a:s>Element</a:s>
               </a:s>
               <a:s>) returns </a:s>
               <a:s r="327">
                  <a:s>Any</a:s>
               </a:s>
               <a:s>: external</a:s>
            </a:s>
         </annotation>
         <operand name="element">
            <operandTypeSpecifier localId="326" locator="130:34-130:40" name="fhir:Element" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="332" locator="131:1-131:69" name="ofType" context="Patient" accessLevel="Public" external="true" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="332">
               <a:s>define function ofType(identifier </a:s>
               <a:s r="329">
                  <a:s>String</a:s>
               </a:s>
               <a:s>) returns </a:s>
               <a:s r="331">
                  <a:s>List&lt;</a:s>
                  <a:s r="330">
                     <a:s>Any</a:s>
                  </a:s>
                  <a:s>></a:s>
               </a:s>
               <a:s>: external</a:s>
            </a:s>
         </annotation>
         <operand name="identifier">
            <operandTypeSpecifier localId="329" locator="131:35-131:40" name="t:String" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="335" locator="132:1-132:63" name="is" context="Patient" accessLevel="Public" external="true" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="335">
               <a:s>define function is(identifier </a:s>
               <a:s r="333">
                  <a:s>String</a:s>
               </a:s>
               <a:s>) returns </a:s>
               <a:s r="334">
                  <a:s>Boolean</a:s>
               </a:s>
               <a:s>: external</a:s>
            </a:s>
         </annotation>
         <operand name="identifier">
            <operandTypeSpecifier localId="333" locator="132:31-132:36" name="t:String" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="338" locator="133:1-133:59" name="as" context="Patient" accessLevel="Public" external="true" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="338">
               <a:s>define function as(identifier </a:s>
               <a:s r="336">
                  <a:s>String</a:s>
               </a:s>
               <a:s>) returns </a:s>
               <a:s r="337">
                  <a:s>Any</a:s>
               </a:s>
               <a:s>: external</a:s>
            </a:s>
         </annotation>
         <operand name="identifier">
            <operandTypeSpecifier localId="336" locator="133:31-133:36" name="t:String" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="341" locator="134:1-134:86" name="elementDefinition" context="Patient" accessLevel="Public" external="true" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="341">
               <a:s>define function elementDefinition(element </a:s>
               <a:s r="339">
                  <a:s>Element</a:s>
               </a:s>
               <a:s>) returns </a:s>
               <a:s r="340">
                  <a:s>ElementDefinition</a:s>
               </a:s>
               <a:s>: external</a:s>
            </a:s>
         </annotation>
         <operand name="element">
            <operandTypeSpecifier localId="339" locator="134:43-134:49" name="fhir:Element" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="347" locator="135:1-135:95" name="slice" context="Patient" accessLevel="Public" external="true" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="347">
               <a:s>define function slice(element </a:s>
               <a:s r="342">
                  <a:s>Element</a:s>
               </a:s>
               <a:s>, url </a:s>
               <a:s r="343">
                  <a:s>String</a:s>
               </a:s>
               <a:s>, name </a:s>
               <a:s r="344">
                  <a:s>String</a:s>
               </a:s>
               <a:s>) returns </a:s>
               <a:s r="346">
                  <a:s>List&lt;</a:s>
                  <a:s r="345">
                     <a:s>Element</a:s>
                  </a:s>
                  <a:s>></a:s>
               </a:s>
               <a:s>: external</a:s>
            </a:s>
         </annotation>
         <operand name="element">
            <operandTypeSpecifier localId="342" locator="135:31-135:37" name="fhir:Element" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand name="url">
            <operandTypeSpecifier localId="343" locator="135:44-135:49" name="t:String" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand name="name">
            <operandTypeSpecifier localId="344" locator="135:57-135:62" name="t:String" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="350" locator="136:1-136:76" name="checkModifiers" context="Patient" accessLevel="Public" external="true" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="350">
               <a:s>define function checkModifiers(resource </a:s>
               <a:s r="348">
                  <a:s>Resource</a:s>
               </a:s>
               <a:s>) returns </a:s>
               <a:s r="349">
                  <a:s>Resource</a:s>
               </a:s>
               <a:s>: external</a:s>
            </a:s>
         </annotation>
         <operand name="resource">
            <operandTypeSpecifier localId="348" locator="136:41-136:48" name="fhir:Resource" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="354" locator="137:1-137:93" name="checkModifiers" context="Patient" accessLevel="Public" external="true" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="354">
               <a:s>define function checkModifiers(resource </a:s>
               <a:s r="351">
                  <a:s>Resource</a:s>
               </a:s>
               <a:s>, modifier </a:s>
               <a:s r="352">
                  <a:s>String</a:s>
               </a:s>
               <a:s>) returns </a:s>
               <a:s r="353">
                  <a:s>Resource</a:s>
               </a:s>
               <a:s>: external</a:s>
            </a:s>
         </annotation>
         <operand name="resource">
            <operandTypeSpecifier localId="351" locator="137:41-137:48" name="fhir:Resource" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand name="modifier">
            <operandTypeSpecifier localId="352" locator="137:60-137:65" name="t:String" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="357" locator="138:1-138:73" name="checkModifiers" context="Patient" accessLevel="Public" external="true" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="357">
               <a:s>define function checkModifiers(element </a:s>
               <a:s r="355">
                  <a:s>Element</a:s>
               </a:s>
               <a:s>) returns </a:s>
               <a:s r="356">
                  <a:s>Element</a:s>
               </a:s>
               <a:s>: external</a:s>
            </a:s>
         </annotation>
         <operand name="element">
            <operandTypeSpecifier localId="355" locator="138:40-138:46" name="fhir:Element" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="361" locator="139:1-139:90" name="checkModifiers" context="Patient" accessLevel="Public" external="true" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="361">
               <a:s>define function checkModifiers(element </a:s>
               <a:s r="358">
                  <a:s>Element</a:s>
               </a:s>
               <a:s>, modifier </a:s>
               <a:s r="359">
                  <a:s>String</a:s>
               </a:s>
               <a:s>) returns </a:s>
               <a:s r="360">
                  <a:s>Element</a:s>
               </a:s>
               <a:s>: external</a:s>
            </a:s>
         </annotation>
         <operand name="element">
            <operandTypeSpecifier localId="358" locator="139:40-139:46" name="fhir:Element" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand name="modifier">
            <operandTypeSpecifier localId="359" locator="139:58-139:63" name="t:String" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="365" locator="140:1-140:89" name="conformsTo" context="Patient" accessLevel="Public" external="true" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="365">
               <a:s>define function conformsTo(resource </a:s>
               <a:s r="362">
                  <a:s>Resource</a:s>
               </a:s>
               <a:s>, structure </a:s>
               <a:s r="363">
                  <a:s>String</a:s>
               </a:s>
               <a:s>) returns </a:s>
               <a:s r="364">
                  <a:s>Boolean</a:s>
               </a:s>
               <a:s>: external</a:s>
            </a:s>
         </annotation>
         <operand name="resource">
            <operandTypeSpecifier localId="362" locator="140:37-140:44" name="fhir:Resource" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand name="structure">
            <operandTypeSpecifier localId="363" locator="140:57-140:62" name="t:String" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="369" locator="141:1-141:78" name="memberOf" context="Patient" accessLevel="Public" external="true" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="369">
               <a:s>define function memberOf(code </a:s>
               <a:s r="366">
                  <a:s>code</a:s>
               </a:s>
               <a:s>, valueSet </a:s>
               <a:s r="367">
                  <a:s>String</a:s>
               </a:s>
               <a:s>) returns </a:s>
               <a:s r="368">
                  <a:s>Boolean</a:s>
               </a:s>
               <a:s>: external</a:s>
            </a:s>
         </annotation>
         <operand name="code">
            <operandTypeSpecifier localId="366" locator="141:31-141:34" name="fhir:code" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand name="valueSet">
            <operandTypeSpecifier localId="367" locator="141:46-141:51" name="t:String" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="373" locator="142:1-142:82" name="memberOf" context="Patient" accessLevel="Public" external="true" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="373">
               <a:s>define function memberOf(coding </a:s>
               <a:s r="370">
                  <a:s>Coding</a:s>
               </a:s>
               <a:s>, valueSet </a:s>
               <a:s r="371">
                  <a:s>String</a:s>
               </a:s>
               <a:s>) returns </a:s>
               <a:s r="372">
                  <a:s>Boolean</a:s>
               </a:s>
               <a:s>: external</a:s>
            </a:s>
         </annotation>
         <operand name="coding">
            <operandTypeSpecifier localId="370" locator="142:33-142:38" name="fhir:Coding" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand name="valueSet">
            <operandTypeSpecifier localId="371" locator="142:50-142:55" name="t:String" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="377" locator="143:1-143:92" name="memberOf" context="Patient" accessLevel="Public" external="true" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="377">
               <a:s>define function memberOf(concept </a:s>
               <a:s r="374">
                  <a:s>CodeableConcept</a:s>
               </a:s>
               <a:s>, valueSet </a:s>
               <a:s r="375">
                  <a:s>String</a:s>
               </a:s>
               <a:s>) returns </a:s>
               <a:s r="376">
                  <a:s>Boolean</a:s>
               </a:s>
               <a:s>: external</a:s>
            </a:s>
         </annotation>
         <operand name="concept">
            <operandTypeSpecifier localId="374" locator="143:34-143:48" name="fhir:CodeableConcept" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand name="valueSet">
            <operandTypeSpecifier localId="375" locator="143:60-143:65" name="t:String" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="381" locator="144:1-144:88" name="subsumes" context="Patient" accessLevel="Public" external="true" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="381">
               <a:s>define function subsumes(coding </a:s>
               <a:s r="378">
                  <a:s>Coding</a:s>
               </a:s>
               <a:s>, subsumedCoding </a:s>
               <a:s r="379">
                  <a:s>Coding</a:s>
               </a:s>
               <a:s>) returns </a:s>
               <a:s r="380">
                  <a:s>Boolean</a:s>
               </a:s>
               <a:s>: external</a:s>
            </a:s>
         </annotation>
         <operand name="coding">
            <operandTypeSpecifier localId="378" locator="144:33-144:38" name="fhir:Coding" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand name="subsumedCoding">
            <operandTypeSpecifier localId="379" locator="144:56-144:61" name="fhir:Coding" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="385" locator="145:1-145:108" name="subsumes" context="Patient" accessLevel="Public" external="true" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="385">
               <a:s>define function subsumes(concept </a:s>
               <a:s r="382">
                  <a:s>CodeableConcept</a:s>
               </a:s>
               <a:s>, subsumedConcept </a:s>
               <a:s r="383">
                  <a:s>CodeableConcept</a:s>
               </a:s>
               <a:s>) returns </a:s>
               <a:s r="384">
                  <a:s>Boolean</a:s>
               </a:s>
               <a:s>: external</a:s>
            </a:s>
         </annotation>
         <operand name="concept">
            <operandTypeSpecifier localId="382" locator="145:34-145:48" name="fhir:CodeableConcept" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand name="subsumedConcept">
            <operandTypeSpecifier localId="383" locator="145:67-145:81" name="fhir:CodeableConcept" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="389" locator="146:1-146:91" name="subsumedBy" context="Patient" accessLevel="Public" external="true" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="389">
               <a:s>define function subsumedBy(coding </a:s>
               <a:s r="386">
                  <a:s>Coding</a:s>
               </a:s>
               <a:s>, subsumingCoding </a:s>
               <a:s r="387">
                  <a:s>Coding</a:s>
               </a:s>
               <a:s>) returns </a:s>
               <a:s r="388">
                  <a:s>Boolean</a:s>
               </a:s>
               <a:s>: external</a:s>
            </a:s>
         </annotation>
         <operand name="coding">
            <operandTypeSpecifier localId="386" locator="146:35-146:40" name="fhir:Coding" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand name="subsumingCoding">
            <operandTypeSpecifier localId="387" locator="146:59-146:64" name="fhir:Coding" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="393" locator="147:1-147:111" name="subsumedBy" context="Patient" accessLevel="Public" external="true" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="393">
               <a:s>define function subsumedBy(concept </a:s>
               <a:s r="390">
                  <a:s>CodeableConcept</a:s>
               </a:s>
               <a:s>, subsumingConcept </a:s>
               <a:s r="391">
                  <a:s>CodeableConcept</a:s>
               </a:s>
               <a:s>) returns </a:s>
               <a:s r="392">
                  <a:s>Boolean</a:s>
               </a:s>
               <a:s>: external</a:s>
            </a:s>
         </annotation>
         <operand name="concept">
            <operandTypeSpecifier localId="390" locator="147:36-147:50" name="fhir:CodeableConcept" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand name="subsumingConcept">
            <operandTypeSpecifier localId="391" locator="147:70-147:84" name="fhir:CodeableConcept" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="396" locator="148:1-148:69" name="htmlChecks" context="Patient" accessLevel="Public" external="true" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="396">
               <a:s>define function htmlChecks(element </a:s>
               <a:s r="394">
                  <a:s>Element</a:s>
               </a:s>
               <a:s>) returns </a:s>
               <a:s r="395">
                  <a:s>Boolean</a:s>
               </a:s>
               <a:s>: external</a:s>
            </a:s>
         </annotation>
         <operand name="element">
            <operandTypeSpecifier localId="394" locator="148:36-148:42" name="fhir:Element" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="400" locator="150:1-150:58" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="400">
               <a:s>define function ToString(value </a:s>
               <a:s r="397">
                  <a:s>AccountStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="399">
                  <a:s r="399">
                     <a:s r="398">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="399">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="399" locator="150:48-150:58" path="value" xsi:type="Property">
            <source localId="398" locator="150:48-150:52" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="397" locator="150:32-150:44" name="fhir:AccountStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="404" locator="151:1-151:70" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="404">
               <a:s>define function ToString(value </a:s>
               <a:s r="401">
                  <a:s>ActionCardinalityBehavior</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="403">
                  <a:s r="403">
                     <a:s r="402">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="403">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="403" locator="151:60-151:70" path="value" xsi:type="Property">
            <source localId="402" locator="151:60-151:64" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="401" locator="151:32-151:56" name="fhir:ActionCardinalityBehavior" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="408" locator="152:1-152:64" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="408">
               <a:s>define function ToString(value </a:s>
               <a:s r="405">
                  <a:s>ActionConditionKind</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="407">
                  <a:s r="407">
                     <a:s r="406">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="407">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="407" locator="152:54-152:64" path="value" xsi:type="Property">
            <source localId="406" locator="152:54-152:58" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="405" locator="152:32-152:50" name="fhir:ActionConditionKind" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="412" locator="153:1-153:67" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="412">
               <a:s>define function ToString(value </a:s>
               <a:s r="409">
                  <a:s>ActionGroupingBehavior</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="411">
                  <a:s r="411">
                     <a:s r="410">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="411">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="411" locator="153:57-153:67" path="value" xsi:type="Property">
            <source localId="410" locator="153:57-153:61" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="409" locator="153:32-153:53" name="fhir:ActionGroupingBehavior" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="416" locator="154:1-154:66" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="416">
               <a:s>define function ToString(value </a:s>
               <a:s r="413">
                  <a:s>ActionParticipantType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="415">
                  <a:s r="415">
                     <a:s r="414">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="415">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="415" locator="154:56-154:66" path="value" xsi:type="Property">
            <source localId="414" locator="154:56-154:60" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="413" locator="154:32-154:52" name="fhir:ActionParticipantType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="420" locator="155:1-155:67" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="420">
               <a:s>define function ToString(value </a:s>
               <a:s r="417">
                  <a:s>ActionPrecheckBehavior</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="419">
                  <a:s r="419">
                     <a:s r="418">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="419">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="419" locator="155:57-155:67" path="value" xsi:type="Property">
            <source localId="418" locator="155:57-155:61" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="417" locator="155:32-155:53" name="fhir:ActionPrecheckBehavior" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="424" locator="156:1-156:67" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="424">
               <a:s>define function ToString(value </a:s>
               <a:s r="421">
                  <a:s>ActionRelationshipType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="423">
                  <a:s r="423">
                     <a:s r="422">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="423">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="423" locator="156:57-156:67" path="value" xsi:type="Property">
            <source localId="422" locator="156:57-156:61" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="421" locator="156:32-156:53" name="fhir:ActionRelationshipType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="428" locator="157:1-157:67" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="428">
               <a:s>define function ToString(value </a:s>
               <a:s r="425">
                  <a:s>ActionRequiredBehavior</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="427">
                  <a:s r="427">
                     <a:s r="426">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="427">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="427" locator="157:57-157:67" path="value" xsi:type="Property">
            <source localId="426" locator="157:57-157:61" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="425" locator="157:32-157:53" name="fhir:ActionRequiredBehavior" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="432" locator="158:1-158:68" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="432">
               <a:s>define function ToString(value </a:s>
               <a:s r="429">
                  <a:s>ActionSelectionBehavior</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="431">
                  <a:s r="431">
                     <a:s r="430">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="431">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="431" locator="158:58-158:68" path="value" xsi:type="Property">
            <source localId="430" locator="158:58-158:62" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="429" locator="158:32-158:54" name="fhir:ActionSelectionBehavior" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="436" locator="159:1-159:67" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="436">
               <a:s>define function ToString(value </a:s>
               <a:s r="433">
                  <a:s>ActivityDefinitionKind</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="435">
                  <a:s r="435">
                     <a:s r="434">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="435">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="435" locator="159:57-159:67" path="value" xsi:type="Property">
            <source localId="434" locator="159:57-159:61" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="433" locator="159:32-159:53" name="fhir:ActivityDefinitionKind" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="440" locator="160:1-160:68" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="440">
               <a:s>define function ToString(value </a:s>
               <a:s r="437">
                  <a:s>ActivityParticipantType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="439">
                  <a:s r="439">
                     <a:s r="438">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="439">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="439" locator="160:58-160:68" path="value" xsi:type="Property">
            <source localId="438" locator="160:58-160:62" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="437" locator="160:32-160:54" name="fhir:ActivityParticipantType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="444" locator="161:1-161:56" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="444">
               <a:s>define function ToString(value </a:s>
               <a:s r="441">
                  <a:s>AddressType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="443">
                  <a:s r="443">
                     <a:s r="442">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="443">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="443" locator="161:46-161:56" path="value" xsi:type="Property">
            <source localId="442" locator="161:46-161:50" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="441" locator="161:32-161:42" name="fhir:AddressType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="448" locator="162:1-162:55" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="448">
               <a:s>define function ToString(value </a:s>
               <a:s r="445">
                  <a:s>AddressUse</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="447">
                  <a:s r="447">
                     <a:s r="446">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="447">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="447" locator="162:45-162:55" path="value" xsi:type="Property">
            <source localId="446" locator="162:45-162:49" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="445" locator="162:32-162:41" name="fhir:AddressUse" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="452" locator="163:1-163:65" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="452">
               <a:s>define function ToString(value </a:s>
               <a:s r="449">
                  <a:s>AdministrativeGender</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="451">
                  <a:s r="451">
                     <a:s r="450">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="451">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="451" locator="163:55-163:65" path="value" xsi:type="Property">
            <source localId="450" locator="163:55-163:59" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="449" locator="163:32-163:51" name="fhir:AdministrativeGender" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="456" locator="164:1-164:66" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="456">
               <a:s>define function ToString(value </a:s>
               <a:s r="453">
                  <a:s>AdverseEventActuality</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="455">
                  <a:s r="455">
                     <a:s r="454">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="455">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="455" locator="164:56-164:66" path="value" xsi:type="Property">
            <source localId="454" locator="164:56-164:60" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="453" locator="164:32-164:52" name="fhir:AdverseEventActuality" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="460" locator="165:1-165:60" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="460">
               <a:s>define function ToString(value </a:s>
               <a:s r="457">
                  <a:s>AggregationMode</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="459">
                  <a:s r="459">
                     <a:s r="458">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="459">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="459" locator="165:50-165:60" path="value" xsi:type="Property">
            <source localId="458" locator="165:50-165:54" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="457" locator="165:32-165:46" name="fhir:AggregationMode" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="464" locator="166:1-166:71" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="464">
               <a:s>define function ToString(value </a:s>
               <a:s r="461">
                  <a:s>AllergyIntoleranceCategory</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="463">
                  <a:s r="463">
                     <a:s r="462">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="463">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="463" locator="166:61-166:71" path="value" xsi:type="Property">
            <source localId="462" locator="166:61-166:65" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="461" locator="166:32-166:57" name="fhir:AllergyIntoleranceCategory" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="468" locator="167:1-167:74" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="468">
               <a:s>define function ToString(value </a:s>
               <a:s r="465">
                  <a:s>AllergyIntoleranceCriticality</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="467">
                  <a:s r="467">
                     <a:s r="466">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="467">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="467" locator="167:64-167:74" path="value" xsi:type="Property">
            <source localId="466" locator="167:64-167:68" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="465" locator="167:32-167:60" name="fhir:AllergyIntoleranceCriticality" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="472" locator="168:1-168:71" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="472">
               <a:s>define function ToString(value </a:s>
               <a:s r="469">
                  <a:s>AllergyIntoleranceSeverity</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="471">
                  <a:s r="471">
                     <a:s r="470">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="471">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="471" locator="168:61-168:71" path="value" xsi:type="Property">
            <source localId="470" locator="168:61-168:65" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="469" locator="168:32-168:57" name="fhir:AllergyIntoleranceSeverity" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="476" locator="169:1-169:67" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="476">
               <a:s>define function ToString(value </a:s>
               <a:s r="473">
                  <a:s>AllergyIntoleranceType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="475">
                  <a:s r="475">
                     <a:s r="474">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="475">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="475" locator="169:57-169:67" path="value" xsi:type="Property">
            <source localId="474" locator="169:57-169:61" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="473" locator="169:32-169:53" name="fhir:AllergyIntoleranceType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="480" locator="170:1-170:62" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="480">
               <a:s>define function ToString(value </a:s>
               <a:s r="477">
                  <a:s>AppointmentStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="479">
                  <a:s r="479">
                     <a:s r="478">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="479">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="479" locator="170:52-170:62" path="value" xsi:type="Property">
            <source localId="478" locator="170:52-170:56" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="477" locator="170:32-170:48" name="fhir:AppointmentStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="484" locator="171:1-171:67" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="484">
               <a:s>define function ToString(value </a:s>
               <a:s r="481">
                  <a:s>AssertionDirectionType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="483">
                  <a:s r="483">
                     <a:s r="482">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="483">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="483" locator="171:57-171:67" path="value" xsi:type="Property">
            <source localId="482" locator="171:57-171:61" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="481" locator="171:32-171:53" name="fhir:AssertionDirectionType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="488" locator="172:1-172:66" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="488">
               <a:s>define function ToString(value </a:s>
               <a:s r="485">
                  <a:s>AssertionOperatorType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="487">
                  <a:s r="487">
                     <a:s r="486">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="487">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="487" locator="172:56-172:66" path="value" xsi:type="Property">
            <source localId="486" locator="172:56-172:60" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="485" locator="172:32-172:52" name="fhir:AssertionOperatorType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="492" locator="173:1-173:67" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="492">
               <a:s>define function ToString(value </a:s>
               <a:s r="489">
                  <a:s>AssertionResponseTypes</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="491">
                  <a:s r="491">
                     <a:s r="490">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="491">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="491" locator="173:57-173:67" path="value" xsi:type="Property">
            <source localId="490" locator="173:57-173:61" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="489" locator="173:32-173:53" name="fhir:AssertionResponseTypes" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="496" locator="174:1-174:61" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="496">
               <a:s>define function ToString(value </a:s>
               <a:s r="493">
                  <a:s>AuditEventAction</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="495">
                  <a:s r="495">
                     <a:s r="494">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="495">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="495" locator="174:51-174:61" path="value" xsi:type="Property">
            <source localId="494" locator="174:51-174:55" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="493" locator="174:32-174:47" name="fhir:AuditEventAction" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="500" locator="175:1-175:71" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="500">
               <a:s>define function ToString(value </a:s>
               <a:s r="497">
                  <a:s>AuditEventAgentNetworkType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="499">
                  <a:s r="499">
                     <a:s r="498">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="499">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="499" locator="175:61-175:71" path="value" xsi:type="Property">
            <source localId="498" locator="175:61-175:65" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="497" locator="175:32-175:57" name="fhir:AuditEventAgentNetworkType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="504" locator="176:1-176:62" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="504">
               <a:s>define function ToString(value </a:s>
               <a:s r="501">
                  <a:s>AuditEventOutcome</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="503">
                  <a:s r="503">
                     <a:s r="502">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="503">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="503" locator="176:52-176:62" path="value" xsi:type="Property">
            <source localId="502" locator="176:52-176:56" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="501" locator="176:32-176:48" name="fhir:AuditEventOutcome" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="508" locator="177:1-177:60" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="508">
               <a:s>define function ToString(value </a:s>
               <a:s r="505">
                  <a:s>BindingStrength</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="507">
                  <a:s r="507">
                     <a:s r="506">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="507">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="507" locator="177:50-177:60" path="value" xsi:type="Property">
            <source localId="506" locator="177:50-177:54" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="505" locator="177:32-177:46" name="fhir:BindingStrength" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="512" locator="178:1-178:79" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="512">
               <a:s>define function ToString(value </a:s>
               <a:s r="509">
                  <a:s>BiologicallyDerivedProductCategory</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="511">
                  <a:s r="511">
                     <a:s r="510">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="511">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="511" locator="178:69-178:79" path="value" xsi:type="Property">
            <source localId="510" locator="178:69-178:73" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="509" locator="178:32-178:65" name="fhir:BiologicallyDerivedProductCategory" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="516" locator="179:1-179:77" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="516">
               <a:s>define function ToString(value </a:s>
               <a:s r="513">
                  <a:s>BiologicallyDerivedProductStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="515">
                  <a:s r="515">
                     <a:s r="514">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="515">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="515" locator="179:67-179:77" path="value" xsi:type="Property">
            <source localId="514" locator="179:67-179:71" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="513" locator="179:32-179:63" name="fhir:BiologicallyDerivedProductStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="520" locator="180:1-180:83" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="520">
               <a:s>define function ToString(value </a:s>
               <a:s r="517">
                  <a:s>BiologicallyDerivedProductStorageScale</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="519">
                  <a:s r="519">
                     <a:s r="518">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="519">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="519" locator="180:73-180:83" path="value" xsi:type="Property">
            <source localId="518" locator="180:73-180:77" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="517" locator="180:32-180:69" name="fhir:BiologicallyDerivedProductStorageScale" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="524" locator="181:1-181:55" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="524">
               <a:s>define function ToString(value </a:s>
               <a:s r="521">
                  <a:s>BundleType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="523">
                  <a:s r="523">
                     <a:s r="522">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="523">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="523" locator="181:45-181:55" path="value" xsi:type="Property">
            <source localId="522" locator="181:45-181:49" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="521" locator="181:32-181:41" name="fhir:BundleType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="528" locator="182:1-182:68" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="528">
               <a:s>define function ToString(value </a:s>
               <a:s r="525">
                  <a:s>CapabilityStatementKind</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="527">
                  <a:s r="527">
                     <a:s r="526">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="527">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="527" locator="182:58-182:68" path="value" xsi:type="Property">
            <source localId="526" locator="182:58-182:62" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="525" locator="182:32-182:54" name="fhir:CapabilityStatementKind" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="532" locator="183:1-183:65" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="532">
               <a:s>define function ToString(value </a:s>
               <a:s r="529">
                  <a:s>CarePlanActivityKind</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="531">
                  <a:s r="531">
                     <a:s r="530">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="531">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="531" locator="183:55-183:65" path="value" xsi:type="Property">
            <source localId="530" locator="183:55-183:59" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="529" locator="183:32-183:51" name="fhir:CarePlanActivityKind" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="536" locator="184:1-184:67" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="536">
               <a:s>define function ToString(value </a:s>
               <a:s r="533">
                  <a:s>CarePlanActivityStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="535">
                  <a:s r="535">
                     <a:s r="534">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="535">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="535" locator="184:57-184:67" path="value" xsi:type="Property">
            <source localId="534" locator="184:57-184:61" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="533" locator="184:32-184:53" name="fhir:CarePlanActivityStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="540" locator="185:1-185:59" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="540">
               <a:s>define function ToString(value </a:s>
               <a:s r="537">
                  <a:s>CarePlanIntent</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="539">
                  <a:s r="539">
                     <a:s r="538">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="539">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="539" locator="185:49-185:59" path="value" xsi:type="Property">
            <source localId="538" locator="185:49-185:53" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="537" locator="185:32-185:45" name="fhir:CarePlanIntent" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="544" locator="186:1-186:59" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="544">
               <a:s>define function ToString(value </a:s>
               <a:s r="541">
                  <a:s>CarePlanStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="543">
                  <a:s r="543">
                     <a:s r="542">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="543">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="543" locator="186:49-186:59" path="value" xsi:type="Property">
            <source localId="542" locator="186:49-186:53" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="541" locator="186:32-186:45" name="fhir:CarePlanStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="548" locator="187:1-187:59" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="548">
               <a:s>define function ToString(value </a:s>
               <a:s r="545">
                  <a:s>CareTeamStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="547">
                  <a:s r="547">
                     <a:s r="546">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="547">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="547" locator="187:49-187:59" path="value" xsi:type="Property">
            <source localId="546" locator="187:49-187:53" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="545" locator="187:32-187:45" name="fhir:CareTeamStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="552" locator="188:1-188:69" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="552">
               <a:s>define function ToString(value </a:s>
               <a:s r="549">
                  <a:s>CatalogEntryRelationType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="551">
                  <a:s r="551">
                     <a:s r="550">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="551">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="551" locator="188:59-188:69" path="value" xsi:type="Property">
            <source localId="550" locator="188:59-188:63" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="549" locator="188:32-188:55" name="fhir:CatalogEntryRelationType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="556" locator="189:1-189:83" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="556">
               <a:s>define function ToString(value </a:s>
               <a:s r="553">
                  <a:s>ChargeItemDefinitionPriceComponentType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="555">
                  <a:s r="555">
                     <a:s r="554">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="555">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="555" locator="189:73-189:83" path="value" xsi:type="Property">
            <source localId="554" locator="189:73-189:77" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="553" locator="189:32-189:69" name="fhir:ChargeItemDefinitionPriceComponentType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="560" locator="190:1-190:61" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="560">
               <a:s>define function ToString(value </a:s>
               <a:s r="557">
                  <a:s>ChargeItemStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="559">
                  <a:s r="559">
                     <a:s r="558">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="559">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="559" locator="190:51-190:61" path="value" xsi:type="Property">
            <source localId="558" locator="190:51-190:55" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="557" locator="190:32-190:47" name="fhir:ChargeItemStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="564" locator="191:1-191:64" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="564">
               <a:s>define function ToString(value </a:s>
               <a:s r="561">
                  <a:s>ClaimResponseStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="563">
                  <a:s r="563">
                     <a:s r="562">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="563">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="563" locator="191:54-191:64" path="value" xsi:type="Property">
            <source localId="562" locator="191:54-191:58" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="561" locator="191:32-191:50" name="fhir:ClaimResponseStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="568" locator="192:1-192:56" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="568">
               <a:s>define function ToString(value </a:s>
               <a:s r="565">
                  <a:s>ClaimStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="567">
                  <a:s r="567">
                     <a:s r="566">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="567">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="567" locator="192:46-192:56" path="value" xsi:type="Property">
            <source localId="566" locator="192:46-192:50" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="565" locator="192:32-192:42" name="fhir:ClaimStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="572" locator="193:1-193:69" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="572">
               <a:s>define function ToString(value </a:s>
               <a:s r="569">
                  <a:s>ClinicalImpressionStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="571">
                  <a:s r="571">
                     <a:s r="570">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="571">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="571" locator="193:59-193:69" path="value" xsi:type="Property">
            <source localId="570" locator="193:59-193:63" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="569" locator="193:32-193:55" name="fhir:ClinicalImpressionStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="576" locator="194:1-194:62" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="576">
               <a:s>define function ToString(value </a:s>
               <a:s r="573">
                  <a:s>CodeSearchSupport</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="575">
                  <a:s r="575">
                     <a:s r="574">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="575">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="575" locator="194:52-194:62" path="value" xsi:type="Property">
            <source localId="574" locator="194:52-194:56" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="573" locator="194:32-194:48" name="fhir:CodeSearchSupport" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="580" locator="195:1-195:66" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="580">
               <a:s>define function ToString(value </a:s>
               <a:s r="577">
                  <a:s>CodeSystemContentMode</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="579">
                  <a:s r="579">
                     <a:s r="578">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="579">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="579" locator="195:56-195:66" path="value" xsi:type="Property">
            <source localId="578" locator="195:56-195:60" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="577" locator="195:32-195:52" name="fhir:CodeSystemContentMode" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="584" locator="196:1-196:71" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="584">
               <a:s>define function ToString(value </a:s>
               <a:s r="581">
                  <a:s>CodeSystemHierarchyMeaning</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="583">
                  <a:s r="583">
                     <a:s r="582">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="583">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="583" locator="196:61-196:71" path="value" xsi:type="Property">
            <source localId="582" locator="196:61-196:65" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="581" locator="196:32-196:57" name="fhir:CodeSystemHierarchyMeaning" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="588" locator="197:1-197:66" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="588">
               <a:s>define function ToString(value </a:s>
               <a:s r="585">
                  <a:s>CommunicationPriority</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="587">
                  <a:s r="587">
                     <a:s r="586">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="587">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="587" locator="197:56-197:66" path="value" xsi:type="Property">
            <source localId="586" locator="197:56-197:60" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="585" locator="197:32-197:52" name="fhir:CommunicationPriority" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="592" locator="198:1-198:71" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="592">
               <a:s>define function ToString(value </a:s>
               <a:s r="589">
                  <a:s>CommunicationRequestStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="591">
                  <a:s r="591">
                     <a:s r="590">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="591">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="591" locator="198:61-198:71" path="value" xsi:type="Property">
            <source localId="590" locator="198:61-198:65" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="589" locator="198:32-198:57" name="fhir:CommunicationRequestStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="596" locator="199:1-199:64" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="596">
               <a:s>define function ToString(value </a:s>
               <a:s r="593">
                  <a:s>CommunicationStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="595">
                  <a:s r="595">
                     <a:s r="594">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="595">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="595" locator="199:54-199:64" path="value" xsi:type="Property">
            <source localId="594" locator="199:54-199:58" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="593" locator="199:32-199:50" name="fhir:CommunicationStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="600" locator="200:1-200:60" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="600">
               <a:s>define function ToString(value </a:s>
               <a:s r="597">
                  <a:s>CompartmentCode</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="599">
                  <a:s r="599">
                     <a:s r="598">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="599">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="599" locator="200:50-200:60" path="value" xsi:type="Property">
            <source localId="598" locator="200:50-200:54" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="597" locator="200:32-200:46" name="fhir:CompartmentCode" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="604" locator="201:1-201:60" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="604">
               <a:s>define function ToString(value </a:s>
               <a:s r="601">
                  <a:s>CompartmentType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="603">
                  <a:s r="603">
                     <a:s r="602">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="603">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="603" locator="201:50-201:60" path="value" xsi:type="Property">
            <source localId="602" locator="201:50-201:54" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="601" locator="201:32-201:46" name="fhir:CompartmentType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="608" locator="202:1-202:71" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="608">
               <a:s>define function ToString(value </a:s>
               <a:s r="605">
                  <a:s>CompositionAttestationMode</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="607">
                  <a:s r="607">
                     <a:s r="606">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="607">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="607" locator="202:61-202:71" path="value" xsi:type="Property">
            <source localId="606" locator="202:61-202:65" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="605" locator="202:32-202:57" name="fhir:CompositionAttestationMode" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="612" locator="203:1-203:62" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="612">
               <a:s>define function ToString(value </a:s>
               <a:s r="609">
                  <a:s>CompositionStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="611">
                  <a:s r="611">
                     <a:s r="610">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="611">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="611" locator="203:52-203:62" path="value" xsi:type="Property">
            <source localId="610" locator="203:52-203:56" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="609" locator="203:32-203:48" name="fhir:CompositionStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="616" locator="204:1-204:66" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="616">
               <a:s>define function ToString(value </a:s>
               <a:s r="613">
                  <a:s>ConceptMapEquivalence</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="615">
                  <a:s r="615">
                     <a:s r="614">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="615">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="615" locator="204:56-204:66" path="value" xsi:type="Property">
            <source localId="614" locator="204:56-204:60" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="613" locator="204:32-204:52" name="fhir:ConceptMapEquivalence" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="620" locator="205:1-205:72" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="620">
               <a:s>define function ToString(value </a:s>
               <a:s r="617">
                  <a:s>ConceptMapGroupUnmappedMode</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="619">
                  <a:s r="619">
                     <a:s r="618">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="619">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="619" locator="205:62-205:72" path="value" xsi:type="Property">
            <source localId="618" locator="205:62-205:66" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="617" locator="205:32-205:58" name="fhir:ConceptMapGroupUnmappedMode" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="624" locator="206:1-206:68" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="624">
               <a:s>define function ToString(value </a:s>
               <a:s r="621">
                  <a:s>ConditionalDeleteStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="623">
                  <a:s r="623">
                     <a:s r="622">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="623">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="623" locator="206:58-206:68" path="value" xsi:type="Property">
            <source localId="622" locator="206:58-206:62" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="621" locator="206:32-206:54" name="fhir:ConditionalDeleteStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="628" locator="207:1-207:66" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="628">
               <a:s>define function ToString(value </a:s>
               <a:s r="625">
                  <a:s>ConditionalReadStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="627">
                  <a:s r="627">
                     <a:s r="626">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="627">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="627" locator="207:56-207:66" path="value" xsi:type="Property">
            <source localId="626" locator="207:56-207:60" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="625" locator="207:32-207:52" name="fhir:ConditionalReadStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="632" locator="208:1-208:63" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="632">
               <a:s>define function ToString(value </a:s>
               <a:s r="629">
                  <a:s>ConsentDataMeaning</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="631">
                  <a:s r="631">
                     <a:s r="630">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="631">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="631" locator="208:53-208:63" path="value" xsi:type="Property">
            <source localId="630" locator="208:53-208:57" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="629" locator="208:32-208:49" name="fhir:ConsentDataMeaning" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="636" locator="209:1-209:65" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="636">
               <a:s>define function ToString(value </a:s>
               <a:s r="633">
                  <a:s>ConsentProvisionType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="635">
                  <a:s r="635">
                     <a:s r="634">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="635">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="635" locator="209:55-209:65" path="value" xsi:type="Property">
            <source localId="634" locator="209:55-209:59" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="633" locator="209:32-209:51" name="fhir:ConsentProvisionType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="640" locator="210:1-210:57" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="640">
               <a:s>define function ToString(value </a:s>
               <a:s r="637">
                  <a:s>ConsentState</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="639">
                  <a:s r="639">
                     <a:s r="638">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="639">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="639" locator="210:47-210:57" path="value" xsi:type="Property">
            <source localId="638" locator="210:47-210:51" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="637" locator="210:32-210:43" name="fhir:ConsentState" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="644" locator="211:1-211:63" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="644">
               <a:s>define function ToString(value </a:s>
               <a:s r="641">
                  <a:s>ConstraintSeverity</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="643">
                  <a:s r="643">
                     <a:s r="642">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="643">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="643" locator="211:53-211:63" path="value" xsi:type="Property">
            <source localId="642" locator="211:53-211:57" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="641" locator="211:32-211:49" name="fhir:ConstraintSeverity" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="648" locator="212:1-212:63" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="648">
               <a:s>define function ToString(value </a:s>
               <a:s r="645">
                  <a:s>ContactPointSystem</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="647">
                  <a:s r="647">
                     <a:s r="646">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="647">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="647" locator="212:53-212:63" path="value" xsi:type="Property">
            <source localId="646" locator="212:53-212:57" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="645" locator="212:32-212:49" name="fhir:ContactPointSystem" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="652" locator="213:1-213:60" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="652">
               <a:s>define function ToString(value </a:s>
               <a:s r="649">
                  <a:s>ContactPointUse</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="651">
                  <a:s r="651">
                     <a:s r="650">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="651">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="651" locator="213:50-213:60" path="value" xsi:type="Property">
            <source localId="650" locator="213:50-213:54" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="649" locator="213:32-213:46" name="fhir:ContactPointUse" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="656" locator="214:1-214:70" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="656">
               <a:s>define function ToString(value </a:s>
               <a:s r="653">
                  <a:s>ContractPublicationStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="655">
                  <a:s r="655">
                     <a:s r="654">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="655">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="655" locator="214:60-214:70" path="value" xsi:type="Property">
            <source localId="654" locator="214:60-214:64" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="653" locator="214:32-214:56" name="fhir:ContractPublicationStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="660" locator="215:1-215:59" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="660">
               <a:s>define function ToString(value </a:s>
               <a:s r="657">
                  <a:s>ContractStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="659">
                  <a:s r="659">
                     <a:s r="658">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="659">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="659" locator="215:49-215:59" path="value" xsi:type="Property">
            <source localId="658" locator="215:49-215:53" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="657" locator="215:32-215:45" name="fhir:ContractStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="664" locator="216:1-216:60" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="664">
               <a:s>define function ToString(value </a:s>
               <a:s r="661">
                  <a:s>ContributorType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="663">
                  <a:s r="663">
                     <a:s r="662">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="663">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="663" locator="216:50-216:60" path="value" xsi:type="Property">
            <source localId="662" locator="216:50-216:54" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="661" locator="216:32-216:46" name="fhir:ContributorType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="668" locator="217:1-217:59" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="668">
               <a:s>define function ToString(value </a:s>
               <a:s r="665">
                  <a:s>CoverageStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="667">
                  <a:s r="667">
                     <a:s r="666">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="667">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="667" locator="217:49-217:59" path="value" xsi:type="Property">
            <source localId="666" locator="217:49-217:53" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="665" locator="217:32-217:45" name="fhir:CoverageStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="672" locator="218:1-218:57" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="672">
               <a:s>define function ToString(value </a:s>
               <a:s r="669">
                  <a:s>CurrencyCode</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="671">
                  <a:s r="671">
                     <a:s r="670">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="671">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="671" locator="218:47-218:57" path="value" xsi:type="Property">
            <source localId="670" locator="218:47-218:51" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="669" locator="218:32-218:43" name="fhir:CurrencyCode" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="676" locator="219:1-219:54" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="676">
               <a:s>define function ToString(value </a:s>
               <a:s r="673">
                  <a:s>DayOfWeek</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="675">
                  <a:s r="675">
                     <a:s r="674">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="675">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="675" locator="219:44-219:54" path="value" xsi:type="Property">
            <source localId="674" locator="219:44-219:48" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="673" locator="219:32-219:40" name="fhir:DayOfWeek" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="680" locator="220:1-220:55" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="680">
               <a:s>define function ToString(value </a:s>
               <a:s r="677">
                  <a:s>DaysOfWeek</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="679">
                  <a:s r="679">
                     <a:s r="678">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="679">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="679" locator="220:45-220:55" path="value" xsi:type="Property">
            <source localId="678" locator="220:45-220:49" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="677" locator="220:32-220:41" name="fhir:DaysOfWeek" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="684" locator="221:1-221:66" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="684">
               <a:s>define function ToString(value </a:s>
               <a:s r="681">
                  <a:s>DetectedIssueSeverity</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="683">
                  <a:s r="683">
                     <a:s r="682">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="683">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="683" locator="221:56-221:66" path="value" xsi:type="Property">
            <source localId="682" locator="221:56-221:60" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="681" locator="221:32-221:52" name="fhir:DetectedIssueSeverity" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="688" locator="222:1-222:64" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="688">
               <a:s>define function ToString(value </a:s>
               <a:s r="685">
                  <a:s>DetectedIssueStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="687">
                  <a:s r="687">
                     <a:s r="686">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="687">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="687" locator="222:54-222:64" path="value" xsi:type="Property">
            <source localId="686" locator="222:54-222:58" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="685" locator="222:32-222:50" name="fhir:DetectedIssueStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="692" locator="223:1-223:73" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="692">
               <a:s>define function ToString(value </a:s>
               <a:s r="689">
                  <a:s>DeviceMetricCalibrationState</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="691">
                  <a:s r="691">
                     <a:s r="690">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="691">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="691" locator="223:63-223:73" path="value" xsi:type="Property">
            <source localId="690" locator="223:63-223:67" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="689" locator="223:32-223:59" name="fhir:DeviceMetricCalibrationState" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="696" locator="224:1-224:72" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="696">
               <a:s>define function ToString(value </a:s>
               <a:s r="693">
                  <a:s>DeviceMetricCalibrationType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="695">
                  <a:s r="695">
                     <a:s r="694">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="695">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="695" locator="224:62-224:72" path="value" xsi:type="Property">
            <source localId="694" locator="224:62-224:66" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="693" locator="224:32-224:58" name="fhir:DeviceMetricCalibrationType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="700" locator="225:1-225:65" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="700">
               <a:s>define function ToString(value </a:s>
               <a:s r="697">
                  <a:s>DeviceMetricCategory</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="699">
                  <a:s r="699">
                     <a:s r="698">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="699">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="699" locator="225:55-225:65" path="value" xsi:type="Property">
            <source localId="698" locator="225:55-225:59" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="697" locator="225:32-225:51" name="fhir:DeviceMetricCategory" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="704" locator="226:1-226:62" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="704">
               <a:s>define function ToString(value </a:s>
               <a:s r="701">
                  <a:s>DeviceMetricColor</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="703">
                  <a:s r="703">
                     <a:s r="702">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="703">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="703" locator="226:52-226:62" path="value" xsi:type="Property">
            <source localId="702" locator="226:52-226:56" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="701" locator="226:32-226:48" name="fhir:DeviceMetricColor" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="708" locator="227:1-227:74" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="708">
               <a:s>define function ToString(value </a:s>
               <a:s r="705">
                  <a:s>DeviceMetricOperationalStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="707">
                  <a:s r="707">
                     <a:s r="706">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="707">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="707" locator="227:64-227:74" path="value" xsi:type="Property">
            <source localId="706" locator="227:64-227:68" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="705" locator="227:32-227:60" name="fhir:DeviceMetricOperationalStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="712" locator="228:1-228:59" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="712">
               <a:s>define function ToString(value </a:s>
               <a:s r="709">
                  <a:s>DeviceNameType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="711">
                  <a:s r="711">
                     <a:s r="710">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="711">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="711" locator="228:49-228:59" path="value" xsi:type="Property">
            <source localId="710" locator="228:49-228:53" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="709" locator="228:32-228:45" name="fhir:DeviceNameType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="716" locator="229:1-229:64" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="716">
               <a:s>define function ToString(value </a:s>
               <a:s r="713">
                  <a:s>DeviceRequestStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="715">
                  <a:s r="715">
                     <a:s r="714">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="715">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="715" locator="229:54-229:64" path="value" xsi:type="Property">
            <source localId="714" locator="229:54-229:58" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="713" locator="229:32-229:50" name="fhir:DeviceRequestStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="720" locator="230:1-230:69" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="720">
               <a:s>define function ToString(value </a:s>
               <a:s r="717">
                  <a:s>DeviceUseStatementStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="719">
                  <a:s r="719">
                     <a:s r="718">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="719">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="719" locator="230:59-230:69" path="value" xsi:type="Property">
            <source localId="718" locator="230:59-230:63" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="717" locator="230:32-230:55" name="fhir:DeviceUseStatementStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="724" locator="231:1-231:67" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="724">
               <a:s>define function ToString(value </a:s>
               <a:s r="721">
                  <a:s>DiagnosticReportStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="723">
                  <a:s r="723">
                     <a:s r="722">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="723">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="723" locator="231:57-231:67" path="value" xsi:type="Property">
            <source localId="722" locator="231:57-231:61" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="721" locator="231:32-231:53" name="fhir:DiagnosticReportStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="728" locator="232:1-232:62" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="728">
               <a:s>define function ToString(value </a:s>
               <a:s r="725">
                  <a:s>DiscriminatorType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="727">
                  <a:s r="727">
                     <a:s r="726">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="727">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="727" locator="232:52-232:62" path="value" xsi:type="Property">
            <source localId="726" locator="232:52-232:56" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="725" locator="232:32-232:48" name="fhir:DiscriminatorType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="732" locator="233:1-233:68" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="732">
               <a:s>define function ToString(value </a:s>
               <a:s r="729">
                  <a:s>DocumentConfidentiality</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="731">
                  <a:s r="731">
                     <a:s r="730">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="731">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="731" locator="233:58-233:68" path="value" xsi:type="Property">
            <source localId="730" locator="233:58-233:62" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="729" locator="233:32-233:54" name="fhir:DocumentConfidentiality" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="736" locator="234:1-234:57" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="736">
               <a:s>define function ToString(value </a:s>
               <a:s r="733">
                  <a:s>DocumentMode</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="735">
                  <a:s r="735">
                     <a:s r="734">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="735">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="735" locator="234:47-234:57" path="value" xsi:type="Property">
            <source localId="734" locator="234:47-234:51" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="733" locator="234:32-234:43" name="fhir:DocumentMode" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="740" locator="235:1-235:68" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="740">
               <a:s>define function ToString(value </a:s>
               <a:s r="737">
                  <a:s>DocumentReferenceStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="739">
                  <a:s r="739">
                     <a:s r="738">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="739">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="739" locator="235:58-235:68" path="value" xsi:type="Property">
            <source localId="738" locator="235:58-235:62" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="737" locator="235:32-235:54" name="fhir:DocumentReferenceStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="744" locator="236:1-236:69" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="744">
               <a:s>define function ToString(value </a:s>
               <a:s r="741">
                  <a:s>DocumentRelationshipType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="743">
                  <a:s r="743">
                     <a:s r="742">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="743">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="743" locator="236:59-236:69" path="value" xsi:type="Property">
            <source localId="742" locator="236:59-236:63" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="741" locator="236:32-236:55" name="fhir:DocumentRelationshipType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="748" locator="237:1-237:70" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="748">
               <a:s>define function ToString(value </a:s>
               <a:s r="745">
                  <a:s>EligibilityRequestPurpose</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="747">
                  <a:s r="747">
                     <a:s r="746">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="747">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="747" locator="237:60-237:70" path="value" xsi:type="Property">
            <source localId="746" locator="237:60-237:64" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="745" locator="237:32-237:56" name="fhir:EligibilityRequestPurpose" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="752" locator="238:1-238:69" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="752">
               <a:s>define function ToString(value </a:s>
               <a:s r="749">
                  <a:s>EligibilityRequestStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="751">
                  <a:s r="751">
                     <a:s r="750">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="751">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="751" locator="238:59-238:69" path="value" xsi:type="Property">
            <source localId="750" locator="238:59-238:63" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="749" locator="238:32-238:55" name="fhir:EligibilityRequestStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="756" locator="239:1-239:71" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="756">
               <a:s>define function ToString(value </a:s>
               <a:s r="753">
                  <a:s>EligibilityResponsePurpose</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="755">
                  <a:s r="755">
                     <a:s r="754">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="755">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="755" locator="239:61-239:71" path="value" xsi:type="Property">
            <source localId="754" locator="239:61-239:65" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="753" locator="239:32-239:57" name="fhir:EligibilityResponsePurpose" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="760" locator="240:1-240:70" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="760">
               <a:s>define function ToString(value </a:s>
               <a:s r="757">
                  <a:s>EligibilityResponseStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="759">
                  <a:s r="759">
                     <a:s r="758">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="759">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="759" locator="240:60-240:70" path="value" xsi:type="Property">
            <source localId="758" locator="240:60-240:64" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="757" locator="240:32-240:56" name="fhir:EligibilityResponseStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="764" locator="241:1-241:63" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="764">
               <a:s>define function ToString(value </a:s>
               <a:s r="761">
                  <a:s>EnableWhenBehavior</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="763">
                  <a:s r="763">
                     <a:s r="762">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="763">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="763" locator="241:53-241:63" path="value" xsi:type="Property">
            <source localId="762" locator="241:53-241:57" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="761" locator="241:32-241:49" name="fhir:EnableWhenBehavior" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="768" locator="242:1-242:68" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="768">
               <a:s>define function ToString(value </a:s>
               <a:s r="765">
                  <a:s>EncounterLocationStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="767">
                  <a:s r="767">
                     <a:s r="766">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="767">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="767" locator="242:58-242:68" path="value" xsi:type="Property">
            <source localId="766" locator="242:58-242:62" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="765" locator="242:32-242:54" name="fhir:EncounterLocationStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="772" locator="243:1-243:60" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="772">
               <a:s>define function ToString(value </a:s>
               <a:s r="769">
                  <a:s>EncounterStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="771">
                  <a:s r="771">
                     <a:s r="770">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="771">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="771" locator="243:50-243:60" path="value" xsi:type="Property">
            <source localId="770" locator="243:50-243:54" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="769" locator="243:32-243:46" name="fhir:EncounterStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="776" locator="244:1-244:59" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="776">
               <a:s>define function ToString(value </a:s>
               <a:s r="773">
                  <a:s>EndpointStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="775">
                  <a:s r="775">
                     <a:s r="774">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="775">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="775" locator="244:49-244:59" path="value" xsi:type="Property">
            <source localId="774" locator="244:49-244:53" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="773" locator="244:32-244:45" name="fhir:EndpointStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="780" locator="245:1-245:68" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="780">
               <a:s>define function ToString(value </a:s>
               <a:s r="777">
                  <a:s>EnrollmentRequestStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="779">
                  <a:s r="779">
                     <a:s r="778">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="779">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="779" locator="245:58-245:68" path="value" xsi:type="Property">
            <source localId="778" locator="245:58-245:62" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="777" locator="245:32-245:54" name="fhir:EnrollmentRequestStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="784" locator="246:1-246:69" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="784">
               <a:s>define function ToString(value </a:s>
               <a:s r="781">
                  <a:s>EnrollmentResponseStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="783">
                  <a:s r="783">
                     <a:s r="782">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="783">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="783" locator="246:59-246:69" path="value" xsi:type="Property">
            <source localId="782" locator="246:59-246:63" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="781" locator="246:32-246:55" name="fhir:EnrollmentResponseStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="788" locator="247:1-247:64" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="788">
               <a:s>define function ToString(value </a:s>
               <a:s r="785">
                  <a:s>EpisodeOfCareStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="787">
                  <a:s r="787">
                     <a:s r="786">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="787">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="787" locator="247:54-247:64" path="value" xsi:type="Property">
            <source localId="786" locator="247:54-247:58" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="785" locator="247:32-247:50" name="fhir:EpisodeOfCareStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="792" locator="248:1-248:64" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="792">
               <a:s>define function ToString(value </a:s>
               <a:s r="789">
                  <a:s>EventCapabilityMode</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="791">
                  <a:s r="791">
                     <a:s r="790">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="791">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="791" locator="248:54-248:64" path="value" xsi:type="Property">
            <source localId="790" locator="248:54-248:58" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="789" locator="248:32-248:50" name="fhir:EventCapabilityMode" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="796" locator="249:1-249:56" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="796">
               <a:s>define function ToString(value </a:s>
               <a:s r="793">
                  <a:s>EventTiming</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="795">
                  <a:s r="795">
                     <a:s r="794">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="795">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="795" locator="249:46-249:56" path="value" xsi:type="Property">
            <source localId="794" locator="249:46-249:50" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="793" locator="249:32-249:42" name="fhir:EventTiming" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="800" locator="250:1-250:65" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="800">
               <a:s>define function ToString(value </a:s>
               <a:s r="797">
                  <a:s>EvidenceVariableType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="799">
                  <a:s r="799">
                     <a:s r="798">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="799">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="799" locator="250:55-250:65" path="value" xsi:type="Property">
            <source localId="798" locator="250:55-250:59" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="797" locator="250:32-250:51" name="fhir:EvidenceVariableType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="804" locator="251:1-251:69" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="804">
               <a:s>define function ToString(value </a:s>
               <a:s r="801">
                  <a:s>ExampleScenarioActorType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="803">
                  <a:s r="803">
                     <a:s r="802">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="803">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="803" locator="251:59-251:69" path="value" xsi:type="Property">
            <source localId="802" locator="251:59-251:63" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="801" locator="251:32-251:55" name="fhir:ExampleScenarioActorType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="808" locator="252:1-252:71" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="808">
               <a:s>define function ToString(value </a:s>
               <a:s r="805">
                  <a:s>ExplanationOfBenefitStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="807">
                  <a:s r="807">
                     <a:s r="806">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="807">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="807" locator="252:61-252:71" path="value" xsi:type="Property">
            <source localId="806" locator="252:61-252:65" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="805" locator="252:32-252:57" name="fhir:ExplanationOfBenefitStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="812" locator="253:1-253:58" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="812">
               <a:s>define function ToString(value </a:s>
               <a:s r="809">
                  <a:s>ExposureState</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="811">
                  <a:s r="811">
                     <a:s r="810">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="811">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="811" locator="253:48-253:58" path="value" xsi:type="Property">
            <source localId="810" locator="253:48-253:52" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="809" locator="253:32-253:44" name="fhir:ExposureState" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="816" locator="254:1-254:65" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="816">
               <a:s>define function ToString(value </a:s>
               <a:s r="813">
                  <a:s>ExtensionContextType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="815">
                  <a:s r="815">
                     <a:s r="814">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="815">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="815" locator="254:55-254:65" path="value" xsi:type="Property">
            <source localId="814" locator="254:55-254:59" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="813" locator="254:32-254:51" name="fhir:ExtensionContextType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="820" locator="255:1-255:57" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="820">
               <a:s>define function ToString(value </a:s>
               <a:s r="817">
                  <a:s>FHIRAllTypes</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="819">
                  <a:s r="819">
                     <a:s r="818">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="819">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="819" locator="255:47-255:57" path="value" xsi:type="Property">
            <source localId="818" locator="255:47-255:51" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="817" locator="255:32-255:43" name="fhir:FHIRAllTypes" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="824" locator="256:1-256:60" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="824">
               <a:s>define function ToString(value </a:s>
               <a:s r="821">
                  <a:s>FHIRDefinedType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="823">
                  <a:s r="823">
                     <a:s r="822">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="823">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="823" locator="256:50-256:60" path="value" xsi:type="Property">
            <source localId="822" locator="256:50-256:54" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="821" locator="256:32-256:46" name="fhir:FHIRDefinedType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="828" locator="257:1-257:61" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="828">
               <a:s>define function ToString(value </a:s>
               <a:s r="825">
                  <a:s>FHIRDeviceStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="827">
                  <a:s r="827">
                     <a:s r="826">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="827">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="827" locator="257:51-257:61" path="value" xsi:type="Property">
            <source localId="826" locator="257:51-257:55" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="825" locator="257:32-257:47" name="fhir:FHIRDeviceStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="832" locator="258:1-258:61" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="832">
               <a:s>define function ToString(value </a:s>
               <a:s r="829">
                  <a:s>FHIRResourceType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="831">
                  <a:s r="831">
                     <a:s r="830">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="831">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="831" locator="258:51-258:61" path="value" xsi:type="Property">
            <source localId="830" locator="258:51-258:55" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="829" locator="258:32-258:47" name="fhir:FHIRResourceType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="836" locator="259:1-259:64" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="836">
               <a:s>define function ToString(value </a:s>
               <a:s r="833">
                  <a:s>FHIRSubstanceStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="835">
                  <a:s r="835">
                     <a:s r="834">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="835">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="835" locator="259:54-259:64" path="value" xsi:type="Property">
            <source localId="834" locator="259:54-259:58" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="833" locator="259:32-259:50" name="fhir:FHIRSubstanceStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="840" locator="260:1-260:56" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="840">
               <a:s>define function ToString(value </a:s>
               <a:s r="837">
                  <a:s>FHIRVersion</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="839">
                  <a:s r="839">
                     <a:s r="838">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="839">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="839" locator="260:46-260:56" path="value" xsi:type="Property">
            <source localId="838" locator="260:46-260:50" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="837" locator="260:32-260:42" name="fhir:FHIRVersion" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="844" locator="261:1-261:64" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="844">
               <a:s>define function ToString(value </a:s>
               <a:s r="841">
                  <a:s>FamilyHistoryStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="843">
                  <a:s r="843">
                     <a:s r="842">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="843">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="843" locator="261:54-261:64" path="value" xsi:type="Property">
            <source localId="842" locator="261:54-261:58" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="841" locator="261:32-261:50" name="fhir:FamilyHistoryStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="848" locator="262:1-262:59" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="848">
               <a:s>define function ToString(value </a:s>
               <a:s r="845">
                  <a:s>FilterOperator</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="847">
                  <a:s r="847">
                     <a:s r="846">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="847">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="847" locator="262:49-262:59" path="value" xsi:type="Property">
            <source localId="846" locator="262:49-262:53" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="845" locator="262:32-262:45" name="fhir:FilterOperator" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="852" locator="263:1-263:55" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="852">
               <a:s>define function ToString(value </a:s>
               <a:s r="849">
                  <a:s>FlagStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="851">
                  <a:s r="851">
                     <a:s r="850">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="851">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="851" locator="263:45-263:55" path="value" xsi:type="Property">
            <source localId="850" locator="263:45-263:49" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="849" locator="263:32-263:41" name="fhir:FlagStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="856" locator="264:1-264:64" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="856">
               <a:s>define function ToString(value </a:s>
               <a:s r="853">
                  <a:s>GoalLifecycleStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="855">
                  <a:s r="855">
                     <a:s r="854">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="855">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="855" locator="264:54-264:64" path="value" xsi:type="Property">
            <source localId="854" locator="264:54-264:58" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="853" locator="264:32-264:50" name="fhir:GoalLifecycleStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="860" locator="265:1-265:65" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="860">
               <a:s>define function ToString(value </a:s>
               <a:s r="857">
                  <a:s>GraphCompartmentRule</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="859">
                  <a:s r="859">
                     <a:s r="858">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="859">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="859" locator="265:55-265:65" path="value" xsi:type="Property">
            <source localId="858" locator="265:55-265:59" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="857" locator="265:32-265:51" name="fhir:GraphCompartmentRule" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="864" locator="266:1-266:64" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="864">
               <a:s>define function ToString(value </a:s>
               <a:s r="861">
                  <a:s>GraphCompartmentUse</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="863">
                  <a:s r="863">
                     <a:s r="862">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="863">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="863" locator="266:54-266:64" path="value" xsi:type="Property">
            <source localId="862" locator="266:54-266:58" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="861" locator="266:32-266:50" name="fhir:GraphCompartmentUse" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="868" locator="267:1-267:57" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="868">
               <a:s>define function ToString(value </a:s>
               <a:s r="865">
                  <a:s>GroupMeasure</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="867">
                  <a:s r="867">
                     <a:s r="866">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="867">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="867" locator="267:47-267:57" path="value" xsi:type="Property">
            <source localId="866" locator="267:47-267:51" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="865" locator="267:32-267:43" name="fhir:GroupMeasure" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="872" locator="268:1-268:54" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="872">
               <a:s>define function ToString(value </a:s>
               <a:s r="869">
                  <a:s>GroupType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="871">
                  <a:s r="871">
                     <a:s r="870">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="871">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="871" locator="268:44-268:54" path="value" xsi:type="Property">
            <source localId="870" locator="268:44-268:48" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="869" locator="268:32-268:40" name="fhir:GroupType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="876" locator="269:1-269:67" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="876">
               <a:s>define function ToString(value </a:s>
               <a:s r="873">
                  <a:s>GuidanceResponseStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="875">
                  <a:s r="875">
                     <a:s r="874">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="875">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="875" locator="269:57-269:67" path="value" xsi:type="Property">
            <source localId="874" locator="269:57-269:61" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="873" locator="269:32-269:53" name="fhir:GuidanceResponseStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="880" locator="270:1-270:64" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="880">
               <a:s>define function ToString(value </a:s>
               <a:s r="877">
                  <a:s>GuidePageGeneration</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="879">
                  <a:s r="879">
                     <a:s r="878">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="879">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="879" locator="270:54-270:64" path="value" xsi:type="Property">
            <source localId="878" locator="270:54-270:58" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="877" locator="270:32-270:50" name="fhir:GuidePageGeneration" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="884" locator="271:1-271:63" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="884">
               <a:s>define function ToString(value </a:s>
               <a:s r="881">
                  <a:s>GuideParameterCode</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="883">
                  <a:s r="883">
                     <a:s r="882">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="883">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="883" locator="271:53-271:63" path="value" xsi:type="Property">
            <source localId="882" locator="271:53-271:57" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="881" locator="271:32-271:49" name="fhir:GuideParameterCode" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="888" locator="272:1-272:53" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="888">
               <a:s>define function ToString(value </a:s>
               <a:s r="885">
                  <a:s>HTTPVerb</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="887">
                  <a:s r="887">
                     <a:s r="886">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="887">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="887" locator="272:43-272:53" path="value" xsi:type="Property">
            <source localId="886" locator="272:43-272:47" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="885" locator="272:32-272:39" name="fhir:HTTPVerb" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="892" locator="273:1-273:58" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="892">
               <a:s>define function ToString(value </a:s>
               <a:s r="889">
                  <a:s>IdentifierUse</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="891">
                  <a:s r="891">
                     <a:s r="890">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="891">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="891" locator="273:48-273:58" path="value" xsi:type="Property">
            <source localId="890" locator="273:48-273:52" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="889" locator="273:32-273:44" name="fhir:IdentifierUse" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="896" locator="274:1-274:67" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="896">
               <a:s>define function ToString(value </a:s>
               <a:s r="893">
                  <a:s>IdentityAssuranceLevel</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="895">
                  <a:s r="895">
                     <a:s r="894">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="895">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="895" locator="274:57-274:67" path="value" xsi:type="Property">
            <source localId="894" locator="274:57-274:61" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="893" locator="274:32-274:53" name="fhir:IdentityAssuranceLevel" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="900" locator="275:1-275:63" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="900">
               <a:s>define function ToString(value </a:s>
               <a:s r="897">
                  <a:s>ImagingStudyStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="899">
                  <a:s r="899">
                     <a:s r="898">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="899">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="899" locator="275:53-275:63" path="value" xsi:type="Property">
            <source localId="898" locator="275:53-275:57" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="897" locator="275:32-275:49" name="fhir:ImagingStudyStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="904" locator="276:1-276:73" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="904">
               <a:s>define function ToString(value </a:s>
               <a:s r="901">
                  <a:s>ImmunizationEvaluationStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="903">
                  <a:s r="903">
                     <a:s r="902">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="903">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="903" locator="276:63-276:73" path="value" xsi:type="Property">
            <source localId="902" locator="276:63-276:67" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="901" locator="276:32-276:59" name="fhir:ImmunizationEvaluationStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="908" locator="277:1-277:63" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="908">
               <a:s>define function ToString(value </a:s>
               <a:s r="905">
                  <a:s>ImmunizationStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="907">
                  <a:s r="907">
                     <a:s r="906">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="907">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="907" locator="277:53-277:63" path="value" xsi:type="Property">
            <source localId="906" locator="277:53-277:57" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="905" locator="277:32-277:49" name="fhir:ImmunizationStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="912" locator="278:1-278:70" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="912">
               <a:s>define function ToString(value </a:s>
               <a:s r="909">
                  <a:s>InvoicePriceComponentType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="911">
                  <a:s r="911">
                     <a:s r="910">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="911">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="911" locator="278:60-278:70" path="value" xsi:type="Property">
            <source localId="910" locator="278:60-278:64" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="909" locator="278:32-278:56" name="fhir:InvoicePriceComponentType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="916" locator="279:1-279:58" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="916">
               <a:s>define function ToString(value </a:s>
               <a:s r="913">
                  <a:s>InvoiceStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="915">
                  <a:s r="915">
                     <a:s r="914">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="915">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="915" locator="279:48-279:58" path="value" xsi:type="Property">
            <source localId="914" locator="279:48-279:52" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="913" locator="279:32-279:44" name="fhir:InvoiceStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="920" locator="280:1-280:58" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="920">
               <a:s>define function ToString(value </a:s>
               <a:s r="917">
                  <a:s>IssueSeverity</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="919">
                  <a:s r="919">
                     <a:s r="918">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="919">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="919" locator="280:48-280:58" path="value" xsi:type="Property">
            <source localId="918" locator="280:48-280:52" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="917" locator="280:32-280:44" name="fhir:IssueSeverity" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="924" locator="281:1-281:54" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="924">
               <a:s>define function ToString(value </a:s>
               <a:s r="921">
                  <a:s>IssueType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="923">
                  <a:s r="923">
                     <a:s r="922">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="923">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="923" locator="281:44-281:54" path="value" xsi:type="Property">
            <source localId="922" locator="281:44-281:48" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="921" locator="281:32-281:40" name="fhir:IssueType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="928" locator="282:1-282:53" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="928">
               <a:s>define function ToString(value </a:s>
               <a:s r="925">
                  <a:s>LinkType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="927">
                  <a:s r="927">
                     <a:s r="926">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="927">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="927" locator="282:43-282:53" path="value" xsi:type="Property">
            <source localId="926" locator="282:43-282:47" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="925" locator="282:32-282:39" name="fhir:LinkType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="932" locator="283:1-283:56" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="932">
               <a:s>define function ToString(value </a:s>
               <a:s r="929">
                  <a:s>LinkageType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="931">
                  <a:s r="931">
                     <a:s r="930">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="931">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="931" locator="283:46-283:56" path="value" xsi:type="Property">
            <source localId="930" locator="283:46-283:50" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="929" locator="283:32-283:42" name="fhir:LinkageType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="936" locator="284:1-284:53" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="936">
               <a:s>define function ToString(value </a:s>
               <a:s r="933">
                  <a:s>ListMode</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="935">
                  <a:s r="935">
                     <a:s r="934">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="935">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="935" locator="284:43-284:53" path="value" xsi:type="Property">
            <source localId="934" locator="284:43-284:47" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="933" locator="284:32-284:39" name="fhir:ListMode" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="940" locator="285:1-285:55" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="940">
               <a:s>define function ToString(value </a:s>
               <a:s r="937">
                  <a:s>ListStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="939">
                  <a:s r="939">
                     <a:s r="938">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="939">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="939" locator="285:45-285:55" path="value" xsi:type="Property">
            <source localId="938" locator="285:45-285:49" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="937" locator="285:32-285:41" name="fhir:ListStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="944" locator="286:1-286:57" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="944">
               <a:s>define function ToString(value </a:s>
               <a:s r="941">
                  <a:s>LocationMode</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="943">
                  <a:s r="943">
                     <a:s r="942">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="943">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="943" locator="286:47-286:57" path="value" xsi:type="Property">
            <source localId="942" locator="286:47-286:51" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="941" locator="286:32-286:43" name="fhir:LocationMode" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="948" locator="287:1-287:59" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="948">
               <a:s>define function ToString(value </a:s>
               <a:s r="945">
                  <a:s>LocationStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="947">
                  <a:s r="947">
                     <a:s r="946">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="947">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="947" locator="287:49-287:59" path="value" xsi:type="Property">
            <source localId="946" locator="287:49-287:53" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="945" locator="287:32-287:45" name="fhir:LocationStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="952" locator="288:1-288:64" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="952">
               <a:s>define function ToString(value </a:s>
               <a:s r="949">
                  <a:s>MeasureReportStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="951">
                  <a:s r="951">
                     <a:s r="950">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="951">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="951" locator="288:54-288:64" path="value" xsi:type="Property">
            <source localId="950" locator="288:54-288:58" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="949" locator="288:32-288:50" name="fhir:MeasureReportStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="956" locator="289:1-289:62" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="956">
               <a:s>define function ToString(value </a:s>
               <a:s r="953">
                  <a:s>MeasureReportType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="955">
                  <a:s r="955">
                     <a:s r="954">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="955">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="955" locator="289:52-289:62" path="value" xsi:type="Property">
            <source localId="954" locator="289:52-289:56" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="953" locator="289:32-289:48" name="fhir:MeasureReportType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="960" locator="290:1-290:56" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="960">
               <a:s>define function ToString(value </a:s>
               <a:s r="957">
                  <a:s>MediaStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="959">
                  <a:s r="959">
                     <a:s r="958">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="959">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="959" locator="290:46-290:56" path="value" xsi:type="Property">
            <source localId="958" locator="290:46-290:50" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="957" locator="290:32-290:42" name="fhir:MediaStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="964" locator="291:1-291:75" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="964">
               <a:s>define function ToString(value </a:s>
               <a:s r="961">
                  <a:s>MedicationAdministrationStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="963">
                  <a:s r="963">
                     <a:s r="962">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="963">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="963" locator="291:65-291:75" path="value" xsi:type="Property">
            <source localId="962" locator="291:65-291:69" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="961" locator="291:32-291:61" name="fhir:MedicationAdministrationStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="968" locator="292:1-292:69" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="968">
               <a:s>define function ToString(value </a:s>
               <a:s r="965">
                  <a:s>MedicationDispenseStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="967">
                  <a:s r="967">
                     <a:s r="966">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="967">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="967" locator="292:59-292:69" path="value" xsi:type="Property">
            <source localId="966" locator="292:59-292:63" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="965" locator="292:32-292:55" name="fhir:MedicationDispenseStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="972" locator="293:1-293:70" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="972">
               <a:s>define function ToString(value </a:s>
               <a:s r="969">
                  <a:s>MedicationKnowledgeStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="971">
                  <a:s r="971">
                     <a:s r="970">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="971">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="971" locator="293:60-293:70" path="value" xsi:type="Property">
            <source localId="970" locator="293:60-293:64" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="969" locator="293:32-293:56" name="fhir:MedicationKnowledgeStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="976" locator="294:1-294:68" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="976">
               <a:s>define function ToString(value </a:s>
               <a:s r="973">
                  <a:s>MedicationRequestIntent</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="975">
                  <a:s r="975">
                     <a:s r="974">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="975">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="975" locator="294:58-294:68" path="value" xsi:type="Property">
            <source localId="974" locator="294:58-294:62" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="973" locator="294:32-294:54" name="fhir:MedicationRequestIntent" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="980" locator="295:1-295:70" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="980">
               <a:s>define function ToString(value </a:s>
               <a:s r="977">
                  <a:s>MedicationRequestPriority</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="979">
                  <a:s r="979">
                     <a:s r="978">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="979">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="979" locator="295:60-295:70" path="value" xsi:type="Property">
            <source localId="978" locator="295:60-295:64" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="977" locator="295:32-295:56" name="fhir:MedicationRequestPriority" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="984" locator="296:1-296:68" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="984">
               <a:s>define function ToString(value </a:s>
               <a:s r="981">
                  <a:s>MedicationRequestStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="983">
                  <a:s r="983">
                     <a:s r="982">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="983">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="983" locator="296:58-296:68" path="value" xsi:type="Property">
            <source localId="982" locator="296:58-296:62" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="981" locator="296:32-296:54" name="fhir:MedicationRequestStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="988" locator="297:1-297:70" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="988">
               <a:s>define function ToString(value </a:s>
               <a:s r="985">
                  <a:s>MedicationStatementStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="987">
                  <a:s r="987">
                     <a:s r="986">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="987">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="987" locator="297:60-297:70" path="value" xsi:type="Property">
            <source localId="986" locator="297:60-297:64" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="985" locator="297:32-297:56" name="fhir:MedicationStatementStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="992" locator="298:1-298:61" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="992">
               <a:s>define function ToString(value </a:s>
               <a:s r="989">
                  <a:s>MedicationStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="991">
                  <a:s r="991">
                     <a:s r="990">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="991">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="991" locator="298:51-298:61" path="value" xsi:type="Property">
            <source localId="990" locator="298:51-298:55" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="989" locator="298:32-298:47" name="fhir:MedicationStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="996" locator="299:1-299:72" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="996">
               <a:s>define function ToString(value </a:s>
               <a:s r="993">
                  <a:s>MessageSignificanceCategory</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="995">
                  <a:s r="995">
                     <a:s r="994">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="995">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="995" locator="299:62-299:72" path="value" xsi:type="Property">
            <source localId="994" locator="299:62-299:66" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="993" locator="299:32-299:58" name="fhir:MessageSignificanceCategory" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1000" locator="300:1-300:75" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1000">
               <a:s>define function ToString(value </a:s>
               <a:s r="997">
                  <a:s>Messageheader_Response_Request</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="999">
                  <a:s r="999">
                     <a:s r="998">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="999">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="999" locator="300:65-300:75" path="value" xsi:type="Property">
            <source localId="998" locator="300:65-300:69" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="997" locator="300:32-300:61" name="fhir:Messageheader_Response_Request" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1004" locator="301:1-301:53" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1004">
               <a:s>define function ToString(value </a:s>
               <a:s r="1001">
                  <a:s>MimeType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1003">
                  <a:s r="1003">
                     <a:s r="1002">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1003">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1003" locator="301:43-301:53" path="value" xsi:type="Property">
            <source localId="1002" locator="301:43-301:47" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1001" locator="301:32-301:39" name="fhir:MimeType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1008" locator="302:1-302:52" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1008">
               <a:s>define function ToString(value </a:s>
               <a:s r="1005">
                  <a:s>NameUse</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1007">
                  <a:s r="1007">
                     <a:s r="1006">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1007">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1007" locator="302:42-302:52" path="value" xsi:type="Property">
            <source localId="1006" locator="302:42-302:46" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1005" locator="302:32-302:38" name="fhir:NameUse" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1012" locator="303:1-303:71" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1012">
               <a:s>define function ToString(value </a:s>
               <a:s r="1009">
                  <a:s>NamingSystemIdentifierType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1011">
                  <a:s r="1011">
                     <a:s r="1010">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1011">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1011" locator="303:61-303:71" path="value" xsi:type="Property">
            <source localId="1010" locator="303:61-303:65" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1009" locator="303:32-303:57" name="fhir:NamingSystemIdentifierType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1016" locator="304:1-304:61" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1016">
               <a:s>define function ToString(value </a:s>
               <a:s r="1013">
                  <a:s>NamingSystemType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1015">
                  <a:s r="1015">
                     <a:s r="1014">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1015">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1015" locator="304:51-304:61" path="value" xsi:type="Property">
            <source localId="1014" locator="304:51-304:55" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1013" locator="304:32-304:47" name="fhir:NamingSystemType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1020" locator="305:1-305:60" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1020">
               <a:s>define function ToString(value </a:s>
               <a:s r="1017">
                  <a:s>NarrativeStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1019">
                  <a:s r="1019">
                     <a:s r="1018">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1019">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1019" locator="305:50-305:60" path="value" xsi:type="Property">
            <source localId="1018" locator="305:50-305:54" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1017" locator="305:32-305:46" name="fhir:NarrativeStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1024" locator="306:1-306:53" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1024">
               <a:s>define function ToString(value </a:s>
               <a:s r="1021">
                  <a:s>NoteType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1023">
                  <a:s r="1023">
                     <a:s r="1022">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1023">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1023" locator="306:43-306:53" path="value" xsi:type="Property">
            <source localId="1022" locator="306:43-306:47" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1021" locator="306:32-306:39" name="fhir:NoteType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1028" locator="307:1-307:66" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1028">
               <a:s>define function ToString(value </a:s>
               <a:s r="1025">
                  <a:s>NutritiionOrderIntent</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1027">
                  <a:s r="1027">
                     <a:s r="1026">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1027">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1027" locator="307:56-307:66" path="value" xsi:type="Property">
            <source localId="1026" locator="307:56-307:60" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1025" locator="307:32-307:52" name="fhir:NutritiionOrderIntent" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1032" locator="308:1-308:65" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1032">
               <a:s>define function ToString(value </a:s>
               <a:s r="1029">
                  <a:s>NutritionOrderStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1031">
                  <a:s r="1031">
                     <a:s r="1030">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1031">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1031" locator="308:55-308:65" path="value" xsi:type="Property">
            <source localId="1030" locator="308:55-308:59" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1029" locator="308:32-308:51" name="fhir:NutritionOrderStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1036" locator="309:1-309:64" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1036">
               <a:s>define function ToString(value </a:s>
               <a:s r="1033">
                  <a:s>ObservationDataType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1035">
                  <a:s r="1035">
                     <a:s r="1034">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1035">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1035" locator="309:54-309:64" path="value" xsi:type="Property">
            <source localId="1034" locator="309:54-309:58" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1033" locator="309:32-309:50" name="fhir:ObservationDataType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1040" locator="310:1-310:69" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1040">
               <a:s>define function ToString(value </a:s>
               <a:s r="1037">
                  <a:s>ObservationRangeCategory</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1039">
                  <a:s r="1039">
                     <a:s r="1038">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1039">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1039" locator="310:59-310:69" path="value" xsi:type="Property">
            <source localId="1038" locator="310:59-310:63" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1037" locator="310:32-310:55" name="fhir:ObservationRangeCategory" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1044" locator="311:1-311:62" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1044">
               <a:s>define function ToString(value </a:s>
               <a:s r="1041">
                  <a:s>ObservationStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1043">
                  <a:s r="1043">
                     <a:s r="1042">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1043">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1043" locator="311:52-311:62" path="value" xsi:type="Property">
            <source localId="1042" locator="311:52-311:56" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1041" locator="311:32-311:48" name="fhir:ObservationStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1048" locator="312:1-312:58" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1048">
               <a:s>define function ToString(value </a:s>
               <a:s r="1045">
                  <a:s>OperationKind</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1047">
                  <a:s r="1047">
                     <a:s r="1046">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1047">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1047" locator="312:48-312:58" path="value" xsi:type="Property">
            <source localId="1046" locator="312:48-312:52" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1045" locator="312:32-312:44" name="fhir:OperationKind" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1052" locator="313:1-313:66" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1052">
               <a:s>define function ToString(value </a:s>
               <a:s r="1049">
                  <a:s>OperationParameterUse</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1051">
                  <a:s r="1051">
                     <a:s r="1050">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1051">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1051" locator="313:56-313:66" path="value" xsi:type="Property">
            <source localId="1050" locator="313:56-313:60" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1049" locator="313:32-313:52" name="fhir:OperationParameterUse" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1056" locator="314:1-314:60" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1056">
               <a:s>define function ToString(value </a:s>
               <a:s r="1053">
                  <a:s>OrientationType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1055">
                  <a:s r="1055">
                     <a:s r="1054">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1055">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1055" locator="314:50-314:60" path="value" xsi:type="Property">
            <source localId="1054" locator="314:50-314:54" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1053" locator="314:32-314:46" name="fhir:OrientationType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1060" locator="315:1-315:57" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1060">
               <a:s>define function ToString(value </a:s>
               <a:s r="1057">
                  <a:s>ParameterUse</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1059">
                  <a:s r="1059">
                     <a:s r="1058">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1059">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1059" locator="315:47-315:57" path="value" xsi:type="Property">
            <source localId="1058" locator="315:47-315:51" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1057" locator="315:32-315:43" name="fhir:ParameterUse" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1064" locator="316:1-316:64" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1064">
               <a:s>define function ToString(value </a:s>
               <a:s r="1061">
                  <a:s>ParticipantRequired</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1063">
                  <a:s r="1063">
                     <a:s r="1062">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1063">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1063" locator="316:54-316:64" path="value" xsi:type="Property">
            <source localId="1062" locator="316:54-316:58" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1061" locator="316:32-316:50" name="fhir:ParticipantRequired" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1068" locator="317:1-317:62" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1068">
               <a:s>define function ToString(value </a:s>
               <a:s r="1065">
                  <a:s>ParticipantStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1067">
                  <a:s r="1067">
                     <a:s r="1066">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1067">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1067" locator="317:52-317:62" path="value" xsi:type="Property">
            <source localId="1066" locator="317:52-317:56" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1065" locator="317:32-317:48" name="fhir:ParticipantStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1072" locator="318:1-318:64" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1072">
               <a:s>define function ToString(value </a:s>
               <a:s r="1069">
                  <a:s>ParticipationStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1071">
                  <a:s r="1071">
                     <a:s r="1070">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1071">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1071" locator="318:54-318:64" path="value" xsi:type="Property">
            <source localId="1070" locator="318:54-318:58" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1069" locator="318:32-318:50" name="fhir:ParticipationStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1076" locator="319:1-319:64" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1076">
               <a:s>define function ToString(value </a:s>
               <a:s r="1073">
                  <a:s>PaymentNoticeStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1075">
                  <a:s r="1075">
                     <a:s r="1074">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1075">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1075" locator="319:54-319:64" path="value" xsi:type="Property">
            <source localId="1074" locator="319:54-319:58" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1073" locator="319:32-319:50" name="fhir:PaymentNoticeStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1080" locator="320:1-320:72" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1080">
               <a:s>define function ToString(value </a:s>
               <a:s r="1077">
                  <a:s>PaymentReconciliationStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1079">
                  <a:s r="1079">
                     <a:s r="1078">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1079">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1079" locator="320:62-320:72" path="value" xsi:type="Property">
            <source localId="1078" locator="320:62-320:66" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1077" locator="320:32-320:58" name="fhir:PaymentReconciliationStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1084" locator="321:1-321:60" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1084">
               <a:s>define function ToString(value </a:s>
               <a:s r="1081">
                  <a:s>ProcedureStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1083">
                  <a:s r="1083">
                     <a:s r="1082">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1083">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1083" locator="321:50-321:60" path="value" xsi:type="Property">
            <source localId="1082" locator="321:50-321:54" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1081" locator="321:32-321:46" name="fhir:ProcedureStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1088" locator="322:1-322:67" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1088">
               <a:s>define function ToString(value </a:s>
               <a:s r="1085">
                  <a:s>PropertyRepresentation</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1087">
                  <a:s r="1087">
                     <a:s r="1086">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1087">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1087" locator="322:57-322:67" path="value" xsi:type="Property">
            <source localId="1086" locator="322:57-322:61" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1085" locator="322:32-322:53" name="fhir:PropertyRepresentation" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1092" locator="323:1-323:57" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1092">
               <a:s>define function ToString(value </a:s>
               <a:s r="1089">
                  <a:s>PropertyType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1091">
                  <a:s r="1091">
                     <a:s r="1090">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1091">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1091" locator="323:47-323:57" path="value" xsi:type="Property">
            <source localId="1090" locator="323:47-323:51" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1089" locator="323:32-323:43" name="fhir:PropertyType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1096" locator="324:1-324:65" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1096">
               <a:s>define function ToString(value </a:s>
               <a:s r="1093">
                  <a:s>ProvenanceEntityRole</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1095">
                  <a:s r="1095">
                     <a:s r="1094">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1095">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1095" locator="324:55-324:65" path="value" xsi:type="Property">
            <source localId="1094" locator="324:55-324:59" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1093" locator="324:32-324:51" name="fhir:ProvenanceEntityRole" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1100" locator="325:1-325:62" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1100">
               <a:s>define function ToString(value </a:s>
               <a:s r="1097">
                  <a:s>PublicationStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1099">
                  <a:s r="1099">
                     <a:s r="1098">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1099">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1099" locator="325:52-325:62" path="value" xsi:type="Property">
            <source localId="1098" locator="325:52-325:56" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1097" locator="325:32-325:48" name="fhir:PublicationStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1104" locator="326:1-326:56" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1104">
               <a:s>define function ToString(value </a:s>
               <a:s r="1101">
                  <a:s>QualityType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1103">
                  <a:s r="1103">
                     <a:s r="1102">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1103">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1103" locator="326:46-326:56" path="value" xsi:type="Property">
            <source localId="1102" locator="326:46-326:50" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1101" locator="326:32-326:42" name="fhir:QualityType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1108" locator="327:1-327:63" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1108">
               <a:s>define function ToString(value </a:s>
               <a:s r="1105">
                  <a:s>QuantityComparator</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1107">
                  <a:s r="1107">
                     <a:s r="1106">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1107">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1107" locator="327:53-327:63" path="value" xsi:type="Property">
            <source localId="1106" locator="327:53-327:57" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1105" locator="327:32-327:49" name="fhir:QuantityComparator" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1112" locator="328:1-328:70" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1112">
               <a:s>define function ToString(value </a:s>
               <a:s r="1109">
                  <a:s>QuestionnaireItemOperator</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1111">
                  <a:s r="1111">
                     <a:s r="1110">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1111">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1111" locator="328:60-328:70" path="value" xsi:type="Property">
            <source localId="1110" locator="328:60-328:64" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1109" locator="328:32-328:56" name="fhir:QuestionnaireItemOperator" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1116" locator="329:1-329:66" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1116">
               <a:s>define function ToString(value </a:s>
               <a:s r="1113">
                  <a:s>QuestionnaireItemType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1115">
                  <a:s r="1115">
                     <a:s r="1114">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1115">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1115" locator="329:56-329:66" path="value" xsi:type="Property">
            <source localId="1114" locator="329:56-329:60" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1113" locator="329:32-329:52" name="fhir:QuestionnaireItemType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1120" locator="330:1-330:72" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1120">
               <a:s>define function ToString(value </a:s>
               <a:s r="1117">
                  <a:s>QuestionnaireResponseStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1119">
                  <a:s r="1119">
                     <a:s r="1118">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1119">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1119" locator="330:62-330:72" path="value" xsi:type="Property">
            <source localId="1118" locator="330:62-330:66" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1117" locator="330:32-330:58" name="fhir:QuestionnaireResponseStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1124" locator="331:1-331:68" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1124">
               <a:s>define function ToString(value </a:s>
               <a:s r="1121">
                  <a:s>ReferenceHandlingPolicy</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1123">
                  <a:s r="1123">
                     <a:s r="1122">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1123">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1123" locator="331:58-331:68" path="value" xsi:type="Property">
            <source localId="1122" locator="331:58-331:62" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1121" locator="331:32-331:54" name="fhir:ReferenceHandlingPolicy" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1128" locator="332:1-332:66" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1128">
               <a:s>define function ToString(value </a:s>
               <a:s r="1125">
                  <a:s>ReferenceVersionRules</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1127">
                  <a:s r="1127">
                     <a:s r="1126">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1127">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1127" locator="332:56-332:66" path="value" xsi:type="Property">
            <source localId="1126" locator="332:56-332:60" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1125" locator="332:32-332:52" name="fhir:ReferenceVersionRules" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1132" locator="333:1-333:67" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1132">
               <a:s>define function ToString(value </a:s>
               <a:s r="1129">
                  <a:s>ReferredDocumentStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1131">
                  <a:s r="1131">
                     <a:s r="1130">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1131">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1131" locator="333:57-333:67" path="value" xsi:type="Property">
            <source localId="1130" locator="333:57-333:61" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1129" locator="333:32-333:53" name="fhir:ReferredDocumentStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1136" locator="334:1-334:64" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1136">
               <a:s>define function ToString(value </a:s>
               <a:s r="1133">
                  <a:s>RelatedArtifactType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1135">
                  <a:s r="1135">
                     <a:s r="1134">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1135">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1135" locator="334:54-334:64" path="value" xsi:type="Property">
            <source localId="1134" locator="334:54-334:58" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1133" locator="334:32-334:50" name="fhir:RelatedArtifactType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1140" locator="335:1-335:62" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1140">
               <a:s>define function ToString(value </a:s>
               <a:s r="1137">
                  <a:s>RemittanceOutcome</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1139">
                  <a:s r="1139">
                     <a:s r="1138">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1139">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1139" locator="335:52-335:62" path="value" xsi:type="Property">
            <source localId="1138" locator="335:52-335:56" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1137" locator="335:32-335:48" name="fhir:RemittanceOutcome" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1144" locator="336:1-336:59" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1144">
               <a:s>define function ToString(value </a:s>
               <a:s r="1141">
                  <a:s>RepositoryType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1143">
                  <a:s r="1143">
                     <a:s r="1142">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1143">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1143" locator="336:49-336:59" path="value" xsi:type="Property">
            <source localId="1142" locator="336:49-336:53" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1141" locator="336:32-336:45" name="fhir:RepositoryType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1148" locator="337:1-337:58" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1148">
               <a:s>define function ToString(value </a:s>
               <a:s r="1145">
                  <a:s>RequestIntent</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1147">
                  <a:s r="1147">
                     <a:s r="1146">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1147">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1147" locator="337:48-337:58" path="value" xsi:type="Property">
            <source localId="1146" locator="337:48-337:52" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1145" locator="337:32-337:44" name="fhir:RequestIntent" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1152" locator="338:1-338:60" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1152">
               <a:s>define function ToString(value </a:s>
               <a:s r="1149">
                  <a:s>RequestPriority</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1151">
                  <a:s r="1151">
                     <a:s r="1150">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1151">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1151" locator="338:50-338:60" path="value" xsi:type="Property">
            <source localId="1150" locator="338:50-338:54" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1149" locator="338:32-338:46" name="fhir:RequestPriority" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1156" locator="339:1-339:58" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1156">
               <a:s>define function ToString(value </a:s>
               <a:s r="1153">
                  <a:s>RequestStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1155">
                  <a:s r="1155">
                     <a:s r="1154">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1155">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1155" locator="339:48-339:58" path="value" xsi:type="Property">
            <source localId="1154" locator="339:48-339:52" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1153" locator="339:32-339:44" name="fhir:RequestStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1160" locator="340:1-340:64" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1160">
               <a:s>define function ToString(value </a:s>
               <a:s r="1157">
                  <a:s>ResearchElementType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1159">
                  <a:s r="1159">
                     <a:s r="1158">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1159">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1159" locator="340:54-340:64" path="value" xsi:type="Property">
            <source localId="1158" locator="340:54-340:58" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1157" locator="340:32-340:50" name="fhir:ResearchElementType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1164" locator="341:1-341:64" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1164">
               <a:s>define function ToString(value </a:s>
               <a:s r="1161">
                  <a:s>ResearchStudyStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1163">
                  <a:s r="1163">
                     <a:s r="1162">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1163">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1163" locator="341:54-341:64" path="value" xsi:type="Property">
            <source localId="1162" locator="341:54-341:58" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1161" locator="341:32-341:50" name="fhir:ResearchStudyStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1168" locator="342:1-342:66" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1168">
               <a:s>define function ToString(value </a:s>
               <a:s r="1165">
                  <a:s>ResearchSubjectStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1167">
                  <a:s r="1167">
                     <a:s r="1166">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1167">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1167" locator="342:56-342:66" path="value" xsi:type="Property">
            <source localId="1166" locator="342:56-342:60" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1165" locator="342:32-342:52" name="fhir:ResearchSubjectStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1172" locator="343:1-343:57" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1172">
               <a:s>define function ToString(value </a:s>
               <a:s r="1169">
                  <a:s>ResourceType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1171">
                  <a:s r="1171">
                     <a:s r="1170">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1171">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1171" locator="343:47-343:57" path="value" xsi:type="Property">
            <source localId="1170" locator="343:47-343:51" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1169" locator="343:32-343:43" name="fhir:ResourceType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1176" locator="344:1-344:66" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1176">
               <a:s>define function ToString(value </a:s>
               <a:s r="1173">
                  <a:s>ResourceVersionPolicy</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1175">
                  <a:s r="1175">
                     <a:s r="1174">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1175">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1175" locator="344:56-344:66" path="value" xsi:type="Property">
            <source localId="1174" locator="344:56-344:60" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1173" locator="344:32-344:52" name="fhir:ResourceVersionPolicy" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1180" locator="345:1-345:57" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1180">
               <a:s>define function ToString(value </a:s>
               <a:s r="1177">
                  <a:s>ResponseType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1179">
                  <a:s r="1179">
                     <a:s r="1178">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1179">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1179" locator="345:47-345:57" path="value" xsi:type="Property">
            <source localId="1178" locator="345:47-345:51" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1177" locator="345:32-345:43" name="fhir:ResponseType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1184" locator="346:1-346:66" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1184">
               <a:s>define function ToString(value </a:s>
               <a:s r="1181">
                  <a:s>RestfulCapabilityMode</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1183">
                  <a:s r="1183">
                     <a:s r="1182">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1183">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1183" locator="346:56-346:66" path="value" xsi:type="Property">
            <source localId="1182" locator="346:56-346:60" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1181" locator="346:32-346:52" name="fhir:RestfulCapabilityMode" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1188" locator="347:1-347:65" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1188">
               <a:s>define function ToString(value </a:s>
               <a:s r="1185">
                  <a:s>RiskAssessmentStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1187">
                  <a:s r="1187">
                     <a:s r="1186">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1187">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1187" locator="347:55-347:65" path="value" xsi:type="Property">
            <source localId="1186" locator="347:55-347:59" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1185" locator="347:32-347:51" name="fhir:RiskAssessmentStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1192" locator="348:1-348:56" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1192">
               <a:s>define function ToString(value </a:s>
               <a:s r="1189">
                  <a:s>SPDXLicense</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1191">
                  <a:s r="1191">
                     <a:s r="1190">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1191">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1191" locator="348:46-348:56" path="value" xsi:type="Property">
            <source localId="1190" locator="348:46-348:50" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1189" locator="348:32-348:42" name="fhir:SPDXLicense" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1196" locator="349:1-349:61" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1196">
               <a:s>define function ToString(value </a:s>
               <a:s r="1193">
                  <a:s>SearchComparator</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1195">
                  <a:s r="1195">
                     <a:s r="1194">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1195">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1195" locator="349:51-349:61" path="value" xsi:type="Property">
            <source localId="1194" locator="349:51-349:55" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1193" locator="349:32-349:47" name="fhir:SearchComparator" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1200" locator="350:1-350:60" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1200">
               <a:s>define function ToString(value </a:s>
               <a:s r="1197">
                  <a:s>SearchEntryMode</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1199">
                  <a:s r="1199">
                     <a:s r="1198">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1199">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1199" locator="350:50-350:60" path="value" xsi:type="Property">
            <source localId="1198" locator="350:50-350:54" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1197" locator="350:32-350:46" name="fhir:SearchEntryMode" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1204" locator="351:1-351:63" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1204">
               <a:s>define function ToString(value </a:s>
               <a:s r="1201">
                  <a:s>SearchModifierCode</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1203">
                  <a:s r="1203">
                     <a:s r="1202">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1203">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1203" locator="351:53-351:63" path="value" xsi:type="Property">
            <source localId="1202" locator="351:53-351:57" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1201" locator="351:32-351:49" name="fhir:SearchModifierCode" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1208" locator="352:1-352:60" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1208">
               <a:s>define function ToString(value </a:s>
               <a:s r="1205">
                  <a:s>SearchParamType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1207">
                  <a:s r="1207">
                     <a:s r="1206">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1207">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1207" locator="352:50-352:60" path="value" xsi:type="Property">
            <source localId="1206" locator="352:50-352:54" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1205" locator="352:32-352:46" name="fhir:SearchParamType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1212" locator="353:1-353:56" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1212">
               <a:s>define function ToString(value </a:s>
               <a:s r="1209">
                  <a:s>SectionMode</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1211">
                  <a:s r="1211">
                     <a:s r="1210">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1211">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1211" locator="353:46-353:56" path="value" xsi:type="Property">
            <source localId="1210" locator="353:46-353:50" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1209" locator="353:32-353:42" name="fhir:SectionMode" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1216" locator="354:1-354:57" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1216">
               <a:s>define function ToString(value </a:s>
               <a:s r="1213">
                  <a:s>SequenceType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1215">
                  <a:s r="1215">
                     <a:s r="1214">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1215">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1215" locator="354:47-354:57" path="value" xsi:type="Property">
            <source localId="1214" locator="354:47-354:51" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1213" locator="354:32-354:43" name="fhir:SequenceType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1220" locator="355:1-355:65" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1220">
               <a:s>define function ToString(value </a:s>
               <a:s r="1217">
                  <a:s>ServiceRequestIntent</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1219">
                  <a:s r="1219">
                     <a:s r="1218">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1219">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1219" locator="355:55-355:65" path="value" xsi:type="Property">
            <source localId="1218" locator="355:55-355:59" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1217" locator="355:32-355:51" name="fhir:ServiceRequestIntent" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1224" locator="356:1-356:67" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1224">
               <a:s>define function ToString(value </a:s>
               <a:s r="1221">
                  <a:s>ServiceRequestPriority</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1223">
                  <a:s r="1223">
                     <a:s r="1222">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1223">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1223" locator="356:57-356:67" path="value" xsi:type="Property">
            <source localId="1222" locator="356:57-356:61" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1221" locator="356:32-356:53" name="fhir:ServiceRequestPriority" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1228" locator="357:1-357:65" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1228">
               <a:s>define function ToString(value </a:s>
               <a:s r="1225">
                  <a:s>ServiceRequestStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1227">
                  <a:s r="1227">
                     <a:s r="1226">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1227">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1227" locator="357:55-357:65" path="value" xsi:type="Property">
            <source localId="1226" locator="357:55-357:59" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1225" locator="357:32-357:51" name="fhir:ServiceRequestStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1232" locator="358:1-358:57" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1232">
               <a:s>define function ToString(value </a:s>
               <a:s r="1229">
                  <a:s>SlicingRules</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1231">
                  <a:s r="1231">
                     <a:s r="1230">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1231">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1231" locator="358:47-358:57" path="value" xsi:type="Property">
            <source localId="1230" locator="358:47-358:51" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1229" locator="358:32-358:43" name="fhir:SlicingRules" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1236" locator="359:1-359:55" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1236">
               <a:s>define function ToString(value </a:s>
               <a:s r="1233">
                  <a:s>SlotStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1235">
                  <a:s r="1235">
                     <a:s r="1234">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1235">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1235" locator="359:45-359:55" path="value" xsi:type="Property">
            <source localId="1234" locator="359:45-359:49" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1233" locator="359:32-359:41" name="fhir:SlotStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1240" locator="360:1-360:58" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1240">
               <a:s>define function ToString(value </a:s>
               <a:s r="1237">
                  <a:s>SortDirection</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1239">
                  <a:s r="1239">
                     <a:s r="1238">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1239">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1239" locator="360:48-360:58" path="value" xsi:type="Property">
            <source localId="1238" locator="360:48-360:52" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1237" locator="360:32-360:44" name="fhir:SortDirection" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1244" locator="361:1-361:72" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1244">
               <a:s>define function ToString(value </a:s>
               <a:s r="1241">
                  <a:s>SpecimenContainedPreference</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1243">
                  <a:s r="1243">
                     <a:s r="1242">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1243">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1243" locator="361:62-361:72" path="value" xsi:type="Property">
            <source localId="1242" locator="361:62-361:66" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1241" locator="361:32-361:58" name="fhir:SpecimenContainedPreference" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1248" locator="362:1-362:59" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1248">
               <a:s>define function ToString(value </a:s>
               <a:s r="1245">
                  <a:s>SpecimenStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1247">
                  <a:s r="1247">
                     <a:s r="1246">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1247">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1247" locator="362:49-362:59" path="value" xsi:type="Property">
            <source localId="1246" locator="362:49-362:53" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1245" locator="362:32-362:45" name="fhir:SpecimenStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1252" locator="363:1-363:51" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1252">
               <a:s>define function ToString(value </a:s>
               <a:s r="1249">
                  <a:s>Status</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1251">
                  <a:s r="1251">
                     <a:s r="1250">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1251">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1251" locator="363:41-363:51" path="value" xsi:type="Property">
            <source localId="1250" locator="363:41-363:45" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1249" locator="363:32-363:37" name="fhir:Status" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1256" locator="364:1-364:55" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1256">
               <a:s>define function ToString(value </a:s>
               <a:s r="1253">
                  <a:s>StrandType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1255">
                  <a:s r="1255">
                     <a:s r="1254">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1255">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1255" locator="364:45-364:55" path="value" xsi:type="Property">
            <source localId="1254" locator="364:45-364:49" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1253" locator="364:32-364:41" name="fhir:StrandType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1260" locator="365:1-365:68" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1260">
               <a:s>define function ToString(value </a:s>
               <a:s r="1257">
                  <a:s>StructureDefinitionKind</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1259">
                  <a:s r="1259">
                     <a:s r="1258">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1259">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1259" locator="365:58-365:68" path="value" xsi:type="Property">
            <source localId="1258" locator="365:58-365:62" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1257" locator="365:32-365:54" name="fhir:StructureDefinitionKind" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1264" locator="366:1-366:68" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1264">
               <a:s>define function ToString(value </a:s>
               <a:s r="1261">
                  <a:s>StructureMapContextType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1263">
                  <a:s r="1263">
                     <a:s r="1262">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1263">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1263" locator="366:58-366:68" path="value" xsi:type="Property">
            <source localId="1262" locator="366:58-366:62" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1261" locator="366:32-366:54" name="fhir:StructureMapContextType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1268" locator="367:1-367:70" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1268">
               <a:s>define function ToString(value </a:s>
               <a:s r="1265">
                  <a:s>StructureMapGroupTypeMode</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1267">
                  <a:s r="1267">
                     <a:s r="1266">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1267">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1267" locator="367:60-367:70" path="value" xsi:type="Property">
            <source localId="1266" locator="367:60-367:64" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1265" locator="367:32-367:56" name="fhir:StructureMapGroupTypeMode" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1272" locator="368:1-368:66" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1272">
               <a:s>define function ToString(value </a:s>
               <a:s r="1269">
                  <a:s>StructureMapInputMode</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1271">
                  <a:s r="1271">
                     <a:s r="1270">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1271">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1271" locator="368:56-368:66" path="value" xsi:type="Property">
            <source localId="1270" locator="368:56-368:60" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1269" locator="368:32-368:52" name="fhir:StructureMapInputMode" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1276" locator="369:1-369:66" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1276">
               <a:s>define function ToString(value </a:s>
               <a:s r="1273">
                  <a:s>StructureMapModelMode</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1275">
                  <a:s r="1275">
                     <a:s r="1274">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1275">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1275" locator="369:56-369:66" path="value" xsi:type="Property">
            <source localId="1274" locator="369:56-369:60" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1273" locator="369:32-369:52" name="fhir:StructureMapModelMode" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1280" locator="370:1-370:71" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1280">
               <a:s>define function ToString(value </a:s>
               <a:s r="1277">
                  <a:s>StructureMapSourceListMode</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1279">
                  <a:s r="1279">
                     <a:s r="1278">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1279">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1279" locator="370:61-370:71" path="value" xsi:type="Property">
            <source localId="1278" locator="370:61-370:65" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1277" locator="370:32-370:57" name="fhir:StructureMapSourceListMode" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1284" locator="371:1-371:71" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1284">
               <a:s>define function ToString(value </a:s>
               <a:s r="1281">
                  <a:s>StructureMapTargetListMode</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1283">
                  <a:s r="1283">
                     <a:s r="1282">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1283">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1283" locator="371:61-371:71" path="value" xsi:type="Property">
            <source localId="1282" locator="371:61-371:65" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1281" locator="371:32-371:57" name="fhir:StructureMapTargetListMode" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1288" locator="372:1-372:66" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1288">
               <a:s>define function ToString(value </a:s>
               <a:s r="1285">
                  <a:s>StructureMapTransform</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1287">
                  <a:s r="1287">
                     <a:s r="1286">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1287">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1287" locator="372:56-372:66" path="value" xsi:type="Property">
            <source localId="1286" locator="372:56-372:60" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1285" locator="372:32-372:52" name="fhir:StructureMapTransform" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1292" locator="373:1-373:68" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1292">
               <a:s>define function ToString(value </a:s>
               <a:s r="1289">
                  <a:s>SubscriptionChannelType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1291">
                  <a:s r="1291">
                     <a:s r="1290">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1291">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1291" locator="373:58-373:68" path="value" xsi:type="Property">
            <source localId="1290" locator="373:58-373:62" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1289" locator="373:32-373:54" name="fhir:SubscriptionChannelType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1296" locator="374:1-374:63" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1296">
               <a:s>define function ToString(value </a:s>
               <a:s r="1293">
                  <a:s>SubscriptionStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1295">
                  <a:s r="1295">
                     <a:s r="1294">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1295">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1295" locator="374:53-374:63" path="value" xsi:type="Property">
            <source localId="1294" locator="374:53-374:57" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1293" locator="374:32-374:49" name="fhir:SubscriptionStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1300" locator="375:1-375:65" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1300">
               <a:s>define function ToString(value </a:s>
               <a:s r="1297">
                  <a:s>SupplyDeliveryStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1299">
                  <a:s r="1299">
                     <a:s r="1298">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1299">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1299" locator="375:55-375:65" path="value" xsi:type="Property">
            <source localId="1298" locator="375:55-375:59" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1297" locator="375:32-375:51" name="fhir:SupplyDeliveryStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1304" locator="376:1-376:64" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1304">
               <a:s>define function ToString(value </a:s>
               <a:s r="1301">
                  <a:s>SupplyRequestStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1303">
                  <a:s r="1303">
                     <a:s r="1302">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1303">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1303" locator="376:54-376:64" path="value" xsi:type="Property">
            <source localId="1302" locator="376:54-376:58" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1301" locator="376:32-376:50" name="fhir:SupplyRequestStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1308" locator="377:1-377:69" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1308">
               <a:s>define function ToString(value </a:s>
               <a:s r="1305">
                  <a:s>SystemRestfulInteraction</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1307">
                  <a:s r="1307">
                     <a:s r="1306">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1307">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1307" locator="377:59-377:69" path="value" xsi:type="Property">
            <source localId="1306" locator="377:59-377:63" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1305" locator="377:32-377:55" name="fhir:SystemRestfulInteraction" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1312" locator="378:1-378:55" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1312">
               <a:s>define function ToString(value </a:s>
               <a:s r="1309">
                  <a:s>TaskIntent</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1311">
                  <a:s r="1311">
                     <a:s r="1310">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1311">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1311" locator="378:45-378:55" path="value" xsi:type="Property">
            <source localId="1310" locator="378:45-378:49" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1309" locator="378:32-378:41" name="fhir:TaskIntent" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1316" locator="379:1-379:57" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1316">
               <a:s>define function ToString(value </a:s>
               <a:s r="1313">
                  <a:s>TaskPriority</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1315">
                  <a:s r="1315">
                     <a:s r="1314">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1315">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1315" locator="379:47-379:57" path="value" xsi:type="Property">
            <source localId="1314" locator="379:47-379:51" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1313" locator="379:32-379:43" name="fhir:TaskPriority" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1320" locator="380:1-380:55" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1320">
               <a:s>define function ToString(value </a:s>
               <a:s r="1317">
                  <a:s>TaskStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1319">
                  <a:s r="1319">
                     <a:s r="1318">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1319">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1319" locator="380:45-380:55" path="value" xsi:type="Property">
            <source localId="1318" locator="380:45-380:49" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1317" locator="380:32-380:41" name="fhir:TaskStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1324" locator="381:1-381:67" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1324">
               <a:s>define function ToString(value </a:s>
               <a:s r="1321">
                  <a:s>TestReportActionResult</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1323">
                  <a:s r="1323">
                     <a:s r="1322">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1323">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1323" locator="381:57-381:67" path="value" xsi:type="Property">
            <source localId="1322" locator="381:57-381:61" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1321" locator="381:32-381:53" name="fhir:TestReportActionResult" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1328" locator="382:1-382:70" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1328">
               <a:s>define function ToString(value </a:s>
               <a:s r="1325">
                  <a:s>TestReportParticipantType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1327">
                  <a:s r="1327">
                     <a:s r="1326">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1327">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1327" locator="382:60-382:70" path="value" xsi:type="Property">
            <source localId="1326" locator="382:60-382:64" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1325" locator="382:32-382:56" name="fhir:TestReportParticipantType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1332" locator="383:1-383:61" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1332">
               <a:s>define function ToString(value </a:s>
               <a:s r="1329">
                  <a:s>TestReportResult</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1331">
                  <a:s r="1331">
                     <a:s r="1330">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1331">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1331" locator="383:51-383:61" path="value" xsi:type="Property">
            <source localId="1330" locator="383:51-383:55" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1329" locator="383:32-383:47" name="fhir:TestReportResult" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1336" locator="384:1-384:61" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1336">
               <a:s>define function ToString(value </a:s>
               <a:s r="1333">
                  <a:s>TestReportStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1335">
                  <a:s r="1335">
                     <a:s r="1334">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1335">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1335" locator="384:51-384:61" path="value" xsi:type="Property">
            <source localId="1334" locator="384:51-384:55" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1333" locator="384:32-384:47" name="fhir:TestReportStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1340" locator="385:1-385:72" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1340">
               <a:s>define function ToString(value </a:s>
               <a:s r="1337">
                  <a:s>TestScriptRequestMethodCode</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1339">
                  <a:s r="1339">
                     <a:s r="1338">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1339">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1339" locator="385:62-385:72" path="value" xsi:type="Property">
            <source localId="1338" locator="385:62-385:66" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1337" locator="385:32-385:58" name="fhir:TestScriptRequestMethodCode" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1344" locator="386:1-386:56" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1344">
               <a:s>define function ToString(value </a:s>
               <a:s r="1341">
                  <a:s>TriggerType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1343">
                  <a:s r="1343">
                     <a:s r="1342">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1343">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1343" locator="386:46-386:56" path="value" xsi:type="Property">
            <source localId="1342" locator="386:46-386:50" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1341" locator="386:32-386:42" name="fhir:TriggerType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1348" locator="387:1-387:63" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1348">
               <a:s>define function ToString(value </a:s>
               <a:s r="1345">
                  <a:s>TypeDerivationRule</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1347">
                  <a:s r="1347">
                     <a:s r="1346">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1347">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1347" locator="387:53-387:63" path="value" xsi:type="Property">
            <source localId="1346" locator="387:53-387:57" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1345" locator="387:32-387:49" name="fhir:TypeDerivationRule" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1352" locator="388:1-388:67" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1352">
               <a:s>define function ToString(value </a:s>
               <a:s r="1349">
                  <a:s>TypeRestfulInteraction</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1351">
                  <a:s r="1351">
                     <a:s r="1350">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1351">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1351" locator="388:57-388:67" path="value" xsi:type="Property">
            <source localId="1350" locator="388:57-388:61" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1349" locator="388:32-388:53" name="fhir:TypeRestfulInteraction" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1356" locator="389:1-389:57" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1356">
               <a:s>define function ToString(value </a:s>
               <a:s r="1353">
                  <a:s>UDIEntryType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1355">
                  <a:s r="1355">
                     <a:s r="1354">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1355">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1355" locator="389:47-389:57" path="value" xsi:type="Property">
            <source localId="1354" locator="389:47-389:51" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1353" locator="389:32-389:43" name="fhir:UDIEntryType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1360" locator="390:1-390:56" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1360">
               <a:s>define function ToString(value </a:s>
               <a:s r="1357">
                  <a:s>UnitsOfTime</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1359">
                  <a:s r="1359">
                     <a:s r="1358">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1359">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1359" locator="390:46-390:56" path="value" xsi:type="Property">
            <source localId="1358" locator="390:46-390:50" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1357" locator="390:32-390:42" name="fhir:UnitsOfTime" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1364" locator="391:1-391:48" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1364">
               <a:s>define function ToString(value </a:s>
               <a:s r="1361">
                  <a:s>Use</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1363">
                  <a:s r="1363">
                     <a:s r="1362">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1363">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1363" locator="391:38-391:48" path="value" xsi:type="Property">
            <source localId="1362" locator="391:38-391:42" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1361" locator="391:32-391:34" name="fhir:Use" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1368" locator="392:1-392:57" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1368">
               <a:s>define function ToString(value </a:s>
               <a:s r="1365">
                  <a:s>VariableType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1367">
                  <a:s r="1367">
                     <a:s r="1366">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1367">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1367" locator="392:47-392:57" path="value" xsi:type="Property">
            <source localId="1366" locator="392:47-392:51" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1365" locator="392:32-392:43" name="fhir:VariableType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1372" locator="393:1-393:55" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1372">
               <a:s>define function ToString(value </a:s>
               <a:s r="1369">
                  <a:s>VisionBase</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1371">
                  <a:s r="1371">
                     <a:s r="1370">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1371">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1371" locator="393:45-393:55" path="value" xsi:type="Property">
            <source localId="1370" locator="393:45-393:49" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1369" locator="393:32-393:41" name="fhir:VisionBase" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1376" locator="394:1-394:55" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1376">
               <a:s>define function ToString(value </a:s>
               <a:s r="1373">
                  <a:s>VisionEyes</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1375">
                  <a:s r="1375">
                     <a:s r="1374">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1375">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1375" locator="394:45-394:55" path="value" xsi:type="Property">
            <source localId="1374" locator="394:45-394:49" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1373" locator="394:32-394:41" name="fhir:VisionEyes" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1380" locator="395:1-395:57" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1380">
               <a:s>define function ToString(value </a:s>
               <a:s r="1377">
                  <a:s>VisionStatus</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1379">
                  <a:s r="1379">
                     <a:s r="1378">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1379">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1379" locator="395:47-395:57" path="value" xsi:type="Property">
            <source localId="1378" locator="395:47-395:51" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1377" locator="395:32-395:43" name="fhir:VisionStatus" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1384" locator="396:1-396:59" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1384">
               <a:s>define function ToString(value </a:s>
               <a:s r="1381">
                  <a:s>XPathUsageType</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1383">
                  <a:s r="1383">
                     <a:s r="1382">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1383">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1383" locator="396:49-396:59" path="value" xsi:type="Property">
            <source localId="1382" locator="396:49-396:53" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1381" locator="396:32-396:45" name="fhir:XPathUsageType" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1388" locator="397:1-397:57" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1388">
               <a:s>define function ToString(value </a:s>
               <a:s r="1385">
                  <a:s>base64Binary</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1387">
                  <a:s r="1387">
                     <a:s r="1386">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1387">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1387" locator="397:47-397:57" path="value" xsi:type="Property">
            <source localId="1386" locator="397:47-397:51" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1385" locator="397:32-397:43" name="fhir:base64Binary" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1392" locator="398:1-398:53" name="ToBoolean" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1392">
               <a:s>define function ToBoolean(value </a:s>
               <a:s r="1389">
                  <a:s>boolean</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1391">
                  <a:s r="1391">
                     <a:s r="1390">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1391">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1391" locator="398:43-398:53" path="value" xsi:type="Property">
            <source localId="1390" locator="398:43-398:47" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1389" locator="398:33-398:39" name="fhir:boolean" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1396" locator="399:1-399:47" name="ToDate" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1396">
               <a:s>define function ToDate(value </a:s>
               <a:s r="1393">
                  <a:s>date</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1395">
                  <a:s r="1395">
                     <a:s r="1394">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1395">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1395" locator="399:37-399:47" path="value" xsi:type="Property">
            <source localId="1394" locator="399:37-399:41" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1393" locator="399:30-399:33" name="fhir:date" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1400" locator="400:1-400:55" name="ToDateTime" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1400">
               <a:s>define function ToDateTime(value </a:s>
               <a:s r="1397">
                  <a:s>dateTime</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1399">
                  <a:s r="1399">
                     <a:s r="1398">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1399">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1399" locator="400:45-400:55" path="value" xsi:type="Property">
            <source localId="1398" locator="400:45-400:49" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1397" locator="400:34-400:41" name="fhir:dateTime" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1404" locator="401:1-401:53" name="ToDecimal" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1404">
               <a:s>define function ToDecimal(value </a:s>
               <a:s r="1401">
                  <a:s>decimal</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1403">
                  <a:s r="1403">
                     <a:s r="1402">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1403">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1403" locator="401:43-401:53" path="value" xsi:type="Property">
            <source localId="1402" locator="401:43-401:47" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1401" locator="401:33-401:39" name="fhir:decimal" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1408" locator="402:1-402:54" name="ToDateTime" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1408">
               <a:s>define function ToDateTime(value </a:s>
               <a:s r="1405">
                  <a:s>instant</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1407">
                  <a:s r="1407">
                     <a:s r="1406">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1407">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1407" locator="402:44-402:54" path="value" xsi:type="Property">
            <source localId="1406" locator="402:44-402:48" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1405" locator="402:34-402:40" name="fhir:instant" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1412" locator="403:1-403:53" name="ToInteger" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1412">
               <a:s>define function ToInteger(value </a:s>
               <a:s r="1409">
                  <a:s>integer</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1411">
                  <a:s r="1411">
                     <a:s r="1410">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1411">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1411" locator="403:43-403:53" path="value" xsi:type="Property">
            <source localId="1410" locator="403:43-403:47" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1409" locator="403:33-403:39" name="fhir:integer" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1416" locator="404:1-404:51" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1416">
               <a:s>define function ToString(value </a:s>
               <a:s r="1413">
                  <a:s>string</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1415">
                  <a:s r="1415">
                     <a:s r="1414">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1415">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1415" locator="404:41-404:51" path="value" xsi:type="Property">
            <source localId="1414" locator="404:41-404:45" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1413" locator="404:32-404:37" name="fhir:string" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1420" locator="405:1-405:47" name="ToTime" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1420">
               <a:s>define function ToTime(value </a:s>
               <a:s r="1417">
                  <a:s>time</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1419">
                  <a:s r="1419">
                     <a:s r="1418">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1419">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1419" locator="405:37-405:47" path="value" xsi:type="Property">
            <source localId="1418" locator="405:37-405:41" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1417" locator="405:30-405:33" name="fhir:time" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1424" locator="406:1-406:48" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1424">
               <a:s>define function ToString(value </a:s>
               <a:s r="1421">
                  <a:s>uri</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1423">
                  <a:s r="1423">
                     <a:s r="1422">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1423">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1423" locator="406:38-406:48" path="value" xsi:type="Property">
            <source localId="1422" locator="406:38-406:42" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1421" locator="406:32-406:34" name="fhir:uri" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1428" locator="407:1-407:50" name="ToString" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1428">
               <a:s>define function ToString(value </a:s>
               <a:s r="1425">
                  <a:s>xhtml</a:s>
               </a:s>
               <a:s>): </a:s>
               <a:s r="1427">
                  <a:s r="1427">
                     <a:s r="1426">
                        <a:s>value</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1427">
                        <a:s>value</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1427" locator="407:40-407:50" path="value" xsi:type="Property">
            <source localId="1426" locator="407:40-407:44" name="value" xsi:type="OperandRef"/>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="1425" locator="407:32-407:36" name="fhir:xhtml" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
   </statements>
</library>
"
  }, {
    "contentType": "application/elm+json",
    "data": "{
  "library" : {
    "type" : "Library",
    "identifier" : {
      "type" : "VersionedIdentifier",
      "id" : "FHIRHelpers",
      "system" : "http://fhir.org/guides/who/immz",
      "version" : "4.0.1"
    },
    "schemaIdentifier" : {
      "type" : "VersionedIdentifier",
      "id" : "urn:hl7-org:elm",
      "version" : "r1"
    },
    "usings" : {
      "type" : "Library$Usings",
      "def" : [ {
        "type" : "UsingDef",
        "localIdentifier" : "System",
        "uri" : "urn:hl7-org:elm-types:r1"
      }, {
        "type" : "UsingDef",
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "using " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "FHIR" ]
                  },
                  "globalScope" : true
                } ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ " version ", "'4.0.1'" ]
              },
              "globalScope" : true
            } ],
            "r" : "1"
          }
        } ],
        "localId" : "1",
        "locator" : "11:1-11:26",
        "localIdentifier" : "FHIR",
        "uri" : "http://hl7.org/fhir",
        "version" : "4.0.1"
      } ]
    },
    "statements" : {
      "type" : "Library$Statements",
      "def" : [ {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "2",
            "locator" : "13:35-13:45",
            "name" : "{http://hl7.org/fhir}Period"
          },
          "name" : "period"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToInterval", "(", "period", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "FHIR", ".", "Period" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "2"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "):\n    " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "if " ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "period" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "3"
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ " is null" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "4"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ " then\n        ", "null", "\n    else\n        " ],
                        "r" : "5"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "if " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "period" ]
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "6"
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "." ]
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "\"start\"" ]
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "7"
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "7"
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ " is null" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "8"
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ " then\n            " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "Interval(" ]
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "period" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "9"
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "." ]
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "\"start\"" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "10"
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "10"
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "." ]
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "value" ]
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "11"
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "11"
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ ", " ]
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "period" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "12"
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "." ]
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "\"end\"" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "13"
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "13"
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "." ]
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "value" ]
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "14"
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "14"
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "]" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "15"
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "\n        else\n            " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "Interval[" ]
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "period" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "16"
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "." ]
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "\"start\"" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "17"
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "17"
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "." ]
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "value" ]
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "18"
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "18"
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ ", " ]
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "period" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "19"
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "." ]
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "\"end\"" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "20"
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "20"
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "." ]
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "value" ]
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "21"
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "21"
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "]" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "22"
                          },
                          "globalScope" : true
                        } ],
                        "r" : "23"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "24"
                  },
                  "globalScope" : true
                } ],
                "r" : "24"
              },
              "globalScope" : true
            } ],
            "r" : "25"
          }
        } ],
        "expression" : {
          "type" : "If",
          "condition" : {
            "type" : "IsNull",
            "operand" : {
              "type" : "OperandRef",
              "localId" : "3",
              "locator" : "14:8-14:13",
              "name" : "period"
            },
            "localId" : "4",
            "locator" : "14:8-14:21"
          },
          "then" : {
            "type" : "As",
            "asTypeSpecifier" : {
              "type" : "IntervalTypeSpecifier",
              "pointType" : {
                "type" : "NamedTypeSpecifier",
                "name" : "{urn:hl7-org:elm-types:r1}DateTime"
              }
            },
            "operand" : {
              "type" : "Null",
              "localId" : "5",
              "locator" : "15:9-15:12"
            }
          },
          "else" : {
            "type" : "If",
            "condition" : {
              "type" : "IsNull",
              "operand" : {
                "type" : "Property",
                "source" : {
                  "type" : "OperandRef",
                  "localId" : "6",
                  "locator" : "17:12-17:17",
                  "name" : "period"
                },
                "localId" : "7",
                "locator" : "17:12-17:25",
                "path" : "start"
              },
              "localId" : "8",
              "locator" : "17:12-17:33"
            },
            "then" : {
              "type" : "Interval",
              "low" : {
                "type" : "Property",
                "source" : {
                  "type" : "Property",
                  "source" : {
                    "type" : "OperandRef",
                    "localId" : "9",
                    "locator" : "18:22-18:27",
                    "name" : "period"
                  },
                  "localId" : "10",
                  "locator" : "18:22-18:35",
                  "path" : "start"
                },
                "localId" : "11",
                "locator" : "18:22-18:41",
                "path" : "value"
              },
              "high" : {
                "type" : "Property",
                "source" : {
                  "type" : "Property",
                  "source" : {
                    "type" : "OperandRef",
                    "localId" : "12",
                    "locator" : "18:44-18:49",
                    "name" : "period"
                  },
                  "localId" : "13",
                  "locator" : "18:44-18:55",
                  "path" : "end"
                },
                "localId" : "14",
                "locator" : "18:44-18:61",
                "path" : "value"
              },
              "localId" : "15",
              "locator" : "18:13-18:62",
              "highClosed" : true
            },
            "else" : {
              "type" : "Interval",
              "low" : {
                "type" : "Property",
                "source" : {
                  "type" : "Property",
                  "source" : {
                    "type" : "OperandRef",
                    "localId" : "16",
                    "locator" : "20:22-20:27",
                    "name" : "period"
                  },
                  "localId" : "17",
                  "locator" : "20:22-20:35",
                  "path" : "start"
                },
                "localId" : "18",
                "locator" : "20:22-20:41",
                "path" : "value"
              },
              "high" : {
                "type" : "Property",
                "source" : {
                  "type" : "Property",
                  "source" : {
                    "type" : "OperandRef",
                    "localId" : "19",
                    "locator" : "20:44-20:49",
                    "name" : "period"
                  },
                  "localId" : "20",
                  "locator" : "20:44-20:55",
                  "path" : "end"
                },
                "localId" : "21",
                "locator" : "20:44-20:61",
                "path" : "value"
              },
              "localId" : "22",
              "locator" : "20:13-20:62",
              "lowClosed" : true,
              "highClosed" : true
            },
            "localId" : "23",
            "locator" : "17:9-20:62"
          },
          "localId" : "24",
          "locator" : "14:5-20:62"
        },
        "localId" : "25",
        "locator" : "13:1-20:62",
        "name" : "ToInterval",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "26",
            "locator" : "22:37-22:49",
            "name" : "{urn:hl7-org:elm-types:r1}String"
          },
          "name" : "unit"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToCalendarUnit", "(", "unit", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "System", ".", "String" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "26"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "):\n    " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "case " ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "unit" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "27"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "\n        " ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "when " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "'ms'" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "28"
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ " then " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "'millisecond'" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "29"
                          },
                          "globalScope" : true
                        } ],
                        "r" : "30"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "\n        " ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "when " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "'s'" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "31"
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ " then " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "'second'" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "32"
                          },
                          "globalScope" : true
                        } ],
                        "r" : "33"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "\n        " ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "when " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "'min'" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "34"
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ " then " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "'minute'" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "35"
                          },
                          "globalScope" : true
                        } ],
                        "r" : "36"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "\n        " ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "when " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "'h'" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "37"
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ " then " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "'hour'" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "38"
                          },
                          "globalScope" : true
                        } ],
                        "r" : "39"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "\n        " ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "when " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "'d'" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "40"
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ " then " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "'day'" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "41"
                          },
                          "globalScope" : true
                        } ],
                        "r" : "42"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "\n        " ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "when " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "'wk'" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "43"
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ " then " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "'week'" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "44"
                          },
                          "globalScope" : true
                        } ],
                        "r" : "45"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "\n        " ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "when " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "'mo'" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "46"
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ " then " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "'month'" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "47"
                          },
                          "globalScope" : true
                        } ],
                        "r" : "48"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "\n        " ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "when " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "'a'" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "49"
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ " then " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "'year'" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "50"
                          },
                          "globalScope" : true
                        } ],
                        "r" : "51"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "\n        else " ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "unit" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "52"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "\n    end" ]
                      },
                      "globalScope" : true
                    } ],
                    "r" : "53"
                  },
                  "globalScope" : true
                } ],
                "r" : "53"
              },
              "globalScope" : true
            } ],
            "r" : "54"
          }
        } ],
        "expression" : {
          "type" : "Case",
          "comparand" : {
            "type" : "OperandRef",
            "localId" : "27",
            "locator" : "23:10-23:13",
            "name" : "unit"
          },
          "caseItem" : [ {
            "type" : "CaseItem",
            "when" : {
              "type" : "Literal",
              "localId" : "28",
              "locator" : "24:14-24:17",
              "valueType" : "{urn:hl7-org:elm-types:r1}String",
              "value" : "ms"
            },
            "then" : {
              "type" : "Literal",
              "localId" : "29",
              "locator" : "24:24-24:36",
              "valueType" : "{urn:hl7-org:elm-types:r1}String",
              "value" : "millisecond"
            },
            "localId" : "30",
            "locator" : "24:9-24:36"
          }, {
            "type" : "CaseItem",
            "when" : {
              "type" : "Literal",
              "localId" : "31",
              "locator" : "25:14-25:16",
              "valueType" : "{urn:hl7-org:elm-types:r1}String",
              "value" : "s"
            },
            "then" : {
              "type" : "Literal",
              "localId" : "32",
              "locator" : "25:23-25:30",
              "valueType" : "{urn:hl7-org:elm-types:r1}String",
              "value" : "second"
            },
            "localId" : "33",
            "locator" : "25:9-25:30"
          }, {
            "type" : "CaseItem",
            "when" : {
              "type" : "Literal",
              "localId" : "34",
              "locator" : "26:14-26:18",
              "valueType" : "{urn:hl7-org:elm-types:r1}String",
              "value" : "min"
            },
            "then" : {
              "type" : "Literal",
              "localId" : "35",
              "locator" : "26:25-26:32",
              "valueType" : "{urn:hl7-org:elm-types:r1}String",
              "value" : "minute"
            },
            "localId" : "36",
            "locator" : "26:9-26:32"
          }, {
            "type" : "CaseItem",
            "when" : {
              "type" : "Literal",
              "localId" : "37",
              "locator" : "27:14-27:16",
              "valueType" : "{urn:hl7-org:elm-types:r1}String",
              "value" : "h"
            },
            "then" : {
              "type" : "Literal",
              "localId" : "38",
              "locator" : "27:23-27:28",
              "valueType" : "{urn:hl7-org:elm-types:r1}String",
              "value" : "hour"
            },
            "localId" : "39",
            "locator" : "27:9-27:28"
          }, {
            "type" : "CaseItem",
            "when" : {
              "type" : "Literal",
              "localId" : "40",
              "locator" : "28:14-28:16",
              "valueType" : "{urn:hl7-org:elm-types:r1}String",
              "value" : "d"
            },
            "then" : {
              "type" : "Literal",
              "localId" : "41",
              "locator" : "28:23-28:27",
              "valueType" : "{urn:hl7-org:elm-types:r1}String",
              "value" : "day"
            },
            "localId" : "42",
            "locator" : "28:9-28:27"
          }, {
            "type" : "CaseItem",
            "when" : {
              "type" : "Literal",
              "localId" : "43",
              "locator" : "29:14-29:17",
              "valueType" : "{urn:hl7-org:elm-types:r1}String",
              "value" : "wk"
            },
            "then" : {
              "type" : "Literal",
              "localId" : "44",
              "locator" : "29:24-29:29",
              "valueType" : "{urn:hl7-org:elm-types:r1}String",
              "value" : "week"
            },
            "localId" : "45",
            "locator" : "29:9-29:29"
          }, {
            "type" : "CaseItem",
            "when" : {
              "type" : "Literal",
              "localId" : "46",
              "locator" : "30:14-30:17",
              "valueType" : "{urn:hl7-org:elm-types:r1}String",
              "value" : "mo"
            },
            "then" : {
              "type" : "Literal",
              "localId" : "47",
              "locator" : "30:24-30:30",
              "valueType" : "{urn:hl7-org:elm-types:r1}String",
              "value" : "month"
            },
            "localId" : "48",
            "locator" : "30:9-30:30"
          }, {
            "type" : "CaseItem",
            "when" : {
              "type" : "Literal",
              "localId" : "49",
              "locator" : "31:14-31:16",
              "valueType" : "{urn:hl7-org:elm-types:r1}String",
              "value" : "a"
            },
            "then" : {
              "type" : "Literal",
              "localId" : "50",
              "locator" : "31:23-31:28",
              "valueType" : "{urn:hl7-org:elm-types:r1}String",
              "value" : "year"
            },
            "localId" : "51",
            "locator" : "31:9-31:28"
          } ],
          "else" : {
            "type" : "OperandRef",
            "localId" : "52",
            "locator" : "32:14-32:17",
            "name" : "unit"
          },
          "localId" : "53",
          "locator" : "23:5-33:7"
        },
        "localId" : "54",
        "locator" : "22:1-33:7",
        "name" : "ToCalendarUnit",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "55",
            "locator" : "35:37-35:49",
            "name" : "{http://hl7.org/fhir}Quantity"
          },
          "name" : "quantity"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToQuantity", "(", "quantity", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "FHIR", ".", "Quantity" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "55"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "):\n    " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "case\n        " ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "when " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "quantity" ]
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "56"
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ " is null" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "57"
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ " then ", "null" ],
                            "r" : "58"
                          },
                          "globalScope" : true
                        } ],
                        "r" : "59"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "\n        " ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "when " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "quantity" ]
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "60"
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "." ]
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "value" ]
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "61"
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "61"
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ " is null" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "62"
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ " then ", "null" ],
                            "r" : "63"
                          },
                          "globalScope" : true
                        } ],
                        "r" : "64"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "\n        " ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "when " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "quantity" ]
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "65"
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "." ]
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "comparator" ]
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "66"
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "66"
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ " is not null" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "67"
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ " then\n            " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "Message", "(", "null", ", ", "true", ", " ],
                                "r" : "68"
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "'FHIRHelpers.ToQuantity.ComparatorQuantityNotSupported'" ]
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "70"
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ ", " ]
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "'Error'" ]
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "71"
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ ", " ]
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "'FHIR Quantity value has a comparator and cannot be converted to a System.Quantity value.'" ]
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "72"
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ ")" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "73"
                          },
                          "globalScope" : true
                        } ],
                        "r" : "74"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "\n        " ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "when " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ "quantity" ]
                                              },
                                              "globalScope" : true
                                            } ],
                                            "r" : "75"
                                          },
                                          "globalScope" : true
                                        }, {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "." ]
                                          },
                                          "globalScope" : true
                                        }, {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ "system" ]
                                              },
                                              "globalScope" : true
                                            } ],
                                            "r" : "76"
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "76"
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ " is null" ]
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "77"
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ " or " ]
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ {
                                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                  "value" : {
                                                    "s" : [ "quantity" ]
                                                  },
                                                  "globalScope" : true
                                                } ],
                                                "r" : "78"
                                              },
                                              "globalScope" : true
                                            }, {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ "." ]
                                              },
                                              "globalScope" : true
                                            }, {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ {
                                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                  "value" : {
                                                    "s" : [ "system" ]
                                                  },
                                                  "globalScope" : true
                                                } ],
                                                "r" : "79"
                                              },
                                              "globalScope" : true
                                            } ],
                                            "r" : "79"
                                          },
                                          "globalScope" : true
                                        }, {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "." ]
                                          },
                                          "globalScope" : true
                                        }, {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ "value" ]
                                              },
                                              "globalScope" : true
                                            } ],
                                            "r" : "80"
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "80"
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ " ", "=", " " ]
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "'http://unitsofmeasure.org'" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "81"
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "82"
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "83"
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "\n              or " ]
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ "quantity" ]
                                              },
                                              "globalScope" : true
                                            } ],
                                            "r" : "84"
                                          },
                                          "globalScope" : true
                                        }, {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "." ]
                                          },
                                          "globalScope" : true
                                        }, {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ "system" ]
                                              },
                                              "globalScope" : true
                                            } ],
                                            "r" : "85"
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "85"
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "." ]
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "value" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "86"
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "86"
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ " ", "=", " " ]
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "'http://hl7.org/fhirpath/CodeSystem/calendar-units'" ]
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "87"
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "88"
                              },
                              "globalScope" : true
                            } ],
                            "r" : "89"
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ " then\n            " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "System", ".", "Quantity", " { " ]
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "value", ": " ]
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ "quantity" ]
                                              },
                                              "globalScope" : true
                                            } ],
                                            "r" : "90"
                                          },
                                          "globalScope" : true
                                        }, {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "." ]
                                          },
                                          "globalScope" : true
                                        }, {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ "value" ]
                                              },
                                              "globalScope" : true
                                            } ],
                                            "r" : "91"
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "91"
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "." ]
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "value" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "92"
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "92"
                                  },
                                  "globalScope" : true
                                } ]
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ ", " ]
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "unit", ": " ]
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "ToCalendarUnit", "(" ]
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "Coalesce", "(" ]
                                          },
                                          "globalScope" : true
                                        }, {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ {
                                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                  "value" : {
                                                    "s" : [ {
                                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                      "value" : {
                                                        "s" : [ "quantity" ]
                                                      },
                                                      "globalScope" : true
                                                    } ],
                                                    "r" : "93"
                                                  },
                                                  "globalScope" : true
                                                }, {
                                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                  "value" : {
                                                    "s" : [ "." ]
                                                  },
                                                  "globalScope" : true
                                                }, {
                                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                  "value" : {
                                                    "s" : [ {
                                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                      "value" : {
                                                        "s" : [ "code" ]
                                                      },
                                                      "globalScope" : true
                                                    } ],
                                                    "r" : "94"
                                                  },
                                                  "globalScope" : true
                                                } ],
                                                "r" : "94"
                                              },
                                              "globalScope" : true
                                            }, {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ "." ]
                                              },
                                              "globalScope" : true
                                            }, {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ {
                                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                  "value" : {
                                                    "s" : [ "value" ]
                                                  },
                                                  "globalScope" : true
                                                } ],
                                                "r" : "95"
                                              },
                                              "globalScope" : true
                                            } ],
                                            "r" : "95"
                                          },
                                          "globalScope" : true
                                        }, {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ ", " ]
                                          },
                                          "globalScope" : true
                                        }, {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ {
                                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                  "value" : {
                                                    "s" : [ {
                                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                      "value" : {
                                                        "s" : [ "quantity" ]
                                                      },
                                                      "globalScope" : true
                                                    } ],
                                                    "r" : "96"
                                                  },
                                                  "globalScope" : true
                                                }, {
                                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                  "value" : {
                                                    "s" : [ "." ]
                                                  },
                                                  "globalScope" : true
                                                }, {
                                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                  "value" : {
                                                    "s" : [ {
                                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                      "value" : {
                                                        "s" : [ "unit" ]
                                                      },
                                                      "globalScope" : true
                                                    } ],
                                                    "r" : "97"
                                                  },
                                                  "globalScope" : true
                                                } ],
                                                "r" : "97"
                                              },
                                              "globalScope" : true
                                            }, {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ "." ]
                                              },
                                              "globalScope" : true
                                            }, {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ {
                                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                  "value" : {
                                                    "s" : [ "value" ]
                                                  },
                                                  "globalScope" : true
                                                } ],
                                                "r" : "98"
                                              },
                                              "globalScope" : true
                                            } ],
                                            "r" : "98"
                                          },
                                          "globalScope" : true
                                        }, {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ ", " ]
                                          },
                                          "globalScope" : true
                                        }, {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ "'1'" ]
                                              },
                                              "globalScope" : true
                                            } ],
                                            "r" : "99"
                                          },
                                          "globalScope" : true
                                        }, {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ ")" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "100"
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ ")" ]
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "101"
                                  },
                                  "globalScope" : true
                                } ]
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ " }" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "102"
                          },
                          "globalScope" : true
                        } ],
                        "r" : "103"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "\n        else\n            " ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "Message", "(", "null", ", ", "true", ", " ],
                            "r" : "104"
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "'FHIRHelpers.ToQuantity.InvalidFHIRQuantity'" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "106"
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ ", " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "'Error'" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "107"
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ ", " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ {
                                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                  "value" : {
                                                    "s" : [ {
                                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                      "value" : {
                                                        "s" : [ "'Invalid FHIR Quantity code: '" ]
                                                      },
                                                      "globalScope" : true
                                                    } ],
                                                    "r" : "108"
                                                  },
                                                  "globalScope" : true
                                                }, {
                                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                  "value" : {
                                                    "s" : [ " & " ]
                                                  },
                                                  "globalScope" : true
                                                }, {
                                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                  "value" : {
                                                    "s" : [ {
                                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                      "value" : {
                                                        "s" : [ {
                                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                          "value" : {
                                                            "s" : [ {
                                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                              "value" : {
                                                                "s" : [ "quantity" ]
                                                              },
                                                              "globalScope" : true
                                                            } ],
                                                            "r" : "109"
                                                          },
                                                          "globalScope" : true
                                                        }, {
                                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                          "value" : {
                                                            "s" : [ "." ]
                                                          },
                                                          "globalScope" : true
                                                        }, {
                                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                          "value" : {
                                                            "s" : [ {
                                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                              "value" : {
                                                                "s" : [ "unit" ]
                                                              },
                                                              "globalScope" : true
                                                            } ],
                                                            "r" : "110"
                                                          },
                                                          "globalScope" : true
                                                        } ],
                                                        "r" : "110"
                                                      },
                                                      "globalScope" : true
                                                    }, {
                                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                      "value" : {
                                                        "s" : [ "." ]
                                                      },
                                                      "globalScope" : true
                                                    }, {
                                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                      "value" : {
                                                        "s" : [ {
                                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                          "value" : {
                                                            "s" : [ "value" ]
                                                          },
                                                          "globalScope" : true
                                                        } ],
                                                        "r" : "111"
                                                      },
                                                      "globalScope" : true
                                                    } ],
                                                    "r" : "111"
                                                  },
                                                  "globalScope" : true
                                                } ],
                                                "r" : "112"
                                              },
                                              "globalScope" : true
                                            }, {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ " & " ]
                                              },
                                              "globalScope" : true
                                            }, {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ {
                                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                  "value" : {
                                                    "s" : [ "' ('" ]
                                                  },
                                                  "globalScope" : true
                                                } ],
                                                "r" : "113"
                                              },
                                              "globalScope" : true
                                            } ],
                                            "r" : "114"
                                          },
                                          "globalScope" : true
                                        }, {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ " & " ]
                                          },
                                          "globalScope" : true
                                        }, {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ {
                                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                  "value" : {
                                                    "s" : [ {
                                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                      "value" : {
                                                        "s" : [ "quantity" ]
                                                      },
                                                      "globalScope" : true
                                                    } ],
                                                    "r" : "115"
                                                  },
                                                  "globalScope" : true
                                                }, {
                                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                  "value" : {
                                                    "s" : [ "." ]
                                                  },
                                                  "globalScope" : true
                                                }, {
                                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                  "value" : {
                                                    "s" : [ {
                                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                      "value" : {
                                                        "s" : [ "system" ]
                                                      },
                                                      "globalScope" : true
                                                    } ],
                                                    "r" : "116"
                                                  },
                                                  "globalScope" : true
                                                } ],
                                                "r" : "116"
                                              },
                                              "globalScope" : true
                                            }, {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ "." ]
                                              },
                                              "globalScope" : true
                                            }, {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ {
                                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                  "value" : {
                                                    "s" : [ "value" ]
                                                  },
                                                  "globalScope" : true
                                                } ],
                                                "r" : "117"
                                              },
                                              "globalScope" : true
                                            } ],
                                            "r" : "117"
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "118"
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ " & " ]
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "'|'" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "119"
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "120"
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ " & " ]
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ "quantity" ]
                                              },
                                              "globalScope" : true
                                            } ],
                                            "r" : "121"
                                          },
                                          "globalScope" : true
                                        }, {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "." ]
                                          },
                                          "globalScope" : true
                                        }, {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ "code" ]
                                              },
                                              "globalScope" : true
                                            } ],
                                            "r" : "122"
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "122"
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "." ]
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "value" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "123"
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "123"
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "124"
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ " & " ]
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "')'" ]
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "125"
                              },
                              "globalScope" : true
                            } ],
                            "r" : "126"
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ ")" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "127"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "\n    end" ]
                      },
                      "globalScope" : true
                    } ],
                    "r" : "128"
                  },
                  "globalScope" : true
                } ],
                "r" : "128"
              },
              "globalScope" : true
            } ],
            "r" : "129"
          }
        } ],
        "expression" : {
          "type" : "Case",
          "caseItem" : [ {
            "type" : "CaseItem",
            "when" : {
              "type" : "IsNull",
              "operand" : {
                "type" : "OperandRef",
                "localId" : "56",
                "locator" : "37:14-37:21",
                "name" : "quantity"
              },
              "localId" : "57",
              "locator" : "37:14-37:29"
            },
            "then" : {
              "type" : "As",
              "operand" : {
                "type" : "Null",
                "localId" : "58",
                "locator" : "37:36-37:39"
              },
              "asType" : "{urn:hl7-org:elm-types:r1}Quantity"
            },
            "localId" : "59",
            "locator" : "37:9-37:39"
          }, {
            "type" : "CaseItem",
            "when" : {
              "type" : "IsNull",
              "operand" : {
                "type" : "Property",
                "source" : {
                  "type" : "OperandRef",
                  "localId" : "60",
                  "locator" : "38:14-38:21",
                  "name" : "quantity"
                },
                "localId" : "61",
                "locator" : "38:14-38:27",
                "path" : "value"
              },
              "localId" : "62",
              "locator" : "38:14-38:35"
            },
            "then" : {
              "type" : "As",
              "operand" : {
                "type" : "Null",
                "localId" : "63",
                "locator" : "38:42-38:45"
              },
              "asType" : "{urn:hl7-org:elm-types:r1}Quantity"
            },
            "localId" : "64",
            "locator" : "38:9-38:45"
          }, {
            "type" : "CaseItem",
            "when" : {
              "type" : "Not",
              "operand" : {
                "type" : "IsNull",
                "operand" : {
                  "type" : "Property",
                  "source" : {
                    "type" : "OperandRef",
                    "localId" : "65",
                    "locator" : "39:14-39:21",
                    "name" : "quantity"
                  },
                  "localId" : "66",
                  "locator" : "39:14-39:32",
                  "path" : "comparator"
                },
                "locator" : "39:14-39:44"
              },
              "localId" : "67",
              "locator" : "39:14-39:44"
            },
            "then" : {
              "type" : "As",
              "operand" : {
                "type" : "Message",
                "source" : {
                  "type" : "Null",
                  "localId" : "68",
                  "locator" : "40:21-40:24"
                },
                "condition" : {
                  "type" : "Literal",
                  "localId" : "69",
                  "locator" : "40:27-40:30",
                  "valueType" : "{urn:hl7-org:elm-types:r1}Boolean",
                  "value" : "true"
                },
                "code" : {
                  "type" : "Literal",
                  "localId" : "70",
                  "locator" : "40:33-40:87",
                  "valueType" : "{urn:hl7-org:elm-types:r1}String",
                  "value" : "FHIRHelpers.ToQuantity.ComparatorQuantityNotSupported"
                },
                "severity" : {
                  "type" : "Literal",
                  "localId" : "71",
                  "locator" : "40:90-40:96",
                  "valueType" : "{urn:hl7-org:elm-types:r1}String",
                  "value" : "Error"
                },
                "message" : {
                  "type" : "Literal",
                  "localId" : "72",
                  "locator" : "40:99-40:188",
                  "valueType" : "{urn:hl7-org:elm-types:r1}String",
                  "value" : "FHIR Quantity value has a comparator and cannot be converted to a System.Quantity value."
                },
                "localId" : "73",
                "locator" : "40:13-40:189"
              },
              "asType" : "{urn:hl7-org:elm-types:r1}Quantity"
            },
            "localId" : "74",
            "locator" : "39:9-40:189"
          }, {
            "type" : "CaseItem",
            "when" : {
              "type" : "Or",
              "operand" : [ {
                "type" : "Or",
                "operand" : [ {
                  "type" : "IsNull",
                  "operand" : {
                    "type" : "Property",
                    "source" : {
                      "type" : "OperandRef",
                      "localId" : "75",
                      "locator" : "41:14-41:21",
                      "name" : "quantity"
                    },
                    "localId" : "76",
                    "locator" : "41:14-41:28",
                    "path" : "system"
                  },
                  "localId" : "77",
                  "locator" : "41:14-41:36"
                }, {
                  "type" : "Equal",
                  "operand" : [ {
                    "type" : "Property",
                    "source" : {
                      "type" : "Property",
                      "source" : {
                        "type" : "OperandRef",
                        "localId" : "78",
                        "locator" : "41:41-41:48",
                        "name" : "quantity"
                      },
                      "localId" : "79",
                      "locator" : "41:41-41:55",
                      "path" : "system"
                    },
                    "localId" : "80",
                    "locator" : "41:41-41:61",
                    "path" : "value"
                  }, {
                    "type" : "Literal",
                    "localId" : "81",
                    "locator" : "41:65-41:91",
                    "valueType" : "{urn:hl7-org:elm-types:r1}String",
                    "value" : "http://unitsofmeasure.org"
                  } ],
                  "localId" : "82",
                  "locator" : "41:41-41:91"
                } ],
                "localId" : "83",
                "locator" : "41:14-41:91"
              }, {
                "type" : "Equal",
                "operand" : [ {
                  "type" : "Property",
                  "source" : {
                    "type" : "Property",
                    "source" : {
                      "type" : "OperandRef",
                      "localId" : "84",
                      "locator" : "42:18-42:25",
                      "name" : "quantity"
                    },
                    "localId" : "85",
                    "locator" : "42:18-42:32",
                    "path" : "system"
                  },
                  "localId" : "86",
                  "locator" : "42:18-42:38",
                  "path" : "value"
                }, {
                  "type" : "Literal",
                  "localId" : "87",
                  "locator" : "42:42-42:92",
                  "valueType" : "{urn:hl7-org:elm-types:r1}String",
                  "value" : "http://hl7.org/fhirpath/CodeSystem/calendar-units"
                } ],
                "localId" : "88",
                "locator" : "42:18-42:92"
              } ],
              "localId" : "89",
              "locator" : "41:14-42:92"
            },
            "then" : {
              "type" : "Instance",
              "element" : [ {
                "type" : "InstanceElement",
                "value" : {
                  "type" : "Property",
                  "source" : {
                    "type" : "Property",
                    "source" : {
                      "type" : "OperandRef",
                      "localId" : "90",
                      "locator" : "43:38-43:45",
                      "name" : "quantity"
                    },
                    "localId" : "91",
                    "locator" : "43:38-43:51",
                    "path" : "value"
                  },
                  "localId" : "92",
                  "locator" : "43:38-43:57",
                  "path" : "value"
                },
                "name" : "value"
              }, {
                "type" : "InstanceElement",
                "value" : {
                  "type" : "FunctionRef",
                  "operand" : [ {
                    "type" : "Coalesce",
                    "operand" : [ {
                      "type" : "Property",
                      "source" : {
                        "type" : "Property",
                        "source" : {
                          "type" : "OperandRef",
                          "localId" : "93",
                          "locator" : "43:90-43:97",
                          "name" : "quantity"
                        },
                        "localId" : "94",
                        "locator" : "43:90-43:102",
                        "path" : "code"
                      },
                      "localId" : "95",
                      "locator" : "43:90-43:108",
                      "path" : "value"
                    }, {
                      "type" : "Property",
                      "source" : {
                        "type" : "Property",
                        "source" : {
                          "type" : "OperandRef",
                          "localId" : "96",
                          "locator" : "43:111-43:118",
                          "name" : "quantity"
                        },
                        "localId" : "97",
                        "locator" : "43:111-43:123",
                        "path" : "unit"
                      },
                      "localId" : "98",
                      "locator" : "43:111-43:129",
                      "path" : "value"
                    }, {
                      "type" : "Literal",
                      "localId" : "99",
                      "locator" : "43:132-43:134",
                      "valueType" : "{urn:hl7-org:elm-types:r1}String",
                      "value" : "1"
                    } ],
                    "localId" : "100",
                    "locator" : "43:81-43:135"
                  } ],
                  "localId" : "101",
                  "locator" : "43:66-43:136",
                  "name" : "ToCalendarUnit"
                },
                "name" : "unit"
              } ],
              "localId" : "102",
              "locator" : "43:13-43:138",
              "classType" : "{urn:hl7-org:elm-types:r1}Quantity"
            },
            "localId" : "103",
            "locator" : "41:9-43:138"
          } ],
          "else" : {
            "type" : "As",
            "operand" : {
              "type" : "Message",
              "source" : {
                "type" : "Null",
                "localId" : "104",
                "locator" : "45:21-45:24"
              },
              "condition" : {
                "type" : "Literal",
                "localId" : "105",
                "locator" : "45:27-45:30",
                "valueType" : "{urn:hl7-org:elm-types:r1}Boolean",
                "value" : "true"
              },
              "code" : {
                "type" : "Literal",
                "localId" : "106",
                "locator" : "45:33-45:76",
                "valueType" : "{urn:hl7-org:elm-types:r1}String",
                "value" : "FHIRHelpers.ToQuantity.InvalidFHIRQuantity"
              },
              "severity" : {
                "type" : "Literal",
                "localId" : "107",
                "locator" : "45:79-45:85",
                "valueType" : "{urn:hl7-org:elm-types:r1}String",
                "value" : "Error"
              },
              "message" : {
                "type" : "Concatenate",
                "operand" : [ {
                  "type" : "Coalesce",
                  "operand" : [ {
                    "type" : "Concatenate",
                    "operand" : [ {
                      "type" : "Coalesce",
                      "operand" : [ {
                        "type" : "Concatenate",
                        "operand" : [ {
                          "type" : "Coalesce",
                          "operand" : [ {
                            "type" : "Concatenate",
                            "operand" : [ {
                              "type" : "Coalesce",
                              "operand" : [ {
                                "type" : "Concatenate",
                                "operand" : [ {
                                  "type" : "Coalesce",
                                  "operand" : [ {
                                    "type" : "Concatenate",
                                    "operand" : [ {
                                      "type" : "Coalesce",
                                      "operand" : [ {
                                        "type" : "Literal",
                                        "localId" : "108",
                                        "locator" : "45:88-45:117",
                                        "valueType" : "{urn:hl7-org:elm-types:r1}String",
                                        "value" : "Invalid FHIR Quantity code: "
                                      }, {
                                        "type" : "Literal",
                                        "valueType" : "{urn:hl7-org:elm-types:r1}String"
                                      } ]
                                    }, {
                                      "type" : "Coalesce",
                                      "operand" : [ {
                                        "type" : "Property",
                                        "source" : {
                                          "type" : "Property",
                                          "source" : {
                                            "type" : "OperandRef",
                                            "localId" : "109",
                                            "locator" : "45:121-45:128",
                                            "name" : "quantity"
                                          },
                                          "localId" : "110",
                                          "locator" : "45:121-45:133",
                                          "path" : "unit"
                                        },
                                        "localId" : "111",
                                        "locator" : "45:121-45:139",
                                        "path" : "value"
                                      }, {
                                        "type" : "Literal",
                                        "valueType" : "{urn:hl7-org:elm-types:r1}String"
                                      } ]
                                    } ],
                                    "localId" : "112",
                                    "locator" : "45:88-45:139"
                                  }, {
                                    "type" : "Literal",
                                    "valueType" : "{urn:hl7-org:elm-types:r1}String"
                                  } ]
                                }, {
                                  "type" : "Coalesce",
                                  "operand" : [ {
                                    "type" : "Literal",
                                    "localId" : "113",
                                    "locator" : "45:143-45:146",
                                    "valueType" : "{urn:hl7-org:elm-types:r1}String",
                                    "value" : " ("
                                  }, {
                                    "type" : "Literal",
                                    "valueType" : "{urn:hl7-org:elm-types:r1}String"
                                  } ]
                                } ],
                                "localId" : "114",
                                "locator" : "45:88-45:146"
                              }, {
                                "type" : "Literal",
                                "valueType" : "{urn:hl7-org:elm-types:r1}String"
                              } ]
                            }, {
                              "type" : "Coalesce",
                              "operand" : [ {
                                "type" : "Property",
                                "source" : {
                                  "type" : "Property",
                                  "source" : {
                                    "type" : "OperandRef",
                                    "localId" : "115",
                                    "locator" : "45:150-45:157",
                                    "name" : "quantity"
                                  },
                                  "localId" : "116",
                                  "locator" : "45:150-45:164",
                                  "path" : "system"
                                },
                                "localId" : "117",
                                "locator" : "45:150-45:170",
                                "path" : "value"
                              }, {
                                "type" : "Literal",
                                "valueType" : "{urn:hl7-org:elm-types:r1}String"
                              } ]
                            } ],
                            "localId" : "118",
                            "locator" : "45:88-45:170"
                          }, {
                            "type" : "Literal",
                            "valueType" : "{urn:hl7-org:elm-types:r1}String"
                          } ]
                        }, {
                          "type" : "Coalesce",
                          "operand" : [ {
                            "type" : "Literal",
                            "localId" : "119",
                            "locator" : "45:174-45:176",
                            "valueType" : "{urn:hl7-org:elm-types:r1}String",
                            "value" : "|"
                          }, {
                            "type" : "Literal",
                            "valueType" : "{urn:hl7-org:elm-types:r1}String"
                          } ]
                        } ],
                        "localId" : "120",
                        "locator" : "45:88-45:176"
                      }, {
                        "type" : "Literal",
                        "valueType" : "{urn:hl7-org:elm-types:r1}String"
                      } ]
                    }, {
                      "type" : "Coalesce",
                      "operand" : [ {
                        "type" : "Property",
                        "source" : {
                          "type" : "Property",
                          "source" : {
                            "type" : "OperandRef",
                            "localId" : "121",
                            "locator" : "45:180-45:187",
                            "name" : "quantity"
                          },
                          "localId" : "122",
                          "locator" : "45:180-45:192",
                          "path" : "code"
                        },
                        "localId" : "123",
                        "locator" : "45:180-45:198",
                        "path" : "value"
                      }, {
                        "type" : "Literal",
                        "valueType" : "{urn:hl7-org:elm-types:r1}String"
                      } ]
                    } ],
                    "localId" : "124",
                    "locator" : "45:88-45:198"
                  }, {
                    "type" : "Literal",
                    "valueType" : "{urn:hl7-org:elm-types:r1}String"
                  } ]
                }, {
                  "type" : "Coalesce",
                  "operand" : [ {
                    "type" : "Literal",
                    "localId" : "125",
                    "locator" : "45:202-45:204",
                    "valueType" : "{urn:hl7-org:elm-types:r1}String",
                    "value" : ")"
                  }, {
                    "type" : "Literal",
                    "valueType" : "{urn:hl7-org:elm-types:r1}String"
                  } ]
                } ],
                "localId" : "126",
                "locator" : "45:88-45:204"
              },
              "localId" : "127",
              "locator" : "45:13-45:205"
            },
            "asType" : "{urn:hl7-org:elm-types:r1}Quantity"
          },
          "localId" : "128",
          "locator" : "36:5-46:7"
        },
        "localId" : "129",
        "locator" : "35:1-46:7",
        "name" : "ToQuantity",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "130",
            "locator" : "48:55-48:67",
            "name" : "{http://hl7.org/fhir}Quantity"
          },
          "name" : "quantity"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToQuantityIgnoringComparator", "(", "quantity", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "FHIR", ".", "Quantity" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "130"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "):\n    " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "case\n        " ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "when " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "quantity" ]
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "131"
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ " is null" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "132"
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ " then ", "null" ],
                            "r" : "133"
                          },
                          "globalScope" : true
                        } ],
                        "r" : "134"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "\n        " ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "when " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "quantity" ]
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "135"
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "." ]
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "value" ]
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "136"
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "136"
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ " is null" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "137"
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ " then ", "null" ],
                            "r" : "138"
                          },
                          "globalScope" : true
                        } ],
                        "r" : "139"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "\n        " ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "when " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ "quantity" ]
                                              },
                                              "globalScope" : true
                                            } ],
                                            "r" : "140"
                                          },
                                          "globalScope" : true
                                        }, {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "." ]
                                          },
                                          "globalScope" : true
                                        }, {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ "system" ]
                                              },
                                              "globalScope" : true
                                            } ],
                                            "r" : "141"
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "141"
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ " is null" ]
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "142"
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ " or " ]
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ {
                                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                  "value" : {
                                                    "s" : [ "quantity" ]
                                                  },
                                                  "globalScope" : true
                                                } ],
                                                "r" : "143"
                                              },
                                              "globalScope" : true
                                            }, {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ "." ]
                                              },
                                              "globalScope" : true
                                            }, {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ {
                                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                  "value" : {
                                                    "s" : [ "system" ]
                                                  },
                                                  "globalScope" : true
                                                } ],
                                                "r" : "144"
                                              },
                                              "globalScope" : true
                                            } ],
                                            "r" : "144"
                                          },
                                          "globalScope" : true
                                        }, {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "." ]
                                          },
                                          "globalScope" : true
                                        }, {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ "value" ]
                                              },
                                              "globalScope" : true
                                            } ],
                                            "r" : "145"
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "145"
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ " ", "=", " " ]
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "'http://unitsofmeasure.org'" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "146"
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "147"
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "148"
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "\n              or " ]
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ "quantity" ]
                                              },
                                              "globalScope" : true
                                            } ],
                                            "r" : "149"
                                          },
                                          "globalScope" : true
                                        }, {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "." ]
                                          },
                                          "globalScope" : true
                                        }, {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ "system" ]
                                              },
                                              "globalScope" : true
                                            } ],
                                            "r" : "150"
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "150"
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "." ]
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "value" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "151"
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "151"
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ " ", "=", " " ]
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "'http://hl7.org/fhirpath/CodeSystem/calendar-units'" ]
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "152"
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "153"
                              },
                              "globalScope" : true
                            } ],
                            "r" : "154"
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ " then\n            " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "System", ".", "Quantity", " { " ]
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "value", ": " ]
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ "quantity" ]
                                              },
                                              "globalScope" : true
                                            } ],
                                            "r" : "155"
                                          },
                                          "globalScope" : true
                                        }, {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "." ]
                                          },
                                          "globalScope" : true
                                        }, {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ "value" ]
                                              },
                                              "globalScope" : true
                                            } ],
                                            "r" : "156"
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "156"
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "." ]
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "value" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "157"
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "157"
                                  },
                                  "globalScope" : true
                                } ]
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ ", " ]
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "unit", ": " ]
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "ToCalendarUnit", "(" ]
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "Coalesce", "(" ]
                                          },
                                          "globalScope" : true
                                        }, {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ {
                                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                  "value" : {
                                                    "s" : [ {
                                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                      "value" : {
                                                        "s" : [ "quantity" ]
                                                      },
                                                      "globalScope" : true
                                                    } ],
                                                    "r" : "158"
                                                  },
                                                  "globalScope" : true
                                                }, {
                                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                  "value" : {
                                                    "s" : [ "." ]
                                                  },
                                                  "globalScope" : true
                                                }, {
                                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                  "value" : {
                                                    "s" : [ {
                                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                      "value" : {
                                                        "s" : [ "code" ]
                                                      },
                                                      "globalScope" : true
                                                    } ],
                                                    "r" : "159"
                                                  },
                                                  "globalScope" : true
                                                } ],
                                                "r" : "159"
                                              },
                                              "globalScope" : true
                                            }, {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ "." ]
                                              },
                                              "globalScope" : true
                                            }, {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ {
                                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                  "value" : {
                                                    "s" : [ "value" ]
                                                  },
                                                  "globalScope" : true
                                                } ],
                                                "r" : "160"
                                              },
                                              "globalScope" : true
                                            } ],
                                            "r" : "160"
                                          },
                                          "globalScope" : true
                                        }, {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ ", " ]
                                          },
                                          "globalScope" : true
                                        }, {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ {
                                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                  "value" : {
                                                    "s" : [ {
                                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                      "value" : {
                                                        "s" : [ "quantity" ]
                                                      },
                                                      "globalScope" : true
                                                    } ],
                                                    "r" : "161"
                                                  },
                                                  "globalScope" : true
                                                }, {
                                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                  "value" : {
                                                    "s" : [ "." ]
                                                  },
                                                  "globalScope" : true
                                                }, {
                                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                  "value" : {
                                                    "s" : [ {
                                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                      "value" : {
                                                        "s" : [ "unit" ]
                                                      },
                                                      "globalScope" : true
                                                    } ],
                                                    "r" : "162"
                                                  },
                                                  "globalScope" : true
                                                } ],
                                                "r" : "162"
                                              },
                                              "globalScope" : true
                                            }, {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ "." ]
                                              },
                                              "globalScope" : true
                                            }, {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ {
                                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                  "value" : {
                                                    "s" : [ "value" ]
                                                  },
                                                  "globalScope" : true
                                                } ],
                                                "r" : "163"
                                              },
                                              "globalScope" : true
                                            } ],
                                            "r" : "163"
                                          },
                                          "globalScope" : true
                                        }, {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ ", " ]
                                          },
                                          "globalScope" : true
                                        }, {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ "'1'" ]
                                              },
                                              "globalScope" : true
                                            } ],
                                            "r" : "164"
                                          },
                                          "globalScope" : true
                                        }, {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ ")" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "165"
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ ")" ]
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "166"
                                  },
                                  "globalScope" : true
                                } ]
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ " }" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "167"
                          },
                          "globalScope" : true
                        } ],
                        "r" : "168"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "\n        else\n            " ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "Message", "(", "null", ", ", "true", ", " ],
                            "r" : "169"
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "'FHIRHelpers.ToQuantity.InvalidFHIRQuantity'" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "171"
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ ", " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "'Error'" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "172"
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ ", " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ {
                                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                  "value" : {
                                                    "s" : [ {
                                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                      "value" : {
                                                        "s" : [ "'Invalid FHIR Quantity code: '" ]
                                                      },
                                                      "globalScope" : true
                                                    } ],
                                                    "r" : "173"
                                                  },
                                                  "globalScope" : true
                                                }, {
                                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                  "value" : {
                                                    "s" : [ " & " ]
                                                  },
                                                  "globalScope" : true
                                                }, {
                                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                  "value" : {
                                                    "s" : [ {
                                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                      "value" : {
                                                        "s" : [ {
                                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                          "value" : {
                                                            "s" : [ {
                                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                              "value" : {
                                                                "s" : [ "quantity" ]
                                                              },
                                                              "globalScope" : true
                                                            } ],
                                                            "r" : "174"
                                                          },
                                                          "globalScope" : true
                                                        }, {
                                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                          "value" : {
                                                            "s" : [ "." ]
                                                          },
                                                          "globalScope" : true
                                                        }, {
                                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                          "value" : {
                                                            "s" : [ {
                                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                              "value" : {
                                                                "s" : [ "unit" ]
                                                              },
                                                              "globalScope" : true
                                                            } ],
                                                            "r" : "175"
                                                          },
                                                          "globalScope" : true
                                                        } ],
                                                        "r" : "175"
                                                      },
                                                      "globalScope" : true
                                                    }, {
                                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                      "value" : {
                                                        "s" : [ "." ]
                                                      },
                                                      "globalScope" : true
                                                    }, {
                                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                      "value" : {
                                                        "s" : [ {
                                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                          "value" : {
                                                            "s" : [ "value" ]
                                                          },
                                                          "globalScope" : true
                                                        } ],
                                                        "r" : "176"
                                                      },
                                                      "globalScope" : true
                                                    } ],
                                                    "r" : "176"
                                                  },
                                                  "globalScope" : true
                                                } ],
                                                "r" : "177"
                                              },
                                              "globalScope" : true
                                            }, {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ " & " ]
                                              },
                                              "globalScope" : true
                                            }, {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ {
                                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                  "value" : {
                                                    "s" : [ "' ('" ]
                                                  },
                                                  "globalScope" : true
                                                } ],
                                                "r" : "178"
                                              },
                                              "globalScope" : true
                                            } ],
                                            "r" : "179"
                                          },
                                          "globalScope" : true
                                        }, {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ " & " ]
                                          },
                                          "globalScope" : true
                                        }, {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ {
                                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                  "value" : {
                                                    "s" : [ {
                                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                      "value" : {
                                                        "s" : [ "quantity" ]
                                                      },
                                                      "globalScope" : true
                                                    } ],
                                                    "r" : "180"
                                                  },
                                                  "globalScope" : true
                                                }, {
                                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                  "value" : {
                                                    "s" : [ "." ]
                                                  },
                                                  "globalScope" : true
                                                }, {
                                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                  "value" : {
                                                    "s" : [ {
                                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                      "value" : {
                                                        "s" : [ "system" ]
                                                      },
                                                      "globalScope" : true
                                                    } ],
                                                    "r" : "181"
                                                  },
                                                  "globalScope" : true
                                                } ],
                                                "r" : "181"
                                              },
                                              "globalScope" : true
                                            }, {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ "." ]
                                              },
                                              "globalScope" : true
                                            }, {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ {
                                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                  "value" : {
                                                    "s" : [ "value" ]
                                                  },
                                                  "globalScope" : true
                                                } ],
                                                "r" : "182"
                                              },
                                              "globalScope" : true
                                            } ],
                                            "r" : "182"
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "183"
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ " & " ]
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "'|'" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "184"
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "185"
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ " & " ]
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ "quantity" ]
                                              },
                                              "globalScope" : true
                                            } ],
                                            "r" : "186"
                                          },
                                          "globalScope" : true
                                        }, {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "." ]
                                          },
                                          "globalScope" : true
                                        }, {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ "code" ]
                                              },
                                              "globalScope" : true
                                            } ],
                                            "r" : "187"
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "187"
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "." ]
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "value" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "188"
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "188"
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "189"
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ " & " ]
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "')'" ]
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "190"
                              },
                              "globalScope" : true
                            } ],
                            "r" : "191"
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ ")" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "192"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "\n    end" ]
                      },
                      "globalScope" : true
                    } ],
                    "r" : "193"
                  },
                  "globalScope" : true
                } ],
                "r" : "193"
              },
              "globalScope" : true
            } ],
            "r" : "194"
          }
        } ],
        "expression" : {
          "type" : "Case",
          "caseItem" : [ {
            "type" : "CaseItem",
            "when" : {
              "type" : "IsNull",
              "operand" : {
                "type" : "OperandRef",
                "localId" : "131",
                "locator" : "50:14-50:21",
                "name" : "quantity"
              },
              "localId" : "132",
              "locator" : "50:14-50:29"
            },
            "then" : {
              "type" : "As",
              "operand" : {
                "type" : "Null",
                "localId" : "133",
                "locator" : "50:36-50:39"
              },
              "asType" : "{urn:hl7-org:elm-types:r1}Quantity"
            },
            "localId" : "134",
            "locator" : "50:9-50:39"
          }, {
            "type" : "CaseItem",
            "when" : {
              "type" : "IsNull",
              "operand" : {
                "type" : "Property",
                "source" : {
                  "type" : "OperandRef",
                  "localId" : "135",
                  "locator" : "51:14-51:21",
                  "name" : "quantity"
                },
                "localId" : "136",
                "locator" : "51:14-51:27",
                "path" : "value"
              },
              "localId" : "137",
              "locator" : "51:14-51:35"
            },
            "then" : {
              "type" : "As",
              "operand" : {
                "type" : "Null",
                "localId" : "138",
                "locator" : "51:42-51:45"
              },
              "asType" : "{urn:hl7-org:elm-types:r1}Quantity"
            },
            "localId" : "139",
            "locator" : "51:9-51:45"
          }, {
            "type" : "CaseItem",
            "when" : {
              "type" : "Or",
              "operand" : [ {
                "type" : "Or",
                "operand" : [ {
                  "type" : "IsNull",
                  "operand" : {
                    "type" : "Property",
                    "source" : {
                      "type" : "OperandRef",
                      "localId" : "140",
                      "locator" : "52:14-52:21",
                      "name" : "quantity"
                    },
                    "localId" : "141",
                    "locator" : "52:14-52:28",
                    "path" : "system"
                  },
                  "localId" : "142",
                  "locator" : "52:14-52:36"
                }, {
                  "type" : "Equal",
                  "operand" : [ {
                    "type" : "Property",
                    "source" : {
                      "type" : "Property",
                      "source" : {
                        "type" : "OperandRef",
                        "localId" : "143",
                        "locator" : "52:41-52:48",
                        "name" : "quantity"
                      },
                      "localId" : "144",
                      "locator" : "52:41-52:55",
                      "path" : "system"
                    },
                    "localId" : "145",
                    "locator" : "52:41-52:61",
                    "path" : "value"
                  }, {
                    "type" : "Literal",
                    "localId" : "146",
                    "locator" : "52:65-52:91",
                    "valueType" : "{urn:hl7-org:elm-types:r1}String",
                    "value" : "http://unitsofmeasure.org"
                  } ],
                  "localId" : "147",
                  "locator" : "52:41-52:91"
                } ],
                "localId" : "148",
                "locator" : "52:14-52:91"
              }, {
                "type" : "Equal",
                "operand" : [ {
                  "type" : "Property",
                  "source" : {
                    "type" : "Property",
                    "source" : {
                      "type" : "OperandRef",
                      "localId" : "149",
                      "locator" : "53:18-53:25",
                      "name" : "quantity"
                    },
                    "localId" : "150",
                    "locator" : "53:18-53:32",
                    "path" : "system"
                  },
                  "localId" : "151",
                  "locator" : "53:18-53:38",
                  "path" : "value"
                }, {
                  "type" : "Literal",
                  "localId" : "152",
                  "locator" : "53:42-53:92",
                  "valueType" : "{urn:hl7-org:elm-types:r1}String",
                  "value" : "http://hl7.org/fhirpath/CodeSystem/calendar-units"
                } ],
                "localId" : "153",
                "locator" : "53:18-53:92"
              } ],
              "localId" : "154",
              "locator" : "52:14-53:92"
            },
            "then" : {
              "type" : "Instance",
              "element" : [ {
                "type" : "InstanceElement",
                "value" : {
                  "type" : "Property",
                  "source" : {
                    "type" : "Property",
                    "source" : {
                      "type" : "OperandRef",
                      "localId" : "155",
                      "locator" : "54:38-54:45",
                      "name" : "quantity"
                    },
                    "localId" : "156",
                    "locator" : "54:38-54:51",
                    "path" : "value"
                  },
                  "localId" : "157",
                  "locator" : "54:38-54:57",
                  "path" : "value"
                },
                "name" : "value"
              }, {
                "type" : "InstanceElement",
                "value" : {
                  "type" : "FunctionRef",
                  "operand" : [ {
                    "type" : "Coalesce",
                    "operand" : [ {
                      "type" : "Property",
                      "source" : {
                        "type" : "Property",
                        "source" : {
                          "type" : "OperandRef",
                          "localId" : "158",
                          "locator" : "54:90-54:97",
                          "name" : "quantity"
                        },
                        "localId" : "159",
                        "locator" : "54:90-54:102",
                        "path" : "code"
                      },
                      "localId" : "160",
                      "locator" : "54:90-54:108",
                      "path" : "value"
                    }, {
                      "type" : "Property",
                      "source" : {
                        "type" : "Property",
                        "source" : {
                          "type" : "OperandRef",
                          "localId" : "161",
                          "locator" : "54:111-54:118",
                          "name" : "quantity"
                        },
                        "localId" : "162",
                        "locator" : "54:111-54:123",
                        "path" : "unit"
                      },
                      "localId" : "163",
                      "locator" : "54:111-54:129",
                      "path" : "value"
                    }, {
                      "type" : "Literal",
                      "localId" : "164",
                      "locator" : "54:132-54:134",
                      "valueType" : "{urn:hl7-org:elm-types:r1}String",
                      "value" : "1"
                    } ],
                    "localId" : "165",
                    "locator" : "54:81-54:135"
                  } ],
                  "localId" : "166",
                  "locator" : "54:66-54:136",
                  "name" : "ToCalendarUnit"
                },
                "name" : "unit"
              } ],
              "localId" : "167",
              "locator" : "54:13-54:138",
              "classType" : "{urn:hl7-org:elm-types:r1}Quantity"
            },
            "localId" : "168",
            "locator" : "52:9-54:138"
          } ],
          "else" : {
            "type" : "As",
            "operand" : {
              "type" : "Message",
              "source" : {
                "type" : "Null",
                "localId" : "169",
                "locator" : "56:21-56:24"
              },
              "condition" : {
                "type" : "Literal",
                "localId" : "170",
                "locator" : "56:27-56:30",
                "valueType" : "{urn:hl7-org:elm-types:r1}Boolean",
                "value" : "true"
              },
              "code" : {
                "type" : "Literal",
                "localId" : "171",
                "locator" : "56:33-56:76",
                "valueType" : "{urn:hl7-org:elm-types:r1}String",
                "value" : "FHIRHelpers.ToQuantity.InvalidFHIRQuantity"
              },
              "severity" : {
                "type" : "Literal",
                "localId" : "172",
                "locator" : "56:79-56:85",
                "valueType" : "{urn:hl7-org:elm-types:r1}String",
                "value" : "Error"
              },
              "message" : {
                "type" : "Concatenate",
                "operand" : [ {
                  "type" : "Coalesce",
                  "operand" : [ {
                    "type" : "Concatenate",
                    "operand" : [ {
                      "type" : "Coalesce",
                      "operand" : [ {
                        "type" : "Concatenate",
                        "operand" : [ {
                          "type" : "Coalesce",
                          "operand" : [ {
                            "type" : "Concatenate",
                            "operand" : [ {
                              "type" : "Coalesce",
                              "operand" : [ {
                                "type" : "Concatenate",
                                "operand" : [ {
                                  "type" : "Coalesce",
                                  "operand" : [ {
                                    "type" : "Concatenate",
                                    "operand" : [ {
                                      "type" : "Coalesce",
                                      "operand" : [ {
                                        "type" : "Literal",
                                        "localId" : "173",
                                        "locator" : "56:88-56:117",
                                        "valueType" : "{urn:hl7-org:elm-types:r1}String",
                                        "value" : "Invalid FHIR Quantity code: "
                                      }, {
                                        "type" : "Literal",
                                        "valueType" : "{urn:hl7-org:elm-types:r1}String"
                                      } ]
                                    }, {
                                      "type" : "Coalesce",
                                      "operand" : [ {
                                        "type" : "Property",
                                        "source" : {
                                          "type" : "Property",
                                          "source" : {
                                            "type" : "OperandRef",
                                            "localId" : "174",
                                            "locator" : "56:121-56:128",
                                            "name" : "quantity"
                                          },
                                          "localId" : "175",
                                          "locator" : "56:121-56:133",
                                          "path" : "unit"
                                        },
                                        "localId" : "176",
                                        "locator" : "56:121-56:139",
                                        "path" : "value"
                                      }, {
                                        "type" : "Literal",
                                        "valueType" : "{urn:hl7-org:elm-types:r1}String"
                                      } ]
                                    } ],
                                    "localId" : "177",
                                    "locator" : "56:88-56:139"
                                  }, {
                                    "type" : "Literal",
                                    "valueType" : "{urn:hl7-org:elm-types:r1}String"
                                  } ]
                                }, {
                                  "type" : "Coalesce",
                                  "operand" : [ {
                                    "type" : "Literal",
                                    "localId" : "178",
                                    "locator" : "56:143-56:146",
                                    "valueType" : "{urn:hl7-org:elm-types:r1}String",
                                    "value" : " ("
                                  }, {
                                    "type" : "Literal",
                                    "valueType" : "{urn:hl7-org:elm-types:r1}String"
                                  } ]
                                } ],
                                "localId" : "179",
                                "locator" : "56:88-56:146"
                              }, {
                                "type" : "Literal",
                                "valueType" : "{urn:hl7-org:elm-types:r1}String"
                              } ]
                            }, {
                              "type" : "Coalesce",
                              "operand" : [ {
                                "type" : "Property",
                                "source" : {
                                  "type" : "Property",
                                  "source" : {
                                    "type" : "OperandRef",
                                    "localId" : "180",
                                    "locator" : "56:150-56:157",
                                    "name" : "quantity"
                                  },
                                  "localId" : "181",
                                  "locator" : "56:150-56:164",
                                  "path" : "system"
                                },
                                "localId" : "182",
                                "locator" : "56:150-56:170",
                                "path" : "value"
                              }, {
                                "type" : "Literal",
                                "valueType" : "{urn:hl7-org:elm-types:r1}String"
                              } ]
                            } ],
                            "localId" : "183",
                            "locator" : "56:88-56:170"
                          }, {
                            "type" : "Literal",
                            "valueType" : "{urn:hl7-org:elm-types:r1}String"
                          } ]
                        }, {
                          "type" : "Coalesce",
                          "operand" : [ {
                            "type" : "Literal",
                            "localId" : "184",
                            "locator" : "56:174-56:176",
                            "valueType" : "{urn:hl7-org:elm-types:r1}String",
                            "value" : "|"
                          }, {
                            "type" : "Literal",
                            "valueType" : "{urn:hl7-org:elm-types:r1}String"
                          } ]
                        } ],
                        "localId" : "185",
                        "locator" : "56:88-56:176"
                      }, {
                        "type" : "Literal",
                        "valueType" : "{urn:hl7-org:elm-types:r1}String"
                      } ]
                    }, {
                      "type" : "Coalesce",
                      "operand" : [ {
                        "type" : "Property",
                        "source" : {
                          "type" : "Property",
                          "source" : {
                            "type" : "OperandRef",
                            "localId" : "186",
                            "locator" : "56:180-56:187",
                            "name" : "quantity"
                          },
                          "localId" : "187",
                          "locator" : "56:180-56:192",
                          "path" : "code"
                        },
                        "localId" : "188",
                        "locator" : "56:180-56:198",
                        "path" : "value"
                      }, {
                        "type" : "Literal",
                        "valueType" : "{urn:hl7-org:elm-types:r1}String"
                      } ]
                    } ],
                    "localId" : "189",
                    "locator" : "56:88-56:198"
                  }, {
                    "type" : "Literal",
                    "valueType" : "{urn:hl7-org:elm-types:r1}String"
                  } ]
                }, {
                  "type" : "Coalesce",
                  "operand" : [ {
                    "type" : "Literal",
                    "localId" : "190",
                    "locator" : "56:202-56:204",
                    "valueType" : "{urn:hl7-org:elm-types:r1}String",
                    "value" : ")"
                  }, {
                    "type" : "Literal",
                    "valueType" : "{urn:hl7-org:elm-types:r1}String"
                  } ]
                } ],
                "localId" : "191",
                "locator" : "56:88-56:204"
              },
              "localId" : "192",
              "locator" : "56:13-56:205"
            },
            "asType" : "{urn:hl7-org:elm-types:r1}Quantity"
          },
          "localId" : "193",
          "locator" : "49:5-57:7"
        },
        "localId" : "194",
        "locator" : "48:1-57:7",
        "name" : "ToQuantityIgnoringComparator",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "195",
            "locator" : "59:37-59:49",
            "name" : "{http://hl7.org/fhir}Quantity"
          },
          "name" : "quantity"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToInterval", "(", "quantity", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "FHIR", ".", "Quantity" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "195"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "):\n    " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "if " ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "quantity" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "196"
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ " is null" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "197"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ " then ", "null", " else\n        " ],
                        "r" : "198"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "case " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "quantity" ]
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "199"
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "." ]
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "comparator" ]
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "200"
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "200"
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "." ]
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "value" ]
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "201"
                              },
                              "globalScope" : true
                            } ],
                            "r" : "201"
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "\n            " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "when " ]
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "'<'" ]
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "202"
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ " then\n                " ]
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "Interval[\n                    ", "null", ",\n                    " ],
                                    "r" : "203"
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "ToQuantityIgnoringComparator", "(" ]
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "quantity" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "204"
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ ")" ]
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "205"
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "\n                )" ]
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "206"
                              },
                              "globalScope" : true
                            } ],
                            "r" : "207"
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "\n            " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "when " ]
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "'<='" ]
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "208"
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ " then\n                " ]
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "Interval[\n                    ", "null", ",\n                    " ],
                                    "r" : "209"
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "ToQuantityIgnoringComparator", "(" ]
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "quantity" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "210"
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ ")" ]
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "211"
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "\n                ]" ]
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "212"
                              },
                              "globalScope" : true
                            } ],
                            "r" : "213"
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "\n            " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "when " ]
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "'>='" ]
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "214"
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ " then\n                " ]
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "Interval[\n                    " ]
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "ToQuantityIgnoringComparator", "(" ]
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "quantity" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "215"
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ ")" ]
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "216"
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ ",\n                    ", "null", "\n                ]" ],
                                    "r" : "217"
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "218"
                              },
                              "globalScope" : true
                            } ],
                            "r" : "219"
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "\n            " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "when " ]
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "'>'" ]
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "220"
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ " then\n                " ]
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "Interval(\n                    " ]
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "ToQuantityIgnoringComparator", "(" ]
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "quantity" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "221"
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ ")" ]
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "222"
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ ",\n                    ", "null", "\n                ]" ],
                                    "r" : "223"
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "224"
                              },
                              "globalScope" : true
                            } ],
                            "r" : "225"
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "\n            else\n                " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "Interval[" ]
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "ToQuantity", "(" ]
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "quantity" ]
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "226"
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ ")" ]
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "227"
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ ", " ]
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "ToQuantity", "(" ]
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "quantity" ]
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "228"
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ ")" ]
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "229"
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "]" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "230"
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "\n        end" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "231"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "232"
                  },
                  "globalScope" : true
                } ],
                "r" : "232"
              },
              "globalScope" : true
            } ],
            "r" : "233"
          }
        } ],
        "expression" : {
          "type" : "If",
          "condition" : {
            "type" : "IsNull",
            "operand" : {
              "type" : "OperandRef",
              "localId" : "196",
              "locator" : "60:8-60:15",
              "name" : "quantity"
            },
            "localId" : "197",
            "locator" : "60:8-60:23"
          },
          "then" : {
            "type" : "As",
            "asTypeSpecifier" : {
              "type" : "IntervalTypeSpecifier",
              "pointType" : {
                "type" : "NamedTypeSpecifier",
                "name" : "{urn:hl7-org:elm-types:r1}Quantity"
              }
            },
            "operand" : {
              "type" : "Null",
              "localId" : "198",
              "locator" : "60:30-60:33"
            }
          },
          "else" : {
            "type" : "Case",
            "comparand" : {
              "type" : "Property",
              "source" : {
                "type" : "Property",
                "source" : {
                  "type" : "OperandRef",
                  "localId" : "199",
                  "locator" : "61:14-61:21",
                  "name" : "quantity"
                },
                "localId" : "200",
                "locator" : "61:14-61:32",
                "path" : "comparator"
              },
              "localId" : "201",
              "locator" : "61:14-61:38",
              "path" : "value"
            },
            "caseItem" : [ {
              "type" : "CaseItem",
              "when" : {
                "type" : "Literal",
                "localId" : "202",
                "locator" : "62:18-62:20",
                "valueType" : "{urn:hl7-org:elm-types:r1}String",
                "value" : "<"
              },
              "then" : {
                "type" : "Interval",
                "low" : {
                  "type" : "As",
                  "operand" : {
                    "type" : "Null",
                    "localId" : "203",
                    "locator" : "64:21-64:24"
                  },
                  "asType" : "{urn:hl7-org:elm-types:r1}Quantity"
                },
                "high" : {
                  "type" : "FunctionRef",
                  "operand" : [ {
                    "type" : "OperandRef",
                    "localId" : "204",
                    "locator" : "65:50-65:57",
                    "name" : "quantity"
                  } ],
                  "localId" : "205",
                  "locator" : "65:21-65:58",
                  "name" : "ToQuantityIgnoringComparator"
                },
                "localId" : "206",
                "locator" : "63:17-66:17",
                "lowClosed" : true
              },
              "localId" : "207",
              "locator" : "62:13-66:17"
            }, {
              "type" : "CaseItem",
              "when" : {
                "type" : "Literal",
                "localId" : "208",
                "locator" : "67:18-67:21",
                "valueType" : "{urn:hl7-org:elm-types:r1}String",
                "value" : "<="
              },
              "then" : {
                "type" : "Interval",
                "low" : {
                  "type" : "As",
                  "operand" : {
                    "type" : "Null",
                    "localId" : "209",
                    "locator" : "69:21-69:24"
                  },
                  "asType" : "{urn:hl7-org:elm-types:r1}Quantity"
                },
                "high" : {
                  "type" : "FunctionRef",
                  "operand" : [ {
                    "type" : "OperandRef",
                    "localId" : "210",
                    "locator" : "70:50-70:57",
                    "name" : "quantity"
                  } ],
                  "localId" : "211",
                  "locator" : "70:21-70:58",
                  "name" : "ToQuantityIgnoringComparator"
                },
                "localId" : "212",
                "locator" : "68:17-71:17",
                "lowClosed" : true,
                "highClosed" : true
              },
              "localId" : "213",
              "locator" : "67:13-71:17"
            }, {
              "type" : "CaseItem",
              "when" : {
                "type" : "Literal",
                "localId" : "214",
                "locator" : "72:18-72:21",
                "valueType" : "{urn:hl7-org:elm-types:r1}String",
                "value" : ">="
              },
              "then" : {
                "type" : "Interval",
                "low" : {
                  "type" : "FunctionRef",
                  "operand" : [ {
                    "type" : "OperandRef",
                    "localId" : "215",
                    "locator" : "74:50-74:57",
                    "name" : "quantity"
                  } ],
                  "localId" : "216",
                  "locator" : "74:21-74:58",
                  "name" : "ToQuantityIgnoringComparator"
                },
                "high" : {
                  "type" : "As",
                  "operand" : {
                    "type" : "Null",
                    "localId" : "217",
                    "locator" : "75:21-75:24"
                  },
                  "asType" : "{urn:hl7-org:elm-types:r1}Quantity"
                },
                "localId" : "218",
                "locator" : "73:17-76:17",
                "lowClosed" : true,
                "highClosed" : true
              },
              "localId" : "219",
              "locator" : "72:13-76:17"
            }, {
              "type" : "CaseItem",
              "when" : {
                "type" : "Literal",
                "localId" : "220",
                "locator" : "77:18-77:20",
                "valueType" : "{urn:hl7-org:elm-types:r1}String",
                "value" : ">"
              },
              "then" : {
                "type" : "Interval",
                "low" : {
                  "type" : "FunctionRef",
                  "operand" : [ {
                    "type" : "OperandRef",
                    "localId" : "221",
                    "locator" : "79:50-79:57",
                    "name" : "quantity"
                  } ],
                  "localId" : "222",
                  "locator" : "79:21-79:58",
                  "name" : "ToQuantityIgnoringComparator"
                },
                "high" : {
                  "type" : "As",
                  "operand" : {
                    "type" : "Null",
                    "localId" : "223",
                    "locator" : "80:21-80:24"
                  },
                  "asType" : "{urn:hl7-org:elm-types:r1}Quantity"
                },
                "localId" : "224",
                "locator" : "78:17-81:17",
                "highClosed" : true
              },
              "localId" : "225",
              "locator" : "77:13-81:17"
            } ],
            "else" : {
              "type" : "Interval",
              "low" : {
                "type" : "FunctionRef",
                "operand" : [ {
                  "type" : "OperandRef",
                  "localId" : "226",
                  "locator" : "83:37-83:44",
                  "name" : "quantity"
                } ],
                "localId" : "227",
                "locator" : "83:26-83:45",
                "name" : "ToQuantity"
              },
              "high" : {
                "type" : "FunctionRef",
                "operand" : [ {
                  "type" : "OperandRef",
                  "localId" : "228",
                  "locator" : "83:59-83:66",
                  "name" : "quantity"
                } ],
                "localId" : "229",
                "locator" : "83:48-83:67",
                "name" : "ToQuantity"
              },
              "localId" : "230",
              "locator" : "83:17-83:68",
              "lowClosed" : true,
              "highClosed" : true
            },
            "localId" : "231",
            "locator" : "61:9-84:11"
          },
          "localId" : "232",
          "locator" : "60:5-84:11"
        },
        "localId" : "233",
        "locator" : "59:1-84:11",
        "name" : "ToInterval",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "234",
            "locator" : "86:31-86:40",
            "name" : "{http://hl7.org/fhir}Ratio"
          },
          "name" : "ratio"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToRatio", "(", "ratio", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "FHIR", ".", "Ratio" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "234"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "):\n    " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "if " ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "ratio" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "235"
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ " is null" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "236"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ " then\n        ", "null", "\n    else\n        " ],
                        "r" : "237"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "System", ".", "Ratio", " { " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "numerator", ": " ]
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "ToQuantity", "(" ]
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "ratio" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "238"
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "." ]
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "numerator" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "239"
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "239"
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ ")" ]
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "240"
                              },
                              "globalScope" : true
                            } ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ ", " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "denominator", ": " ]
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "ToQuantity", "(" ]
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "ratio" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "241"
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "." ]
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "denominator" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "242"
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "242"
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ ")" ]
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "243"
                              },
                              "globalScope" : true
                            } ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ " }" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "244"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "245"
                  },
                  "globalScope" : true
                } ],
                "r" : "245"
              },
              "globalScope" : true
            } ],
            "r" : "246"
          }
        } ],
        "expression" : {
          "type" : "If",
          "condition" : {
            "type" : "IsNull",
            "operand" : {
              "type" : "OperandRef",
              "localId" : "235",
              "locator" : "87:8-87:12",
              "name" : "ratio"
            },
            "localId" : "236",
            "locator" : "87:8-87:20"
          },
          "then" : {
            "type" : "As",
            "operand" : {
              "type" : "Null",
              "localId" : "237",
              "locator" : "88:9-88:12"
            },
            "asType" : "{urn:hl7-org:elm-types:r1}Ratio"
          },
          "else" : {
            "type" : "Instance",
            "element" : [ {
              "type" : "InstanceElement",
              "value" : {
                "type" : "FunctionRef",
                "operand" : [ {
                  "type" : "Property",
                  "source" : {
                    "type" : "OperandRef",
                    "localId" : "238",
                    "locator" : "90:46-90:50",
                    "name" : "ratio"
                  },
                  "localId" : "239",
                  "locator" : "90:46-90:60",
                  "path" : "numerator"
                } ],
                "localId" : "240",
                "locator" : "90:35-90:61",
                "name" : "ToQuantity"
              },
              "name" : "numerator"
            }, {
              "type" : "InstanceElement",
              "value" : {
                "type" : "FunctionRef",
                "operand" : [ {
                  "type" : "Property",
                  "source" : {
                    "type" : "OperandRef",
                    "localId" : "241",
                    "locator" : "90:88-90:92",
                    "name" : "ratio"
                  },
                  "localId" : "242",
                  "locator" : "90:88-90:104",
                  "path" : "denominator"
                } ],
                "localId" : "243",
                "locator" : "90:77-90:105",
                "name" : "ToQuantity"
              },
              "name" : "denominator"
            } ],
            "localId" : "244",
            "locator" : "90:9-90:107",
            "classType" : "{urn:hl7-org:elm-types:r1}Ratio"
          },
          "localId" : "245",
          "locator" : "87:5-90:107"
        },
        "localId" : "246",
        "locator" : "86:1-90:107",
        "name" : "ToRatio",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "247",
            "locator" : "92:34-92:43",
            "name" : "{http://hl7.org/fhir}Range"
          },
          "name" : "range"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToInterval", "(", "range", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "FHIR", ".", "Range" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "247"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "):\n    " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "if " ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "range" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "248"
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ " is null" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "249"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ " then\n        ", "null", "\n    else\n        " ],
                        "r" : "250"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "Interval[" ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "ToQuantity", "(" ]
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "range" ]
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "251"
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "." ]
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "low" ]
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "252"
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "252"
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ ")" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "253"
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ ", " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "ToQuantity", "(" ]
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "range" ]
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "254"
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "." ]
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "high" ]
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "255"
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "255"
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ ")" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "256"
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "]" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "257"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "258"
                  },
                  "globalScope" : true
                } ],
                "r" : "258"
              },
              "globalScope" : true
            } ],
            "r" : "259"
          }
        } ],
        "expression" : {
          "type" : "If",
          "condition" : {
            "type" : "IsNull",
            "operand" : {
              "type" : "OperandRef",
              "localId" : "248",
              "locator" : "93:8-93:12",
              "name" : "range"
            },
            "localId" : "249",
            "locator" : "93:8-93:20"
          },
          "then" : {
            "type" : "As",
            "asTypeSpecifier" : {
              "type" : "IntervalTypeSpecifier",
              "pointType" : {
                "type" : "NamedTypeSpecifier",
                "name" : "{urn:hl7-org:elm-types:r1}Quantity"
              }
            },
            "operand" : {
              "type" : "Null",
              "localId" : "250",
              "locator" : "94:9-94:12"
            }
          },
          "else" : {
            "type" : "Interval",
            "low" : {
              "type" : "FunctionRef",
              "operand" : [ {
                "type" : "Property",
                "source" : {
                  "type" : "OperandRef",
                  "localId" : "251",
                  "locator" : "96:29-96:33",
                  "name" : "range"
                },
                "localId" : "252",
                "locator" : "96:29-96:37",
                "path" : "low"
              } ],
              "localId" : "253",
              "locator" : "96:18-96:38",
              "name" : "ToQuantity"
            },
            "high" : {
              "type" : "FunctionRef",
              "operand" : [ {
                "type" : "Property",
                "source" : {
                  "type" : "OperandRef",
                  "localId" : "254",
                  "locator" : "96:52-96:56",
                  "name" : "range"
                },
                "localId" : "255",
                "locator" : "96:52-96:61",
                "path" : "high"
              } ],
              "localId" : "256",
              "locator" : "96:41-96:62",
              "name" : "ToQuantity"
            },
            "localId" : "257",
            "locator" : "96:9-96:63",
            "lowClosed" : true,
            "highClosed" : true
          },
          "localId" : "258",
          "locator" : "93:5-96:63"
        },
        "localId" : "259",
        "locator" : "92:1-96:63",
        "name" : "ToInterval",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "260",
            "locator" : "98:31-98:41",
            "name" : "{http://hl7.org/fhir}Coding"
          },
          "name" : "coding"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToCode", "(", "coding", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "FHIR", ".", "Coding" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "260"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "):\n    " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "if " ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "coding" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "261"
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ " is null" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "262"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ " then\n        ", "null", "\n    else\n        " ],
                        "r" : "263"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "System", ".", "Code", " {\n          " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "code", ": " ]
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "coding" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "264"
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "." ]
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "code" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "265"
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "265"
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "." ]
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "value" ]
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "266"
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "266"
                              },
                              "globalScope" : true
                            } ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ ",\n          " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "system", ": " ]
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "coding" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "267"
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "." ]
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "system" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "268"
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "268"
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "." ]
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "value" ]
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "269"
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "269"
                              },
                              "globalScope" : true
                            } ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ ",\n          " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "version", ": " ]
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "coding" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "270"
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "." ]
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "version" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "271"
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "271"
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "." ]
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "value" ]
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "272"
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "272"
                              },
                              "globalScope" : true
                            } ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ ",\n          " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "display", ": " ]
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "coding" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "273"
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "." ]
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "display" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "274"
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "274"
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "." ]
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "value" ]
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "275"
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "275"
                              },
                              "globalScope" : true
                            } ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "\n        }" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "276"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "277"
                  },
                  "globalScope" : true
                } ],
                "r" : "277"
              },
              "globalScope" : true
            } ],
            "r" : "278"
          }
        } ],
        "expression" : {
          "type" : "If",
          "condition" : {
            "type" : "IsNull",
            "operand" : {
              "type" : "OperandRef",
              "localId" : "261",
              "locator" : "99:8-99:13",
              "name" : "coding"
            },
            "localId" : "262",
            "locator" : "99:8-99:21"
          },
          "then" : {
            "type" : "As",
            "operand" : {
              "type" : "Null",
              "localId" : "263",
              "locator" : "100:9-100:12"
            },
            "asType" : "{urn:hl7-org:elm-types:r1}Code"
          },
          "else" : {
            "type" : "Instance",
            "element" : [ {
              "type" : "InstanceElement",
              "value" : {
                "type" : "Property",
                "source" : {
                  "type" : "Property",
                  "source" : {
                    "type" : "OperandRef",
                    "localId" : "264",
                    "locator" : "103:17-103:22",
                    "name" : "coding"
                  },
                  "localId" : "265",
                  "locator" : "103:17-103:27",
                  "path" : "code"
                },
                "localId" : "266",
                "locator" : "103:17-103:33",
                "path" : "value"
              },
              "name" : "code"
            }, {
              "type" : "InstanceElement",
              "value" : {
                "type" : "Property",
                "source" : {
                  "type" : "Property",
                  "source" : {
                    "type" : "OperandRef",
                    "localId" : "267",
                    "locator" : "104:19-104:24",
                    "name" : "coding"
                  },
                  "localId" : "268",
                  "locator" : "104:19-104:31",
                  "path" : "system"
                },
                "localId" : "269",
                "locator" : "104:19-104:37",
                "path" : "value"
              },
              "name" : "system"
            }, {
              "type" : "InstanceElement",
              "value" : {
                "type" : "Property",
                "source" : {
                  "type" : "Property",
                  "source" : {
                    "type" : "OperandRef",
                    "localId" : "270",
                    "locator" : "105:20-105:25",
                    "name" : "coding"
                  },
                  "localId" : "271",
                  "locator" : "105:20-105:33",
                  "path" : "version"
                },
                "localId" : "272",
                "locator" : "105:20-105:39",
                "path" : "value"
              },
              "name" : "version"
            }, {
              "type" : "InstanceElement",
              "value" : {
                "type" : "Property",
                "source" : {
                  "type" : "Property",
                  "source" : {
                    "type" : "OperandRef",
                    "localId" : "273",
                    "locator" : "106:20-106:25",
                    "name" : "coding"
                  },
                  "localId" : "274",
                  "locator" : "106:20-106:33",
                  "path" : "display"
                },
                "localId" : "275",
                "locator" : "106:20-106:39",
                "path" : "value"
              },
              "name" : "display"
            } ],
            "localId" : "276",
            "locator" : "102:9-107:9",
            "classType" : "{urn:hl7-org:elm-types:r1}Code"
          },
          "localId" : "277",
          "locator" : "99:5-107:9"
        },
        "localId" : "278",
        "locator" : "98:1-107:9",
        "name" : "ToCode",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "279",
            "locator" : "109:35-109:54",
            "name" : "{http://hl7.org/fhir}CodeableConcept"
          },
          "name" : "concept"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToConcept", "(", "concept", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "FHIR", ".", "CodeableConcept" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "279"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "):\n    " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "if " ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "concept" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "280"
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ " is null" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "281"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ " then\n        ", "null", "\n    else\n        " ],
                        "r" : "282"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "System", ".", "Concept", " {\n            " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "codes", ": " ]
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ {
                                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                                  "value" : {
                                                    "s" : [ "concept", ".", "coding" ]
                                                  },
                                                  "globalScope" : true
                                                } ]
                                              },
                                              "globalScope" : true
                                            } ],
                                            "r" : "283"
                                          },
                                          "globalScope" : true
                                        }, {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ " ", "C" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "284"
                                      },
                                      "globalScope" : true
                                    } ]
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ " " ]
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "return " ]
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "ToCode", "(" ]
                                          },
                                          "globalScope" : true
                                        }, {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ {
                                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                              "value" : {
                                                "s" : [ "C" ]
                                              },
                                              "globalScope" : true
                                            } ],
                                            "r" : "285"
                                          },
                                          "globalScope" : true
                                        }, {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ ")" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "286"
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "287"
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "288"
                              },
                              "globalScope" : true
                            } ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ ",\n            " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "display", ": " ]
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "concept" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "289"
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "." ]
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "text" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "290"
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "290"
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "." ]
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "value" ]
                                      },
                                      "globalScope" : true
                                    } ],
                                    "r" : "291"
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "291"
                              },
                              "globalScope" : true
                            } ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "\n        }" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "292"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "293"
                  },
                  "globalScope" : true
                } ],
                "r" : "293"
              },
              "globalScope" : true
            } ],
            "r" : "294"
          }
        } ],
        "expression" : {
          "type" : "If",
          "condition" : {
            "type" : "IsNull",
            "operand" : {
              "type" : "OperandRef",
              "localId" : "280",
              "locator" : "110:8-110:14",
              "name" : "concept"
            },
            "localId" : "281",
            "locator" : "110:8-110:22"
          },
          "then" : {
            "type" : "As",
            "operand" : {
              "type" : "Null",
              "localId" : "282",
              "locator" : "111:9-111:12"
            },
            "asType" : "{urn:hl7-org:elm-types:r1}Concept"
          },
          "else" : {
            "type" : "Instance",
            "element" : [ {
              "type" : "InstanceElement",
              "value" : {
                "type" : "Query",
                "source" : [ {
                  "type" : "AliasedQuerySource",
                  "expression" : {
                    "type" : "Property",
                    "source" : {
                      "type" : "OperandRef",
                      "name" : "concept"
                    },
                    "localId" : "283",
                    "locator" : "114:20-114:33",
                    "path" : "coding"
                  },
                  "localId" : "284",
                  "locator" : "114:20-114:35",
                  "alias" : "C"
                } ],
                "return" : {
                  "type" : "ReturnClause",
                  "expression" : {
                    "type" : "FunctionRef",
                    "operand" : [ {
                      "type" : "AliasRef",
                      "localId" : "285",
                      "locator" : "114:51",
                      "name" : "C"
                    } ],
                    "localId" : "286",
                    "locator" : "114:44-114:52",
                    "name" : "ToCode"
                  },
                  "localId" : "287",
                  "locator" : "114:37-114:52"
                },
                "localId" : "288",
                "locator" : "114:20-114:52"
              },
              "name" : "codes"
            }, {
              "type" : "InstanceElement",
              "value" : {
                "type" : "Property",
                "source" : {
                  "type" : "Property",
                  "source" : {
                    "type" : "OperandRef",
                    "localId" : "289",
                    "locator" : "115:22-115:28",
                    "name" : "concept"
                  },
                  "localId" : "290",
                  "locator" : "115:22-115:33",
                  "path" : "text"
                },
                "localId" : "291",
                "locator" : "115:22-115:39",
                "path" : "value"
              },
              "name" : "display"
            } ],
            "localId" : "292",
            "locator" : "113:9-116:9",
            "classType" : "{urn:hl7-org:elm-types:r1}Concept"
          },
          "localId" : "293",
          "locator" : "110:5-116:9"
        },
        "localId" : "294",
        "locator" : "109:1-116:9",
        "name" : "ToConcept",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "295",
            "locator" : "118:37-118:42",
            "name" : "{urn:hl7-org:elm-types:r1}String"
          },
          "name" : "reference"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "reference", "(", "reference", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "String" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "295"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "):\n    " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "if " ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "reference" ]
                              },
                              "globalScope" : true
                            } ],
                            "r" : "296"
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ " is null" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "297"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ " then\n        ", "null", "\n    else\n        " ],
                        "r" : "298"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "Reference", " { " ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ "reference", ": " ]
                              },
                              "globalScope" : true
                            }, {
                              "name" : "{urn:hl7-org:cql-annotations:r1}s",
                              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                              "value" : {
                                "s" : [ {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ "string", " { " ]
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ "value", ": " ]
                                      },
                                      "globalScope" : true
                                    }, {
                                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                      "value" : {
                                        "s" : [ {
                                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                          "value" : {
                                            "s" : [ "reference" ]
                                          },
                                          "globalScope" : true
                                        } ],
                                        "r" : "299"
                                      },
                                      "globalScope" : true
                                    } ]
                                  },
                                  "globalScope" : true
                                }, {
                                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                                  "value" : {
                                    "s" : [ " }" ]
                                  },
                                  "globalScope" : true
                                } ],
                                "r" : "300"
                              },
                              "globalScope" : true
                            } ]
                          },
                          "globalScope" : true
                        }, {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ " }" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "301"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "302"
                  },
                  "globalScope" : true
                } ],
                "r" : "302"
              },
              "globalScope" : true
            } ],
            "r" : "303"
          }
        } ],
        "expression" : {
          "type" : "If",
          "condition" : {
            "type" : "IsNull",
            "operand" : {
              "type" : "OperandRef",
              "localId" : "296",
              "locator" : "119:8-119:16",
              "name" : "reference"
            },
            "localId" : "297",
            "locator" : "119:8-119:24"
          },
          "then" : {
            "type" : "As",
            "operand" : {
              "type" : "Null",
              "localId" : "298",
              "locator" : "120:9-120:12"
            },
            "asType" : "{http://hl7.org/fhir}Reference"
          },
          "else" : {
            "type" : "Instance",
            "element" : [ {
              "type" : "InstanceElement",
              "value" : {
                "type" : "Instance",
                "element" : [ {
                  "type" : "InstanceElement",
                  "value" : {
                    "type" : "OperandRef",
                    "localId" : "299",
                    "locator" : "122:48-122:56",
                    "name" : "reference"
                  },
                  "name" : "value"
                } ],
                "localId" : "300",
                "locator" : "122:32-122:58",
                "classType" : "{http://hl7.org/fhir}string"
              },
              "name" : "reference"
            } ],
            "localId" : "301",
            "locator" : "122:9-122:60",
            "classType" : "{http://hl7.org/fhir}Reference"
          },
          "localId" : "302",
          "locator" : "119:5-122:60"
        },
        "localId" : "303",
        "locator" : "118:1-122:60",
        "name" : "reference",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "304",
            "locator" : "124:35-124:40",
            "name" : "{urn:hl7-org:elm-types:r1}String"
          },
          "name" : "reference"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "resolve", "(", "reference", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "String" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "304"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ") returns " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Resource" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "305"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ": external" ]
              },
              "globalScope" : true
            } ],
            "r" : "306"
          }
        } ],
        "localId" : "306",
        "locator" : "124:1-124:68",
        "name" : "resolve",
        "context" : "Patient",
        "accessLevel" : "Public",
        "external" : true
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "307",
            "locator" : "125:35-125:43",
            "name" : "{http://hl7.org/fhir}Reference"
          },
          "name" : "reference"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "resolve", "(", "reference", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Reference" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "307"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ") returns " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Resource" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "308"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ": external" ]
              },
              "globalScope" : true
            } ],
            "r" : "309"
          }
        } ],
        "localId" : "309",
        "locator" : "125:1-125:71",
        "name" : "resolve",
        "context" : "Patient",
        "accessLevel" : "Public",
        "external" : true
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "310",
            "locator" : "126:36-126:43",
            "name" : "{http://hl7.org/fhir}Resource"
          },
          "name" : "resource"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "reference", "(", "resource", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Resource" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "310"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ") returns " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Reference" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "311"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ": external" ]
              },
              "globalScope" : true
            } ],
            "r" : "312"
          }
        } ],
        "localId" : "312",
        "locator" : "126:1-126:72",
        "name" : "reference",
        "context" : "Patient",
        "accessLevel" : "Public",
        "external" : true
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "313",
            "locator" : "127:35-127:41",
            "name" : "{http://hl7.org/fhir}Element"
          },
          "name" : "element"
        }, {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "314",
            "locator" : "127:48-127:53",
            "name" : "{urn:hl7-org:elm-types:r1}String"
          },
          "name" : "url"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "extension", "(", "element", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Element" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "313"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ", ", "url", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "String" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "314"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ") returns " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "List<" ]
                  },
                  "globalScope" : true
                }, {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "Element" ]
                      },
                      "globalScope" : true
                    } ],
                    "r" : "315"
                  },
                  "globalScope" : true
                }, {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ ">" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "316"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ": external" ]
              },
              "globalScope" : true
            } ],
            "r" : "317"
          }
        } ],
        "localId" : "317",
        "locator" : "127:1-127:86",
        "name" : "extension",
        "context" : "Patient",
        "accessLevel" : "Public",
        "external" : true
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "318",
            "locator" : "128:36-128:43",
            "name" : "{http://hl7.org/fhir}Resource"
          },
          "name" : "resource"
        }, {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "319",
            "locator" : "128:50-128:55",
            "name" : "{urn:hl7-org:elm-types:r1}String"
          },
          "name" : "url"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "extension", "(", "resource", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Resource" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "318"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ", ", "url", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "String" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "319"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ") returns " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "List<" ]
                  },
                  "globalScope" : true
                }, {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "Element" ]
                      },
                      "globalScope" : true
                    } ],
                    "r" : "320"
                  },
                  "globalScope" : true
                }, {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ ">" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "321"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ": external" ]
              },
              "globalScope" : true
            } ],
            "r" : "322"
          }
        } ],
        "localId" : "322",
        "locator" : "128:1-128:88",
        "name" : "extension",
        "context" : "Patient",
        "accessLevel" : "Public",
        "external" : true
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "323",
            "locator" : "129:34-129:40",
            "name" : "{http://hl7.org/fhir}Element"
          },
          "name" : "element"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "hasValue", "(", "element", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Element" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "323"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ") returns " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Boolean" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "324"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ": external" ]
              },
              "globalScope" : true
            } ],
            "r" : "325"
          }
        } ],
        "localId" : "325",
        "locator" : "129:1-129:67",
        "name" : "hasValue",
        "context" : "Patient",
        "accessLevel" : "Public",
        "external" : true
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "326",
            "locator" : "130:34-130:40",
            "name" : "{http://hl7.org/fhir}Element"
          },
          "name" : "element"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "getValue", "(", "element", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Element" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "326"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ") returns " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Any" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "327"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ": external" ]
              },
              "globalScope" : true
            } ],
            "r" : "328"
          }
        } ],
        "localId" : "328",
        "locator" : "130:1-130:63",
        "name" : "getValue",
        "context" : "Patient",
        "accessLevel" : "Public",
        "external" : true
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "329",
            "locator" : "131:35-131:40",
            "name" : "{urn:hl7-org:elm-types:r1}String"
          },
          "name" : "identifier"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ofType", "(", "identifier", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "String" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "329"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ") returns " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "List<" ]
                  },
                  "globalScope" : true
                }, {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "Any" ]
                      },
                      "globalScope" : true
                    } ],
                    "r" : "330"
                  },
                  "globalScope" : true
                }, {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ ">" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "331"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ": external" ]
              },
              "globalScope" : true
            } ],
            "r" : "332"
          }
        } ],
        "localId" : "332",
        "locator" : "131:1-131:69",
        "name" : "ofType",
        "context" : "Patient",
        "accessLevel" : "Public",
        "external" : true
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "333",
            "locator" : "132:31-132:36",
            "name" : "{urn:hl7-org:elm-types:r1}String"
          },
          "name" : "identifier"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "is", "(", "identifier", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "String" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "333"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ") returns " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Boolean" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "334"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ": external" ]
              },
              "globalScope" : true
            } ],
            "r" : "335"
          }
        } ],
        "localId" : "335",
        "locator" : "132:1-132:63",
        "name" : "is",
        "context" : "Patient",
        "accessLevel" : "Public",
        "external" : true
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "336",
            "locator" : "133:31-133:36",
            "name" : "{urn:hl7-org:elm-types:r1}String"
          },
          "name" : "identifier"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "as", "(", "identifier", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "String" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "336"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ") returns " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Any" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "337"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ": external" ]
              },
              "globalScope" : true
            } ],
            "r" : "338"
          }
        } ],
        "localId" : "338",
        "locator" : "133:1-133:59",
        "name" : "as",
        "context" : "Patient",
        "accessLevel" : "Public",
        "external" : true
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "339",
            "locator" : "134:43-134:49",
            "name" : "{http://hl7.org/fhir}Element"
          },
          "name" : "element"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "elementDefinition", "(", "element", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Element" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "339"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ") returns " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ElementDefinition" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "340"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ": external" ]
              },
              "globalScope" : true
            } ],
            "r" : "341"
          }
        } ],
        "localId" : "341",
        "locator" : "134:1-134:86",
        "name" : "elementDefinition",
        "context" : "Patient",
        "accessLevel" : "Public",
        "external" : true
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "342",
            "locator" : "135:31-135:37",
            "name" : "{http://hl7.org/fhir}Element"
          },
          "name" : "element"
        }, {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "343",
            "locator" : "135:44-135:49",
            "name" : "{urn:hl7-org:elm-types:r1}String"
          },
          "name" : "url"
        }, {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "344",
            "locator" : "135:57-135:62",
            "name" : "{urn:hl7-org:elm-types:r1}String"
          },
          "name" : "name"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "slice", "(", "element", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Element" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "342"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ", ", "url", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "String" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "343"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ", ", "name", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "String" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "344"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ") returns " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "List<" ]
                  },
                  "globalScope" : true
                }, {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "Element" ]
                      },
                      "globalScope" : true
                    } ],
                    "r" : "345"
                  },
                  "globalScope" : true
                }, {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ ">" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "346"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ": external" ]
              },
              "globalScope" : true
            } ],
            "r" : "347"
          }
        } ],
        "localId" : "347",
        "locator" : "135:1-135:95",
        "name" : "slice",
        "context" : "Patient",
        "accessLevel" : "Public",
        "external" : true
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "348",
            "locator" : "136:41-136:48",
            "name" : "{http://hl7.org/fhir}Resource"
          },
          "name" : "resource"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "checkModifiers", "(", "resource", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Resource" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "348"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ") returns " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Resource" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "349"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ": external" ]
              },
              "globalScope" : true
            } ],
            "r" : "350"
          }
        } ],
        "localId" : "350",
        "locator" : "136:1-136:76",
        "name" : "checkModifiers",
        "context" : "Patient",
        "accessLevel" : "Public",
        "external" : true
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "351",
            "locator" : "137:41-137:48",
            "name" : "{http://hl7.org/fhir}Resource"
          },
          "name" : "resource"
        }, {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "352",
            "locator" : "137:60-137:65",
            "name" : "{urn:hl7-org:elm-types:r1}String"
          },
          "name" : "modifier"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "checkModifiers", "(", "resource", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Resource" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "351"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ", ", "modifier", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "String" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "352"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ") returns " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Resource" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "353"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ": external" ]
              },
              "globalScope" : true
            } ],
            "r" : "354"
          }
        } ],
        "localId" : "354",
        "locator" : "137:1-137:93",
        "name" : "checkModifiers",
        "context" : "Patient",
        "accessLevel" : "Public",
        "external" : true
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "355",
            "locator" : "138:40-138:46",
            "name" : "{http://hl7.org/fhir}Element"
          },
          "name" : "element"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "checkModifiers", "(", "element", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Element" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "355"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ") returns " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Element" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "356"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ": external" ]
              },
              "globalScope" : true
            } ],
            "r" : "357"
          }
        } ],
        "localId" : "357",
        "locator" : "138:1-138:73",
        "name" : "checkModifiers",
        "context" : "Patient",
        "accessLevel" : "Public",
        "external" : true
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "358",
            "locator" : "139:40-139:46",
            "name" : "{http://hl7.org/fhir}Element"
          },
          "name" : "element"
        }, {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "359",
            "locator" : "139:58-139:63",
            "name" : "{urn:hl7-org:elm-types:r1}String"
          },
          "name" : "modifier"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "checkModifiers", "(", "element", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Element" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "358"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ", ", "modifier", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "String" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "359"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ") returns " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Element" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "360"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ": external" ]
              },
              "globalScope" : true
            } ],
            "r" : "361"
          }
        } ],
        "localId" : "361",
        "locator" : "139:1-139:90",
        "name" : "checkModifiers",
        "context" : "Patient",
        "accessLevel" : "Public",
        "external" : true
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "362",
            "locator" : "140:37-140:44",
            "name" : "{http://hl7.org/fhir}Resource"
          },
          "name" : "resource"
        }, {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "363",
            "locator" : "140:57-140:62",
            "name" : "{urn:hl7-org:elm-types:r1}String"
          },
          "name" : "structure"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "conformsTo", "(", "resource", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Resource" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "362"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ", ", "structure", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "String" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "363"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ") returns " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Boolean" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "364"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ": external" ]
              },
              "globalScope" : true
            } ],
            "r" : "365"
          }
        } ],
        "localId" : "365",
        "locator" : "140:1-140:89",
        "name" : "conformsTo",
        "context" : "Patient",
        "accessLevel" : "Public",
        "external" : true
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "366",
            "locator" : "141:31-141:34",
            "name" : "{http://hl7.org/fhir}code"
          },
          "name" : "code"
        }, {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "367",
            "locator" : "141:46-141:51",
            "name" : "{urn:hl7-org:elm-types:r1}String"
          },
          "name" : "valueSet"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "memberOf", "(", "code", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "code" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "366"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ", ", "valueSet", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "String" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "367"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ") returns " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Boolean" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "368"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ": external" ]
              },
              "globalScope" : true
            } ],
            "r" : "369"
          }
        } ],
        "localId" : "369",
        "locator" : "141:1-141:78",
        "name" : "memberOf",
        "context" : "Patient",
        "accessLevel" : "Public",
        "external" : true
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "370",
            "locator" : "142:33-142:38",
            "name" : "{http://hl7.org/fhir}Coding"
          },
          "name" : "coding"
        }, {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "371",
            "locator" : "142:50-142:55",
            "name" : "{urn:hl7-org:elm-types:r1}String"
          },
          "name" : "valueSet"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "memberOf", "(", "coding", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Coding" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "370"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ", ", "valueSet", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "String" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "371"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ") returns " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Boolean" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "372"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ": external" ]
              },
              "globalScope" : true
            } ],
            "r" : "373"
          }
        } ],
        "localId" : "373",
        "locator" : "142:1-142:82",
        "name" : "memberOf",
        "context" : "Patient",
        "accessLevel" : "Public",
        "external" : true
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "374",
            "locator" : "143:34-143:48",
            "name" : "{http://hl7.org/fhir}CodeableConcept"
          },
          "name" : "concept"
        }, {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "375",
            "locator" : "143:60-143:65",
            "name" : "{urn:hl7-org:elm-types:r1}String"
          },
          "name" : "valueSet"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "memberOf", "(", "concept", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "CodeableConcept" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "374"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ", ", "valueSet", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "String" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "375"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ") returns " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Boolean" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "376"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ": external" ]
              },
              "globalScope" : true
            } ],
            "r" : "377"
          }
        } ],
        "localId" : "377",
        "locator" : "143:1-143:92",
        "name" : "memberOf",
        "context" : "Patient",
        "accessLevel" : "Public",
        "external" : true
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "378",
            "locator" : "144:33-144:38",
            "name" : "{http://hl7.org/fhir}Coding"
          },
          "name" : "coding"
        }, {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "379",
            "locator" : "144:56-144:61",
            "name" : "{http://hl7.org/fhir}Coding"
          },
          "name" : "subsumedCoding"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "subsumes", "(", "coding", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Coding" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "378"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ", ", "subsumedCoding", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Coding" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "379"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ") returns " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Boolean" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "380"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ": external" ]
              },
              "globalScope" : true
            } ],
            "r" : "381"
          }
        } ],
        "localId" : "381",
        "locator" : "144:1-144:88",
        "name" : "subsumes",
        "context" : "Patient",
        "accessLevel" : "Public",
        "external" : true
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "382",
            "locator" : "145:34-145:48",
            "name" : "{http://hl7.org/fhir}CodeableConcept"
          },
          "name" : "concept"
        }, {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "383",
            "locator" : "145:67-145:81",
            "name" : "{http://hl7.org/fhir}CodeableConcept"
          },
          "name" : "subsumedConcept"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "subsumes", "(", "concept", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "CodeableConcept" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "382"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ", ", "subsumedConcept", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "CodeableConcept" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "383"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ") returns " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Boolean" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "384"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ": external" ]
              },
              "globalScope" : true
            } ],
            "r" : "385"
          }
        } ],
        "localId" : "385",
        "locator" : "145:1-145:108",
        "name" : "subsumes",
        "context" : "Patient",
        "accessLevel" : "Public",
        "external" : true
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "386",
            "locator" : "146:35-146:40",
            "name" : "{http://hl7.org/fhir}Coding"
          },
          "name" : "coding"
        }, {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "387",
            "locator" : "146:59-146:64",
            "name" : "{http://hl7.org/fhir}Coding"
          },
          "name" : "subsumingCoding"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "subsumedBy", "(", "coding", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Coding" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "386"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ", ", "subsumingCoding", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Coding" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "387"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ") returns " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Boolean" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "388"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ": external" ]
              },
              "globalScope" : true
            } ],
            "r" : "389"
          }
        } ],
        "localId" : "389",
        "locator" : "146:1-146:91",
        "name" : "subsumedBy",
        "context" : "Patient",
        "accessLevel" : "Public",
        "external" : true
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "390",
            "locator" : "147:36-147:50",
            "name" : "{http://hl7.org/fhir}CodeableConcept"
          },
          "name" : "concept"
        }, {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "391",
            "locator" : "147:70-147:84",
            "name" : "{http://hl7.org/fhir}CodeableConcept"
          },
          "name" : "subsumingConcept"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "subsumedBy", "(", "concept", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "CodeableConcept" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "390"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ", ", "subsumingConcept", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "CodeableConcept" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "391"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ") returns " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Boolean" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "392"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ": external" ]
              },
              "globalScope" : true
            } ],
            "r" : "393"
          }
        } ],
        "localId" : "393",
        "locator" : "147:1-147:111",
        "name" : "subsumedBy",
        "context" : "Patient",
        "accessLevel" : "Public",
        "external" : true
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "394",
            "locator" : "148:36-148:42",
            "name" : "{http://hl7.org/fhir}Element"
          },
          "name" : "element"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "htmlChecks", "(", "element", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Element" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "394"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ") returns " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Boolean" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "395"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ ": external" ]
              },
              "globalScope" : true
            } ],
            "r" : "396"
          }
        } ],
        "localId" : "396",
        "locator" : "148:1-148:69",
        "name" : "htmlChecks",
        "context" : "Patient",
        "accessLevel" : "Public",
        "external" : true
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "397",
            "locator" : "150:32-150:44",
            "name" : "{http://hl7.org/fhir}AccountStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "AccountStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "397"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "398"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "399"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "399"
                  },
                  "globalScope" : true
                } ],
                "r" : "399"
              },
              "globalScope" : true
            } ],
            "r" : "400"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "398",
            "locator" : "150:48-150:52",
            "name" : "value"
          },
          "localId" : "399",
          "locator" : "150:48-150:58",
          "path" : "value"
        },
        "localId" : "400",
        "locator" : "150:1-150:58",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "401",
            "locator" : "151:32-151:56",
            "name" : "{http://hl7.org/fhir}ActionCardinalityBehavior"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ActionCardinalityBehavior" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "401"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "402"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "403"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "403"
                  },
                  "globalScope" : true
                } ],
                "r" : "403"
              },
              "globalScope" : true
            } ],
            "r" : "404"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "402",
            "locator" : "151:60-151:64",
            "name" : "value"
          },
          "localId" : "403",
          "locator" : "151:60-151:70",
          "path" : "value"
        },
        "localId" : "404",
        "locator" : "151:1-151:70",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "405",
            "locator" : "152:32-152:50",
            "name" : "{http://hl7.org/fhir}ActionConditionKind"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ActionConditionKind" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "405"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "406"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "407"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "407"
                  },
                  "globalScope" : true
                } ],
                "r" : "407"
              },
              "globalScope" : true
            } ],
            "r" : "408"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "406",
            "locator" : "152:54-152:58",
            "name" : "value"
          },
          "localId" : "407",
          "locator" : "152:54-152:64",
          "path" : "value"
        },
        "localId" : "408",
        "locator" : "152:1-152:64",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "409",
            "locator" : "153:32-153:53",
            "name" : "{http://hl7.org/fhir}ActionGroupingBehavior"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ActionGroupingBehavior" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "409"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "410"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "411"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "411"
                  },
                  "globalScope" : true
                } ],
                "r" : "411"
              },
              "globalScope" : true
            } ],
            "r" : "412"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "410",
            "locator" : "153:57-153:61",
            "name" : "value"
          },
          "localId" : "411",
          "locator" : "153:57-153:67",
          "path" : "value"
        },
        "localId" : "412",
        "locator" : "153:1-153:67",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "413",
            "locator" : "154:32-154:52",
            "name" : "{http://hl7.org/fhir}ActionParticipantType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ActionParticipantType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "413"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "414"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "415"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "415"
                  },
                  "globalScope" : true
                } ],
                "r" : "415"
              },
              "globalScope" : true
            } ],
            "r" : "416"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "414",
            "locator" : "154:56-154:60",
            "name" : "value"
          },
          "localId" : "415",
          "locator" : "154:56-154:66",
          "path" : "value"
        },
        "localId" : "416",
        "locator" : "154:1-154:66",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "417",
            "locator" : "155:32-155:53",
            "name" : "{http://hl7.org/fhir}ActionPrecheckBehavior"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ActionPrecheckBehavior" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "417"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "418"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "419"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "419"
                  },
                  "globalScope" : true
                } ],
                "r" : "419"
              },
              "globalScope" : true
            } ],
            "r" : "420"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "418",
            "locator" : "155:57-155:61",
            "name" : "value"
          },
          "localId" : "419",
          "locator" : "155:57-155:67",
          "path" : "value"
        },
        "localId" : "420",
        "locator" : "155:1-155:67",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "421",
            "locator" : "156:32-156:53",
            "name" : "{http://hl7.org/fhir}ActionRelationshipType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ActionRelationshipType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "421"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "422"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "423"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "423"
                  },
                  "globalScope" : true
                } ],
                "r" : "423"
              },
              "globalScope" : true
            } ],
            "r" : "424"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "422",
            "locator" : "156:57-156:61",
            "name" : "value"
          },
          "localId" : "423",
          "locator" : "156:57-156:67",
          "path" : "value"
        },
        "localId" : "424",
        "locator" : "156:1-156:67",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "425",
            "locator" : "157:32-157:53",
            "name" : "{http://hl7.org/fhir}ActionRequiredBehavior"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ActionRequiredBehavior" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "425"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "426"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "427"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "427"
                  },
                  "globalScope" : true
                } ],
                "r" : "427"
              },
              "globalScope" : true
            } ],
            "r" : "428"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "426",
            "locator" : "157:57-157:61",
            "name" : "value"
          },
          "localId" : "427",
          "locator" : "157:57-157:67",
          "path" : "value"
        },
        "localId" : "428",
        "locator" : "157:1-157:67",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "429",
            "locator" : "158:32-158:54",
            "name" : "{http://hl7.org/fhir}ActionSelectionBehavior"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ActionSelectionBehavior" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "429"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "430"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "431"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "431"
                  },
                  "globalScope" : true
                } ],
                "r" : "431"
              },
              "globalScope" : true
            } ],
            "r" : "432"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "430",
            "locator" : "158:58-158:62",
            "name" : "value"
          },
          "localId" : "431",
          "locator" : "158:58-158:68",
          "path" : "value"
        },
        "localId" : "432",
        "locator" : "158:1-158:68",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "433",
            "locator" : "159:32-159:53",
            "name" : "{http://hl7.org/fhir}ActivityDefinitionKind"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ActivityDefinitionKind" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "433"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "434"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "435"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "435"
                  },
                  "globalScope" : true
                } ],
                "r" : "435"
              },
              "globalScope" : true
            } ],
            "r" : "436"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "434",
            "locator" : "159:57-159:61",
            "name" : "value"
          },
          "localId" : "435",
          "locator" : "159:57-159:67",
          "path" : "value"
        },
        "localId" : "436",
        "locator" : "159:1-159:67",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "437",
            "locator" : "160:32-160:54",
            "name" : "{http://hl7.org/fhir}ActivityParticipantType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ActivityParticipantType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "437"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "438"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "439"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "439"
                  },
                  "globalScope" : true
                } ],
                "r" : "439"
              },
              "globalScope" : true
            } ],
            "r" : "440"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "438",
            "locator" : "160:58-160:62",
            "name" : "value"
          },
          "localId" : "439",
          "locator" : "160:58-160:68",
          "path" : "value"
        },
        "localId" : "440",
        "locator" : "160:1-160:68",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "441",
            "locator" : "161:32-161:42",
            "name" : "{http://hl7.org/fhir}AddressType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "AddressType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "441"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "442"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "443"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "443"
                  },
                  "globalScope" : true
                } ],
                "r" : "443"
              },
              "globalScope" : true
            } ],
            "r" : "444"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "442",
            "locator" : "161:46-161:50",
            "name" : "value"
          },
          "localId" : "443",
          "locator" : "161:46-161:56",
          "path" : "value"
        },
        "localId" : "444",
        "locator" : "161:1-161:56",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "445",
            "locator" : "162:32-162:41",
            "name" : "{http://hl7.org/fhir}AddressUse"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "AddressUse" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "445"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "446"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "447"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "447"
                  },
                  "globalScope" : true
                } ],
                "r" : "447"
              },
              "globalScope" : true
            } ],
            "r" : "448"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "446",
            "locator" : "162:45-162:49",
            "name" : "value"
          },
          "localId" : "447",
          "locator" : "162:45-162:55",
          "path" : "value"
        },
        "localId" : "448",
        "locator" : "162:1-162:55",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "449",
            "locator" : "163:32-163:51",
            "name" : "{http://hl7.org/fhir}AdministrativeGender"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "AdministrativeGender" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "449"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "450"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "451"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "451"
                  },
                  "globalScope" : true
                } ],
                "r" : "451"
              },
              "globalScope" : true
            } ],
            "r" : "452"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "450",
            "locator" : "163:55-163:59",
            "name" : "value"
          },
          "localId" : "451",
          "locator" : "163:55-163:65",
          "path" : "value"
        },
        "localId" : "452",
        "locator" : "163:1-163:65",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "453",
            "locator" : "164:32-164:52",
            "name" : "{http://hl7.org/fhir}AdverseEventActuality"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "AdverseEventActuality" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "453"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "454"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "455"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "455"
                  },
                  "globalScope" : true
                } ],
                "r" : "455"
              },
              "globalScope" : true
            } ],
            "r" : "456"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "454",
            "locator" : "164:56-164:60",
            "name" : "value"
          },
          "localId" : "455",
          "locator" : "164:56-164:66",
          "path" : "value"
        },
        "localId" : "456",
        "locator" : "164:1-164:66",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "457",
            "locator" : "165:32-165:46",
            "name" : "{http://hl7.org/fhir}AggregationMode"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "AggregationMode" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "457"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "458"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "459"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "459"
                  },
                  "globalScope" : true
                } ],
                "r" : "459"
              },
              "globalScope" : true
            } ],
            "r" : "460"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "458",
            "locator" : "165:50-165:54",
            "name" : "value"
          },
          "localId" : "459",
          "locator" : "165:50-165:60",
          "path" : "value"
        },
        "localId" : "460",
        "locator" : "165:1-165:60",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "461",
            "locator" : "166:32-166:57",
            "name" : "{http://hl7.org/fhir}AllergyIntoleranceCategory"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "AllergyIntoleranceCategory" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "461"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "462"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "463"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "463"
                  },
                  "globalScope" : true
                } ],
                "r" : "463"
              },
              "globalScope" : true
            } ],
            "r" : "464"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "462",
            "locator" : "166:61-166:65",
            "name" : "value"
          },
          "localId" : "463",
          "locator" : "166:61-166:71",
          "path" : "value"
        },
        "localId" : "464",
        "locator" : "166:1-166:71",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "465",
            "locator" : "167:32-167:60",
            "name" : "{http://hl7.org/fhir}AllergyIntoleranceCriticality"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "AllergyIntoleranceCriticality" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "465"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "466"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "467"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "467"
                  },
                  "globalScope" : true
                } ],
                "r" : "467"
              },
              "globalScope" : true
            } ],
            "r" : "468"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "466",
            "locator" : "167:64-167:68",
            "name" : "value"
          },
          "localId" : "467",
          "locator" : "167:64-167:74",
          "path" : "value"
        },
        "localId" : "468",
        "locator" : "167:1-167:74",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "469",
            "locator" : "168:32-168:57",
            "name" : "{http://hl7.org/fhir}AllergyIntoleranceSeverity"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "AllergyIntoleranceSeverity" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "469"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "470"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "471"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "471"
                  },
                  "globalScope" : true
                } ],
                "r" : "471"
              },
              "globalScope" : true
            } ],
            "r" : "472"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "470",
            "locator" : "168:61-168:65",
            "name" : "value"
          },
          "localId" : "471",
          "locator" : "168:61-168:71",
          "path" : "value"
        },
        "localId" : "472",
        "locator" : "168:1-168:71",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "473",
            "locator" : "169:32-169:53",
            "name" : "{http://hl7.org/fhir}AllergyIntoleranceType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "AllergyIntoleranceType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "473"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "474"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "475"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "475"
                  },
                  "globalScope" : true
                } ],
                "r" : "475"
              },
              "globalScope" : true
            } ],
            "r" : "476"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "474",
            "locator" : "169:57-169:61",
            "name" : "value"
          },
          "localId" : "475",
          "locator" : "169:57-169:67",
          "path" : "value"
        },
        "localId" : "476",
        "locator" : "169:1-169:67",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "477",
            "locator" : "170:32-170:48",
            "name" : "{http://hl7.org/fhir}AppointmentStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "AppointmentStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "477"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "478"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "479"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "479"
                  },
                  "globalScope" : true
                } ],
                "r" : "479"
              },
              "globalScope" : true
            } ],
            "r" : "480"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "478",
            "locator" : "170:52-170:56",
            "name" : "value"
          },
          "localId" : "479",
          "locator" : "170:52-170:62",
          "path" : "value"
        },
        "localId" : "480",
        "locator" : "170:1-170:62",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "481",
            "locator" : "171:32-171:53",
            "name" : "{http://hl7.org/fhir}AssertionDirectionType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "AssertionDirectionType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "481"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "482"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "483"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "483"
                  },
                  "globalScope" : true
                } ],
                "r" : "483"
              },
              "globalScope" : true
            } ],
            "r" : "484"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "482",
            "locator" : "171:57-171:61",
            "name" : "value"
          },
          "localId" : "483",
          "locator" : "171:57-171:67",
          "path" : "value"
        },
        "localId" : "484",
        "locator" : "171:1-171:67",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "485",
            "locator" : "172:32-172:52",
            "name" : "{http://hl7.org/fhir}AssertionOperatorType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "AssertionOperatorType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "485"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "486"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "487"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "487"
                  },
                  "globalScope" : true
                } ],
                "r" : "487"
              },
              "globalScope" : true
            } ],
            "r" : "488"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "486",
            "locator" : "172:56-172:60",
            "name" : "value"
          },
          "localId" : "487",
          "locator" : "172:56-172:66",
          "path" : "value"
        },
        "localId" : "488",
        "locator" : "172:1-172:66",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "489",
            "locator" : "173:32-173:53",
            "name" : "{http://hl7.org/fhir}AssertionResponseTypes"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "AssertionResponseTypes" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "489"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "490"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "491"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "491"
                  },
                  "globalScope" : true
                } ],
                "r" : "491"
              },
              "globalScope" : true
            } ],
            "r" : "492"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "490",
            "locator" : "173:57-173:61",
            "name" : "value"
          },
          "localId" : "491",
          "locator" : "173:57-173:67",
          "path" : "value"
        },
        "localId" : "492",
        "locator" : "173:1-173:67",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "493",
            "locator" : "174:32-174:47",
            "name" : "{http://hl7.org/fhir}AuditEventAction"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "AuditEventAction" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "493"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "494"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "495"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "495"
                  },
                  "globalScope" : true
                } ],
                "r" : "495"
              },
              "globalScope" : true
            } ],
            "r" : "496"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "494",
            "locator" : "174:51-174:55",
            "name" : "value"
          },
          "localId" : "495",
          "locator" : "174:51-174:61",
          "path" : "value"
        },
        "localId" : "496",
        "locator" : "174:1-174:61",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "497",
            "locator" : "175:32-175:57",
            "name" : "{http://hl7.org/fhir}AuditEventAgentNetworkType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "AuditEventAgentNetworkType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "497"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "498"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "499"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "499"
                  },
                  "globalScope" : true
                } ],
                "r" : "499"
              },
              "globalScope" : true
            } ],
            "r" : "500"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "498",
            "locator" : "175:61-175:65",
            "name" : "value"
          },
          "localId" : "499",
          "locator" : "175:61-175:71",
          "path" : "value"
        },
        "localId" : "500",
        "locator" : "175:1-175:71",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "501",
            "locator" : "176:32-176:48",
            "name" : "{http://hl7.org/fhir}AuditEventOutcome"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "AuditEventOutcome" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "501"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "502"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "503"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "503"
                  },
                  "globalScope" : true
                } ],
                "r" : "503"
              },
              "globalScope" : true
            } ],
            "r" : "504"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "502",
            "locator" : "176:52-176:56",
            "name" : "value"
          },
          "localId" : "503",
          "locator" : "176:52-176:62",
          "path" : "value"
        },
        "localId" : "504",
        "locator" : "176:1-176:62",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "505",
            "locator" : "177:32-177:46",
            "name" : "{http://hl7.org/fhir}BindingStrength"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "BindingStrength" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "505"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "506"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "507"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "507"
                  },
                  "globalScope" : true
                } ],
                "r" : "507"
              },
              "globalScope" : true
            } ],
            "r" : "508"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "506",
            "locator" : "177:50-177:54",
            "name" : "value"
          },
          "localId" : "507",
          "locator" : "177:50-177:60",
          "path" : "value"
        },
        "localId" : "508",
        "locator" : "177:1-177:60",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "509",
            "locator" : "178:32-178:65",
            "name" : "{http://hl7.org/fhir}BiologicallyDerivedProductCategory"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "BiologicallyDerivedProductCategory" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "509"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "510"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "511"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "511"
                  },
                  "globalScope" : true
                } ],
                "r" : "511"
              },
              "globalScope" : true
            } ],
            "r" : "512"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "510",
            "locator" : "178:69-178:73",
            "name" : "value"
          },
          "localId" : "511",
          "locator" : "178:69-178:79",
          "path" : "value"
        },
        "localId" : "512",
        "locator" : "178:1-178:79",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "513",
            "locator" : "179:32-179:63",
            "name" : "{http://hl7.org/fhir}BiologicallyDerivedProductStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "BiologicallyDerivedProductStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "513"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "514"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "515"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "515"
                  },
                  "globalScope" : true
                } ],
                "r" : "515"
              },
              "globalScope" : true
            } ],
            "r" : "516"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "514",
            "locator" : "179:67-179:71",
            "name" : "value"
          },
          "localId" : "515",
          "locator" : "179:67-179:77",
          "path" : "value"
        },
        "localId" : "516",
        "locator" : "179:1-179:77",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "517",
            "locator" : "180:32-180:69",
            "name" : "{http://hl7.org/fhir}BiologicallyDerivedProductStorageScale"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "BiologicallyDerivedProductStorageScale" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "517"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "518"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "519"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "519"
                  },
                  "globalScope" : true
                } ],
                "r" : "519"
              },
              "globalScope" : true
            } ],
            "r" : "520"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "518",
            "locator" : "180:73-180:77",
            "name" : "value"
          },
          "localId" : "519",
          "locator" : "180:73-180:83",
          "path" : "value"
        },
        "localId" : "520",
        "locator" : "180:1-180:83",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "521",
            "locator" : "181:32-181:41",
            "name" : "{http://hl7.org/fhir}BundleType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "BundleType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "521"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "522"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "523"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "523"
                  },
                  "globalScope" : true
                } ],
                "r" : "523"
              },
              "globalScope" : true
            } ],
            "r" : "524"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "522",
            "locator" : "181:45-181:49",
            "name" : "value"
          },
          "localId" : "523",
          "locator" : "181:45-181:55",
          "path" : "value"
        },
        "localId" : "524",
        "locator" : "181:1-181:55",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "525",
            "locator" : "182:32-182:54",
            "name" : "{http://hl7.org/fhir}CapabilityStatementKind"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "CapabilityStatementKind" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "525"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "526"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "527"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "527"
                  },
                  "globalScope" : true
                } ],
                "r" : "527"
              },
              "globalScope" : true
            } ],
            "r" : "528"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "526",
            "locator" : "182:58-182:62",
            "name" : "value"
          },
          "localId" : "527",
          "locator" : "182:58-182:68",
          "path" : "value"
        },
        "localId" : "528",
        "locator" : "182:1-182:68",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "529",
            "locator" : "183:32-183:51",
            "name" : "{http://hl7.org/fhir}CarePlanActivityKind"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "CarePlanActivityKind" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "529"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "530"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "531"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "531"
                  },
                  "globalScope" : true
                } ],
                "r" : "531"
              },
              "globalScope" : true
            } ],
            "r" : "532"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "530",
            "locator" : "183:55-183:59",
            "name" : "value"
          },
          "localId" : "531",
          "locator" : "183:55-183:65",
          "path" : "value"
        },
        "localId" : "532",
        "locator" : "183:1-183:65",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "533",
            "locator" : "184:32-184:53",
            "name" : "{http://hl7.org/fhir}CarePlanActivityStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "CarePlanActivityStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "533"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "534"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "535"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "535"
                  },
                  "globalScope" : true
                } ],
                "r" : "535"
              },
              "globalScope" : true
            } ],
            "r" : "536"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "534",
            "locator" : "184:57-184:61",
            "name" : "value"
          },
          "localId" : "535",
          "locator" : "184:57-184:67",
          "path" : "value"
        },
        "localId" : "536",
        "locator" : "184:1-184:67",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "537",
            "locator" : "185:32-185:45",
            "name" : "{http://hl7.org/fhir}CarePlanIntent"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "CarePlanIntent" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "537"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "538"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "539"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "539"
                  },
                  "globalScope" : true
                } ],
                "r" : "539"
              },
              "globalScope" : true
            } ],
            "r" : "540"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "538",
            "locator" : "185:49-185:53",
            "name" : "value"
          },
          "localId" : "539",
          "locator" : "185:49-185:59",
          "path" : "value"
        },
        "localId" : "540",
        "locator" : "185:1-185:59",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "541",
            "locator" : "186:32-186:45",
            "name" : "{http://hl7.org/fhir}CarePlanStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "CarePlanStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "541"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "542"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "543"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "543"
                  },
                  "globalScope" : true
                } ],
                "r" : "543"
              },
              "globalScope" : true
            } ],
            "r" : "544"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "542",
            "locator" : "186:49-186:53",
            "name" : "value"
          },
          "localId" : "543",
          "locator" : "186:49-186:59",
          "path" : "value"
        },
        "localId" : "544",
        "locator" : "186:1-186:59",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "545",
            "locator" : "187:32-187:45",
            "name" : "{http://hl7.org/fhir}CareTeamStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "CareTeamStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "545"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "546"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "547"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "547"
                  },
                  "globalScope" : true
                } ],
                "r" : "547"
              },
              "globalScope" : true
            } ],
            "r" : "548"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "546",
            "locator" : "187:49-187:53",
            "name" : "value"
          },
          "localId" : "547",
          "locator" : "187:49-187:59",
          "path" : "value"
        },
        "localId" : "548",
        "locator" : "187:1-187:59",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "549",
            "locator" : "188:32-188:55",
            "name" : "{http://hl7.org/fhir}CatalogEntryRelationType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "CatalogEntryRelationType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "549"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "550"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "551"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "551"
                  },
                  "globalScope" : true
                } ],
                "r" : "551"
              },
              "globalScope" : true
            } ],
            "r" : "552"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "550",
            "locator" : "188:59-188:63",
            "name" : "value"
          },
          "localId" : "551",
          "locator" : "188:59-188:69",
          "path" : "value"
        },
        "localId" : "552",
        "locator" : "188:1-188:69",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "553",
            "locator" : "189:32-189:69",
            "name" : "{http://hl7.org/fhir}ChargeItemDefinitionPriceComponentType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ChargeItemDefinitionPriceComponentType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "553"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "554"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "555"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "555"
                  },
                  "globalScope" : true
                } ],
                "r" : "555"
              },
              "globalScope" : true
            } ],
            "r" : "556"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "554",
            "locator" : "189:73-189:77",
            "name" : "value"
          },
          "localId" : "555",
          "locator" : "189:73-189:83",
          "path" : "value"
        },
        "localId" : "556",
        "locator" : "189:1-189:83",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "557",
            "locator" : "190:32-190:47",
            "name" : "{http://hl7.org/fhir}ChargeItemStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ChargeItemStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "557"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "558"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "559"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "559"
                  },
                  "globalScope" : true
                } ],
                "r" : "559"
              },
              "globalScope" : true
            } ],
            "r" : "560"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "558",
            "locator" : "190:51-190:55",
            "name" : "value"
          },
          "localId" : "559",
          "locator" : "190:51-190:61",
          "path" : "value"
        },
        "localId" : "560",
        "locator" : "190:1-190:61",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "561",
            "locator" : "191:32-191:50",
            "name" : "{http://hl7.org/fhir}ClaimResponseStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ClaimResponseStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "561"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "562"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "563"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "563"
                  },
                  "globalScope" : true
                } ],
                "r" : "563"
              },
              "globalScope" : true
            } ],
            "r" : "564"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "562",
            "locator" : "191:54-191:58",
            "name" : "value"
          },
          "localId" : "563",
          "locator" : "191:54-191:64",
          "path" : "value"
        },
        "localId" : "564",
        "locator" : "191:1-191:64",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "565",
            "locator" : "192:32-192:42",
            "name" : "{http://hl7.org/fhir}ClaimStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ClaimStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "565"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "566"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "567"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "567"
                  },
                  "globalScope" : true
                } ],
                "r" : "567"
              },
              "globalScope" : true
            } ],
            "r" : "568"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "566",
            "locator" : "192:46-192:50",
            "name" : "value"
          },
          "localId" : "567",
          "locator" : "192:46-192:56",
          "path" : "value"
        },
        "localId" : "568",
        "locator" : "192:1-192:56",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "569",
            "locator" : "193:32-193:55",
            "name" : "{http://hl7.org/fhir}ClinicalImpressionStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ClinicalImpressionStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "569"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "570"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "571"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "571"
                  },
                  "globalScope" : true
                } ],
                "r" : "571"
              },
              "globalScope" : true
            } ],
            "r" : "572"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "570",
            "locator" : "193:59-193:63",
            "name" : "value"
          },
          "localId" : "571",
          "locator" : "193:59-193:69",
          "path" : "value"
        },
        "localId" : "572",
        "locator" : "193:1-193:69",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "573",
            "locator" : "194:32-194:48",
            "name" : "{http://hl7.org/fhir}CodeSearchSupport"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "CodeSearchSupport" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "573"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "574"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "575"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "575"
                  },
                  "globalScope" : true
                } ],
                "r" : "575"
              },
              "globalScope" : true
            } ],
            "r" : "576"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "574",
            "locator" : "194:52-194:56",
            "name" : "value"
          },
          "localId" : "575",
          "locator" : "194:52-194:62",
          "path" : "value"
        },
        "localId" : "576",
        "locator" : "194:1-194:62",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "577",
            "locator" : "195:32-195:52",
            "name" : "{http://hl7.org/fhir}CodeSystemContentMode"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "CodeSystemContentMode" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "577"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "578"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "579"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "579"
                  },
                  "globalScope" : true
                } ],
                "r" : "579"
              },
              "globalScope" : true
            } ],
            "r" : "580"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "578",
            "locator" : "195:56-195:60",
            "name" : "value"
          },
          "localId" : "579",
          "locator" : "195:56-195:66",
          "path" : "value"
        },
        "localId" : "580",
        "locator" : "195:1-195:66",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "581",
            "locator" : "196:32-196:57",
            "name" : "{http://hl7.org/fhir}CodeSystemHierarchyMeaning"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "CodeSystemHierarchyMeaning" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "581"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "582"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "583"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "583"
                  },
                  "globalScope" : true
                } ],
                "r" : "583"
              },
              "globalScope" : true
            } ],
            "r" : "584"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "582",
            "locator" : "196:61-196:65",
            "name" : "value"
          },
          "localId" : "583",
          "locator" : "196:61-196:71",
          "path" : "value"
        },
        "localId" : "584",
        "locator" : "196:1-196:71",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "585",
            "locator" : "197:32-197:52",
            "name" : "{http://hl7.org/fhir}CommunicationPriority"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "CommunicationPriority" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "585"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "586"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "587"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "587"
                  },
                  "globalScope" : true
                } ],
                "r" : "587"
              },
              "globalScope" : true
            } ],
            "r" : "588"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "586",
            "locator" : "197:56-197:60",
            "name" : "value"
          },
          "localId" : "587",
          "locator" : "197:56-197:66",
          "path" : "value"
        },
        "localId" : "588",
        "locator" : "197:1-197:66",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "589",
            "locator" : "198:32-198:57",
            "name" : "{http://hl7.org/fhir}CommunicationRequestStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "CommunicationRequestStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "589"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "590"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "591"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "591"
                  },
                  "globalScope" : true
                } ],
                "r" : "591"
              },
              "globalScope" : true
            } ],
            "r" : "592"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "590",
            "locator" : "198:61-198:65",
            "name" : "value"
          },
          "localId" : "591",
          "locator" : "198:61-198:71",
          "path" : "value"
        },
        "localId" : "592",
        "locator" : "198:1-198:71",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "593",
            "locator" : "199:32-199:50",
            "name" : "{http://hl7.org/fhir}CommunicationStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "CommunicationStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "593"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "594"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "595"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "595"
                  },
                  "globalScope" : true
                } ],
                "r" : "595"
              },
              "globalScope" : true
            } ],
            "r" : "596"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "594",
            "locator" : "199:54-199:58",
            "name" : "value"
          },
          "localId" : "595",
          "locator" : "199:54-199:64",
          "path" : "value"
        },
        "localId" : "596",
        "locator" : "199:1-199:64",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "597",
            "locator" : "200:32-200:46",
            "name" : "{http://hl7.org/fhir}CompartmentCode"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "CompartmentCode" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "597"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "598"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "599"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "599"
                  },
                  "globalScope" : true
                } ],
                "r" : "599"
              },
              "globalScope" : true
            } ],
            "r" : "600"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "598",
            "locator" : "200:50-200:54",
            "name" : "value"
          },
          "localId" : "599",
          "locator" : "200:50-200:60",
          "path" : "value"
        },
        "localId" : "600",
        "locator" : "200:1-200:60",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "601",
            "locator" : "201:32-201:46",
            "name" : "{http://hl7.org/fhir}CompartmentType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "CompartmentType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "601"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "602"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "603"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "603"
                  },
                  "globalScope" : true
                } ],
                "r" : "603"
              },
              "globalScope" : true
            } ],
            "r" : "604"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "602",
            "locator" : "201:50-201:54",
            "name" : "value"
          },
          "localId" : "603",
          "locator" : "201:50-201:60",
          "path" : "value"
        },
        "localId" : "604",
        "locator" : "201:1-201:60",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "605",
            "locator" : "202:32-202:57",
            "name" : "{http://hl7.org/fhir}CompositionAttestationMode"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "CompositionAttestationMode" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "605"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "606"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "607"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "607"
                  },
                  "globalScope" : true
                } ],
                "r" : "607"
              },
              "globalScope" : true
            } ],
            "r" : "608"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "606",
            "locator" : "202:61-202:65",
            "name" : "value"
          },
          "localId" : "607",
          "locator" : "202:61-202:71",
          "path" : "value"
        },
        "localId" : "608",
        "locator" : "202:1-202:71",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "609",
            "locator" : "203:32-203:48",
            "name" : "{http://hl7.org/fhir}CompositionStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "CompositionStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "609"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "610"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "611"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "611"
                  },
                  "globalScope" : true
                } ],
                "r" : "611"
              },
              "globalScope" : true
            } ],
            "r" : "612"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "610",
            "locator" : "203:52-203:56",
            "name" : "value"
          },
          "localId" : "611",
          "locator" : "203:52-203:62",
          "path" : "value"
        },
        "localId" : "612",
        "locator" : "203:1-203:62",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "613",
            "locator" : "204:32-204:52",
            "name" : "{http://hl7.org/fhir}ConceptMapEquivalence"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ConceptMapEquivalence" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "613"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "614"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "615"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "615"
                  },
                  "globalScope" : true
                } ],
                "r" : "615"
              },
              "globalScope" : true
            } ],
            "r" : "616"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "614",
            "locator" : "204:56-204:60",
            "name" : "value"
          },
          "localId" : "615",
          "locator" : "204:56-204:66",
          "path" : "value"
        },
        "localId" : "616",
        "locator" : "204:1-204:66",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "617",
            "locator" : "205:32-205:58",
            "name" : "{http://hl7.org/fhir}ConceptMapGroupUnmappedMode"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ConceptMapGroupUnmappedMode" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "617"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "618"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "619"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "619"
                  },
                  "globalScope" : true
                } ],
                "r" : "619"
              },
              "globalScope" : true
            } ],
            "r" : "620"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "618",
            "locator" : "205:62-205:66",
            "name" : "value"
          },
          "localId" : "619",
          "locator" : "205:62-205:72",
          "path" : "value"
        },
        "localId" : "620",
        "locator" : "205:1-205:72",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "621",
            "locator" : "206:32-206:54",
            "name" : "{http://hl7.org/fhir}ConditionalDeleteStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ConditionalDeleteStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "621"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "622"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "623"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "623"
                  },
                  "globalScope" : true
                } ],
                "r" : "623"
              },
              "globalScope" : true
            } ],
            "r" : "624"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "622",
            "locator" : "206:58-206:62",
            "name" : "value"
          },
          "localId" : "623",
          "locator" : "206:58-206:68",
          "path" : "value"
        },
        "localId" : "624",
        "locator" : "206:1-206:68",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "625",
            "locator" : "207:32-207:52",
            "name" : "{http://hl7.org/fhir}ConditionalReadStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ConditionalReadStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "625"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "626"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "627"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "627"
                  },
                  "globalScope" : true
                } ],
                "r" : "627"
              },
              "globalScope" : true
            } ],
            "r" : "628"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "626",
            "locator" : "207:56-207:60",
            "name" : "value"
          },
          "localId" : "627",
          "locator" : "207:56-207:66",
          "path" : "value"
        },
        "localId" : "628",
        "locator" : "207:1-207:66",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "629",
            "locator" : "208:32-208:49",
            "name" : "{http://hl7.org/fhir}ConsentDataMeaning"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ConsentDataMeaning" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "629"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "630"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "631"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "631"
                  },
                  "globalScope" : true
                } ],
                "r" : "631"
              },
              "globalScope" : true
            } ],
            "r" : "632"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "630",
            "locator" : "208:53-208:57",
            "name" : "value"
          },
          "localId" : "631",
          "locator" : "208:53-208:63",
          "path" : "value"
        },
        "localId" : "632",
        "locator" : "208:1-208:63",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "633",
            "locator" : "209:32-209:51",
            "name" : "{http://hl7.org/fhir}ConsentProvisionType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ConsentProvisionType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "633"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "634"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "635"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "635"
                  },
                  "globalScope" : true
                } ],
                "r" : "635"
              },
              "globalScope" : true
            } ],
            "r" : "636"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "634",
            "locator" : "209:55-209:59",
            "name" : "value"
          },
          "localId" : "635",
          "locator" : "209:55-209:65",
          "path" : "value"
        },
        "localId" : "636",
        "locator" : "209:1-209:65",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "637",
            "locator" : "210:32-210:43",
            "name" : "{http://hl7.org/fhir}ConsentState"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ConsentState" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "637"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "638"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "639"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "639"
                  },
                  "globalScope" : true
                } ],
                "r" : "639"
              },
              "globalScope" : true
            } ],
            "r" : "640"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "638",
            "locator" : "210:47-210:51",
            "name" : "value"
          },
          "localId" : "639",
          "locator" : "210:47-210:57",
          "path" : "value"
        },
        "localId" : "640",
        "locator" : "210:1-210:57",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "641",
            "locator" : "211:32-211:49",
            "name" : "{http://hl7.org/fhir}ConstraintSeverity"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ConstraintSeverity" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "641"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "642"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "643"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "643"
                  },
                  "globalScope" : true
                } ],
                "r" : "643"
              },
              "globalScope" : true
            } ],
            "r" : "644"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "642",
            "locator" : "211:53-211:57",
            "name" : "value"
          },
          "localId" : "643",
          "locator" : "211:53-211:63",
          "path" : "value"
        },
        "localId" : "644",
        "locator" : "211:1-211:63",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "645",
            "locator" : "212:32-212:49",
            "name" : "{http://hl7.org/fhir}ContactPointSystem"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ContactPointSystem" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "645"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "646"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "647"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "647"
                  },
                  "globalScope" : true
                } ],
                "r" : "647"
              },
              "globalScope" : true
            } ],
            "r" : "648"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "646",
            "locator" : "212:53-212:57",
            "name" : "value"
          },
          "localId" : "647",
          "locator" : "212:53-212:63",
          "path" : "value"
        },
        "localId" : "648",
        "locator" : "212:1-212:63",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "649",
            "locator" : "213:32-213:46",
            "name" : "{http://hl7.org/fhir}ContactPointUse"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ContactPointUse" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "649"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "650"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "651"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "651"
                  },
                  "globalScope" : true
                } ],
                "r" : "651"
              },
              "globalScope" : true
            } ],
            "r" : "652"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "650",
            "locator" : "213:50-213:54",
            "name" : "value"
          },
          "localId" : "651",
          "locator" : "213:50-213:60",
          "path" : "value"
        },
        "localId" : "652",
        "locator" : "213:1-213:60",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "653",
            "locator" : "214:32-214:56",
            "name" : "{http://hl7.org/fhir}ContractPublicationStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ContractPublicationStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "653"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "654"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "655"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "655"
                  },
                  "globalScope" : true
                } ],
                "r" : "655"
              },
              "globalScope" : true
            } ],
            "r" : "656"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "654",
            "locator" : "214:60-214:64",
            "name" : "value"
          },
          "localId" : "655",
          "locator" : "214:60-214:70",
          "path" : "value"
        },
        "localId" : "656",
        "locator" : "214:1-214:70",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "657",
            "locator" : "215:32-215:45",
            "name" : "{http://hl7.org/fhir}ContractStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ContractStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "657"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "658"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "659"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "659"
                  },
                  "globalScope" : true
                } ],
                "r" : "659"
              },
              "globalScope" : true
            } ],
            "r" : "660"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "658",
            "locator" : "215:49-215:53",
            "name" : "value"
          },
          "localId" : "659",
          "locator" : "215:49-215:59",
          "path" : "value"
        },
        "localId" : "660",
        "locator" : "215:1-215:59",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "661",
            "locator" : "216:32-216:46",
            "name" : "{http://hl7.org/fhir}ContributorType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ContributorType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "661"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "662"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "663"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "663"
                  },
                  "globalScope" : true
                } ],
                "r" : "663"
              },
              "globalScope" : true
            } ],
            "r" : "664"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "662",
            "locator" : "216:50-216:54",
            "name" : "value"
          },
          "localId" : "663",
          "locator" : "216:50-216:60",
          "path" : "value"
        },
        "localId" : "664",
        "locator" : "216:1-216:60",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "665",
            "locator" : "217:32-217:45",
            "name" : "{http://hl7.org/fhir}CoverageStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "CoverageStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "665"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "666"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "667"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "667"
                  },
                  "globalScope" : true
                } ],
                "r" : "667"
              },
              "globalScope" : true
            } ],
            "r" : "668"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "666",
            "locator" : "217:49-217:53",
            "name" : "value"
          },
          "localId" : "667",
          "locator" : "217:49-217:59",
          "path" : "value"
        },
        "localId" : "668",
        "locator" : "217:1-217:59",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "669",
            "locator" : "218:32-218:43",
            "name" : "{http://hl7.org/fhir}CurrencyCode"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "CurrencyCode" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "669"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "670"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "671"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "671"
                  },
                  "globalScope" : true
                } ],
                "r" : "671"
              },
              "globalScope" : true
            } ],
            "r" : "672"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "670",
            "locator" : "218:47-218:51",
            "name" : "value"
          },
          "localId" : "671",
          "locator" : "218:47-218:57",
          "path" : "value"
        },
        "localId" : "672",
        "locator" : "218:1-218:57",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "673",
            "locator" : "219:32-219:40",
            "name" : "{http://hl7.org/fhir}DayOfWeek"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "DayOfWeek" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "673"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "674"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "675"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "675"
                  },
                  "globalScope" : true
                } ],
                "r" : "675"
              },
              "globalScope" : true
            } ],
            "r" : "676"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "674",
            "locator" : "219:44-219:48",
            "name" : "value"
          },
          "localId" : "675",
          "locator" : "219:44-219:54",
          "path" : "value"
        },
        "localId" : "676",
        "locator" : "219:1-219:54",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "677",
            "locator" : "220:32-220:41",
            "name" : "{http://hl7.org/fhir}DaysOfWeek"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "DaysOfWeek" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "677"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "678"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "679"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "679"
                  },
                  "globalScope" : true
                } ],
                "r" : "679"
              },
              "globalScope" : true
            } ],
            "r" : "680"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "678",
            "locator" : "220:45-220:49",
            "name" : "value"
          },
          "localId" : "679",
          "locator" : "220:45-220:55",
          "path" : "value"
        },
        "localId" : "680",
        "locator" : "220:1-220:55",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "681",
            "locator" : "221:32-221:52",
            "name" : "{http://hl7.org/fhir}DetectedIssueSeverity"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "DetectedIssueSeverity" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "681"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "682"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "683"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "683"
                  },
                  "globalScope" : true
                } ],
                "r" : "683"
              },
              "globalScope" : true
            } ],
            "r" : "684"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "682",
            "locator" : "221:56-221:60",
            "name" : "value"
          },
          "localId" : "683",
          "locator" : "221:56-221:66",
          "path" : "value"
        },
        "localId" : "684",
        "locator" : "221:1-221:66",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "685",
            "locator" : "222:32-222:50",
            "name" : "{http://hl7.org/fhir}DetectedIssueStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "DetectedIssueStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "685"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "686"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "687"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "687"
                  },
                  "globalScope" : true
                } ],
                "r" : "687"
              },
              "globalScope" : true
            } ],
            "r" : "688"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "686",
            "locator" : "222:54-222:58",
            "name" : "value"
          },
          "localId" : "687",
          "locator" : "222:54-222:64",
          "path" : "value"
        },
        "localId" : "688",
        "locator" : "222:1-222:64",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "689",
            "locator" : "223:32-223:59",
            "name" : "{http://hl7.org/fhir}DeviceMetricCalibrationState"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "DeviceMetricCalibrationState" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "689"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "690"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "691"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "691"
                  },
                  "globalScope" : true
                } ],
                "r" : "691"
              },
              "globalScope" : true
            } ],
            "r" : "692"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "690",
            "locator" : "223:63-223:67",
            "name" : "value"
          },
          "localId" : "691",
          "locator" : "223:63-223:73",
          "path" : "value"
        },
        "localId" : "692",
        "locator" : "223:1-223:73",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "693",
            "locator" : "224:32-224:58",
            "name" : "{http://hl7.org/fhir}DeviceMetricCalibrationType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "DeviceMetricCalibrationType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "693"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "694"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "695"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "695"
                  },
                  "globalScope" : true
                } ],
                "r" : "695"
              },
              "globalScope" : true
            } ],
            "r" : "696"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "694",
            "locator" : "224:62-224:66",
            "name" : "value"
          },
          "localId" : "695",
          "locator" : "224:62-224:72",
          "path" : "value"
        },
        "localId" : "696",
        "locator" : "224:1-224:72",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "697",
            "locator" : "225:32-225:51",
            "name" : "{http://hl7.org/fhir}DeviceMetricCategory"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "DeviceMetricCategory" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "697"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "698"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "699"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "699"
                  },
                  "globalScope" : true
                } ],
                "r" : "699"
              },
              "globalScope" : true
            } ],
            "r" : "700"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "698",
            "locator" : "225:55-225:59",
            "name" : "value"
          },
          "localId" : "699",
          "locator" : "225:55-225:65",
          "path" : "value"
        },
        "localId" : "700",
        "locator" : "225:1-225:65",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "701",
            "locator" : "226:32-226:48",
            "name" : "{http://hl7.org/fhir}DeviceMetricColor"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "DeviceMetricColor" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "701"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "702"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "703"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "703"
                  },
                  "globalScope" : true
                } ],
                "r" : "703"
              },
              "globalScope" : true
            } ],
            "r" : "704"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "702",
            "locator" : "226:52-226:56",
            "name" : "value"
          },
          "localId" : "703",
          "locator" : "226:52-226:62",
          "path" : "value"
        },
        "localId" : "704",
        "locator" : "226:1-226:62",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "705",
            "locator" : "227:32-227:60",
            "name" : "{http://hl7.org/fhir}DeviceMetricOperationalStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "DeviceMetricOperationalStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "705"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "706"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "707"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "707"
                  },
                  "globalScope" : true
                } ],
                "r" : "707"
              },
              "globalScope" : true
            } ],
            "r" : "708"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "706",
            "locator" : "227:64-227:68",
            "name" : "value"
          },
          "localId" : "707",
          "locator" : "227:64-227:74",
          "path" : "value"
        },
        "localId" : "708",
        "locator" : "227:1-227:74",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "709",
            "locator" : "228:32-228:45",
            "name" : "{http://hl7.org/fhir}DeviceNameType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "DeviceNameType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "709"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "710"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "711"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "711"
                  },
                  "globalScope" : true
                } ],
                "r" : "711"
              },
              "globalScope" : true
            } ],
            "r" : "712"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "710",
            "locator" : "228:49-228:53",
            "name" : "value"
          },
          "localId" : "711",
          "locator" : "228:49-228:59",
          "path" : "value"
        },
        "localId" : "712",
        "locator" : "228:1-228:59",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "713",
            "locator" : "229:32-229:50",
            "name" : "{http://hl7.org/fhir}DeviceRequestStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "DeviceRequestStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "713"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "714"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "715"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "715"
                  },
                  "globalScope" : true
                } ],
                "r" : "715"
              },
              "globalScope" : true
            } ],
            "r" : "716"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "714",
            "locator" : "229:54-229:58",
            "name" : "value"
          },
          "localId" : "715",
          "locator" : "229:54-229:64",
          "path" : "value"
        },
        "localId" : "716",
        "locator" : "229:1-229:64",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "717",
            "locator" : "230:32-230:55",
            "name" : "{http://hl7.org/fhir}DeviceUseStatementStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "DeviceUseStatementStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "717"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "718"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "719"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "719"
                  },
                  "globalScope" : true
                } ],
                "r" : "719"
              },
              "globalScope" : true
            } ],
            "r" : "720"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "718",
            "locator" : "230:59-230:63",
            "name" : "value"
          },
          "localId" : "719",
          "locator" : "230:59-230:69",
          "path" : "value"
        },
        "localId" : "720",
        "locator" : "230:1-230:69",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "721",
            "locator" : "231:32-231:53",
            "name" : "{http://hl7.org/fhir}DiagnosticReportStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "DiagnosticReportStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "721"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "722"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "723"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "723"
                  },
                  "globalScope" : true
                } ],
                "r" : "723"
              },
              "globalScope" : true
            } ],
            "r" : "724"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "722",
            "locator" : "231:57-231:61",
            "name" : "value"
          },
          "localId" : "723",
          "locator" : "231:57-231:67",
          "path" : "value"
        },
        "localId" : "724",
        "locator" : "231:1-231:67",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "725",
            "locator" : "232:32-232:48",
            "name" : "{http://hl7.org/fhir}DiscriminatorType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "DiscriminatorType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "725"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "726"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "727"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "727"
                  },
                  "globalScope" : true
                } ],
                "r" : "727"
              },
              "globalScope" : true
            } ],
            "r" : "728"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "726",
            "locator" : "232:52-232:56",
            "name" : "value"
          },
          "localId" : "727",
          "locator" : "232:52-232:62",
          "path" : "value"
        },
        "localId" : "728",
        "locator" : "232:1-232:62",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "729",
            "locator" : "233:32-233:54",
            "name" : "{http://hl7.org/fhir}DocumentConfidentiality"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "DocumentConfidentiality" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "729"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "730"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "731"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "731"
                  },
                  "globalScope" : true
                } ],
                "r" : "731"
              },
              "globalScope" : true
            } ],
            "r" : "732"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "730",
            "locator" : "233:58-233:62",
            "name" : "value"
          },
          "localId" : "731",
          "locator" : "233:58-233:68",
          "path" : "value"
        },
        "localId" : "732",
        "locator" : "233:1-233:68",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "733",
            "locator" : "234:32-234:43",
            "name" : "{http://hl7.org/fhir}DocumentMode"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "DocumentMode" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "733"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "734"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "735"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "735"
                  },
                  "globalScope" : true
                } ],
                "r" : "735"
              },
              "globalScope" : true
            } ],
            "r" : "736"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "734",
            "locator" : "234:47-234:51",
            "name" : "value"
          },
          "localId" : "735",
          "locator" : "234:47-234:57",
          "path" : "value"
        },
        "localId" : "736",
        "locator" : "234:1-234:57",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "737",
            "locator" : "235:32-235:54",
            "name" : "{http://hl7.org/fhir}DocumentReferenceStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "DocumentReferenceStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "737"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "738"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "739"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "739"
                  },
                  "globalScope" : true
                } ],
                "r" : "739"
              },
              "globalScope" : true
            } ],
            "r" : "740"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "738",
            "locator" : "235:58-235:62",
            "name" : "value"
          },
          "localId" : "739",
          "locator" : "235:58-235:68",
          "path" : "value"
        },
        "localId" : "740",
        "locator" : "235:1-235:68",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "741",
            "locator" : "236:32-236:55",
            "name" : "{http://hl7.org/fhir}DocumentRelationshipType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "DocumentRelationshipType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "741"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "742"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "743"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "743"
                  },
                  "globalScope" : true
                } ],
                "r" : "743"
              },
              "globalScope" : true
            } ],
            "r" : "744"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "742",
            "locator" : "236:59-236:63",
            "name" : "value"
          },
          "localId" : "743",
          "locator" : "236:59-236:69",
          "path" : "value"
        },
        "localId" : "744",
        "locator" : "236:1-236:69",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "745",
            "locator" : "237:32-237:56",
            "name" : "{http://hl7.org/fhir}EligibilityRequestPurpose"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "EligibilityRequestPurpose" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "745"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "746"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "747"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "747"
                  },
                  "globalScope" : true
                } ],
                "r" : "747"
              },
              "globalScope" : true
            } ],
            "r" : "748"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "746",
            "locator" : "237:60-237:64",
            "name" : "value"
          },
          "localId" : "747",
          "locator" : "237:60-237:70",
          "path" : "value"
        },
        "localId" : "748",
        "locator" : "237:1-237:70",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "749",
            "locator" : "238:32-238:55",
            "name" : "{http://hl7.org/fhir}EligibilityRequestStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "EligibilityRequestStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "749"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "750"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "751"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "751"
                  },
                  "globalScope" : true
                } ],
                "r" : "751"
              },
              "globalScope" : true
            } ],
            "r" : "752"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "750",
            "locator" : "238:59-238:63",
            "name" : "value"
          },
          "localId" : "751",
          "locator" : "238:59-238:69",
          "path" : "value"
        },
        "localId" : "752",
        "locator" : "238:1-238:69",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "753",
            "locator" : "239:32-239:57",
            "name" : "{http://hl7.org/fhir}EligibilityResponsePurpose"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "EligibilityResponsePurpose" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "753"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "754"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "755"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "755"
                  },
                  "globalScope" : true
                } ],
                "r" : "755"
              },
              "globalScope" : true
            } ],
            "r" : "756"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "754",
            "locator" : "239:61-239:65",
            "name" : "value"
          },
          "localId" : "755",
          "locator" : "239:61-239:71",
          "path" : "value"
        },
        "localId" : "756",
        "locator" : "239:1-239:71",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "757",
            "locator" : "240:32-240:56",
            "name" : "{http://hl7.org/fhir}EligibilityResponseStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "EligibilityResponseStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "757"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "758"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "759"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "759"
                  },
                  "globalScope" : true
                } ],
                "r" : "759"
              },
              "globalScope" : true
            } ],
            "r" : "760"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "758",
            "locator" : "240:60-240:64",
            "name" : "value"
          },
          "localId" : "759",
          "locator" : "240:60-240:70",
          "path" : "value"
        },
        "localId" : "760",
        "locator" : "240:1-240:70",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "761",
            "locator" : "241:32-241:49",
            "name" : "{http://hl7.org/fhir}EnableWhenBehavior"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "EnableWhenBehavior" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "761"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "762"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "763"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "763"
                  },
                  "globalScope" : true
                } ],
                "r" : "763"
              },
              "globalScope" : true
            } ],
            "r" : "764"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "762",
            "locator" : "241:53-241:57",
            "name" : "value"
          },
          "localId" : "763",
          "locator" : "241:53-241:63",
          "path" : "value"
        },
        "localId" : "764",
        "locator" : "241:1-241:63",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "765",
            "locator" : "242:32-242:54",
            "name" : "{http://hl7.org/fhir}EncounterLocationStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "EncounterLocationStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "765"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "766"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "767"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "767"
                  },
                  "globalScope" : true
                } ],
                "r" : "767"
              },
              "globalScope" : true
            } ],
            "r" : "768"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "766",
            "locator" : "242:58-242:62",
            "name" : "value"
          },
          "localId" : "767",
          "locator" : "242:58-242:68",
          "path" : "value"
        },
        "localId" : "768",
        "locator" : "242:1-242:68",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "769",
            "locator" : "243:32-243:46",
            "name" : "{http://hl7.org/fhir}EncounterStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "EncounterStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "769"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "770"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "771"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "771"
                  },
                  "globalScope" : true
                } ],
                "r" : "771"
              },
              "globalScope" : true
            } ],
            "r" : "772"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "770",
            "locator" : "243:50-243:54",
            "name" : "value"
          },
          "localId" : "771",
          "locator" : "243:50-243:60",
          "path" : "value"
        },
        "localId" : "772",
        "locator" : "243:1-243:60",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "773",
            "locator" : "244:32-244:45",
            "name" : "{http://hl7.org/fhir}EndpointStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "EndpointStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "773"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "774"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "775"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "775"
                  },
                  "globalScope" : true
                } ],
                "r" : "775"
              },
              "globalScope" : true
            } ],
            "r" : "776"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "774",
            "locator" : "244:49-244:53",
            "name" : "value"
          },
          "localId" : "775",
          "locator" : "244:49-244:59",
          "path" : "value"
        },
        "localId" : "776",
        "locator" : "244:1-244:59",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "777",
            "locator" : "245:32-245:54",
            "name" : "{http://hl7.org/fhir}EnrollmentRequestStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "EnrollmentRequestStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "777"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "778"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "779"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "779"
                  },
                  "globalScope" : true
                } ],
                "r" : "779"
              },
              "globalScope" : true
            } ],
            "r" : "780"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "778",
            "locator" : "245:58-245:62",
            "name" : "value"
          },
          "localId" : "779",
          "locator" : "245:58-245:68",
          "path" : "value"
        },
        "localId" : "780",
        "locator" : "245:1-245:68",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "781",
            "locator" : "246:32-246:55",
            "name" : "{http://hl7.org/fhir}EnrollmentResponseStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "EnrollmentResponseStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "781"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "782"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "783"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "783"
                  },
                  "globalScope" : true
                } ],
                "r" : "783"
              },
              "globalScope" : true
            } ],
            "r" : "784"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "782",
            "locator" : "246:59-246:63",
            "name" : "value"
          },
          "localId" : "783",
          "locator" : "246:59-246:69",
          "path" : "value"
        },
        "localId" : "784",
        "locator" : "246:1-246:69",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "785",
            "locator" : "247:32-247:50",
            "name" : "{http://hl7.org/fhir}EpisodeOfCareStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "EpisodeOfCareStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "785"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "786"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "787"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "787"
                  },
                  "globalScope" : true
                } ],
                "r" : "787"
              },
              "globalScope" : true
            } ],
            "r" : "788"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "786",
            "locator" : "247:54-247:58",
            "name" : "value"
          },
          "localId" : "787",
          "locator" : "247:54-247:64",
          "path" : "value"
        },
        "localId" : "788",
        "locator" : "247:1-247:64",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "789",
            "locator" : "248:32-248:50",
            "name" : "{http://hl7.org/fhir}EventCapabilityMode"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "EventCapabilityMode" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "789"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "790"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "791"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "791"
                  },
                  "globalScope" : true
                } ],
                "r" : "791"
              },
              "globalScope" : true
            } ],
            "r" : "792"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "790",
            "locator" : "248:54-248:58",
            "name" : "value"
          },
          "localId" : "791",
          "locator" : "248:54-248:64",
          "path" : "value"
        },
        "localId" : "792",
        "locator" : "248:1-248:64",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "793",
            "locator" : "249:32-249:42",
            "name" : "{http://hl7.org/fhir}EventTiming"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "EventTiming" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "793"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "794"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "795"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "795"
                  },
                  "globalScope" : true
                } ],
                "r" : "795"
              },
              "globalScope" : true
            } ],
            "r" : "796"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "794",
            "locator" : "249:46-249:50",
            "name" : "value"
          },
          "localId" : "795",
          "locator" : "249:46-249:56",
          "path" : "value"
        },
        "localId" : "796",
        "locator" : "249:1-249:56",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "797",
            "locator" : "250:32-250:51",
            "name" : "{http://hl7.org/fhir}EvidenceVariableType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "EvidenceVariableType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "797"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "798"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "799"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "799"
                  },
                  "globalScope" : true
                } ],
                "r" : "799"
              },
              "globalScope" : true
            } ],
            "r" : "800"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "798",
            "locator" : "250:55-250:59",
            "name" : "value"
          },
          "localId" : "799",
          "locator" : "250:55-250:65",
          "path" : "value"
        },
        "localId" : "800",
        "locator" : "250:1-250:65",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "801",
            "locator" : "251:32-251:55",
            "name" : "{http://hl7.org/fhir}ExampleScenarioActorType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ExampleScenarioActorType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "801"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "802"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "803"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "803"
                  },
                  "globalScope" : true
                } ],
                "r" : "803"
              },
              "globalScope" : true
            } ],
            "r" : "804"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "802",
            "locator" : "251:59-251:63",
            "name" : "value"
          },
          "localId" : "803",
          "locator" : "251:59-251:69",
          "path" : "value"
        },
        "localId" : "804",
        "locator" : "251:1-251:69",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "805",
            "locator" : "252:32-252:57",
            "name" : "{http://hl7.org/fhir}ExplanationOfBenefitStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ExplanationOfBenefitStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "805"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "806"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "807"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "807"
                  },
                  "globalScope" : true
                } ],
                "r" : "807"
              },
              "globalScope" : true
            } ],
            "r" : "808"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "806",
            "locator" : "252:61-252:65",
            "name" : "value"
          },
          "localId" : "807",
          "locator" : "252:61-252:71",
          "path" : "value"
        },
        "localId" : "808",
        "locator" : "252:1-252:71",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "809",
            "locator" : "253:32-253:44",
            "name" : "{http://hl7.org/fhir}ExposureState"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ExposureState" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "809"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "810"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "811"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "811"
                  },
                  "globalScope" : true
                } ],
                "r" : "811"
              },
              "globalScope" : true
            } ],
            "r" : "812"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "810",
            "locator" : "253:48-253:52",
            "name" : "value"
          },
          "localId" : "811",
          "locator" : "253:48-253:58",
          "path" : "value"
        },
        "localId" : "812",
        "locator" : "253:1-253:58",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "813",
            "locator" : "254:32-254:51",
            "name" : "{http://hl7.org/fhir}ExtensionContextType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ExtensionContextType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "813"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "814"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "815"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "815"
                  },
                  "globalScope" : true
                } ],
                "r" : "815"
              },
              "globalScope" : true
            } ],
            "r" : "816"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "814",
            "locator" : "254:55-254:59",
            "name" : "value"
          },
          "localId" : "815",
          "locator" : "254:55-254:65",
          "path" : "value"
        },
        "localId" : "816",
        "locator" : "254:1-254:65",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "817",
            "locator" : "255:32-255:43",
            "name" : "{http://hl7.org/fhir}FHIRAllTypes"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "FHIRAllTypes" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "817"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "818"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "819"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "819"
                  },
                  "globalScope" : true
                } ],
                "r" : "819"
              },
              "globalScope" : true
            } ],
            "r" : "820"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "818",
            "locator" : "255:47-255:51",
            "name" : "value"
          },
          "localId" : "819",
          "locator" : "255:47-255:57",
          "path" : "value"
        },
        "localId" : "820",
        "locator" : "255:1-255:57",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "821",
            "locator" : "256:32-256:46",
            "name" : "{http://hl7.org/fhir}FHIRDefinedType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "FHIRDefinedType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "821"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "822"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "823"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "823"
                  },
                  "globalScope" : true
                } ],
                "r" : "823"
              },
              "globalScope" : true
            } ],
            "r" : "824"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "822",
            "locator" : "256:50-256:54",
            "name" : "value"
          },
          "localId" : "823",
          "locator" : "256:50-256:60",
          "path" : "value"
        },
        "localId" : "824",
        "locator" : "256:1-256:60",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "825",
            "locator" : "257:32-257:47",
            "name" : "{http://hl7.org/fhir}FHIRDeviceStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "FHIRDeviceStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "825"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "826"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "827"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "827"
                  },
                  "globalScope" : true
                } ],
                "r" : "827"
              },
              "globalScope" : true
            } ],
            "r" : "828"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "826",
            "locator" : "257:51-257:55",
            "name" : "value"
          },
          "localId" : "827",
          "locator" : "257:51-257:61",
          "path" : "value"
        },
        "localId" : "828",
        "locator" : "257:1-257:61",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "829",
            "locator" : "258:32-258:47",
            "name" : "{http://hl7.org/fhir}FHIRResourceType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "FHIRResourceType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "829"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "830"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "831"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "831"
                  },
                  "globalScope" : true
                } ],
                "r" : "831"
              },
              "globalScope" : true
            } ],
            "r" : "832"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "830",
            "locator" : "258:51-258:55",
            "name" : "value"
          },
          "localId" : "831",
          "locator" : "258:51-258:61",
          "path" : "value"
        },
        "localId" : "832",
        "locator" : "258:1-258:61",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "833",
            "locator" : "259:32-259:50",
            "name" : "{http://hl7.org/fhir}FHIRSubstanceStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "FHIRSubstanceStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "833"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "834"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "835"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "835"
                  },
                  "globalScope" : true
                } ],
                "r" : "835"
              },
              "globalScope" : true
            } ],
            "r" : "836"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "834",
            "locator" : "259:54-259:58",
            "name" : "value"
          },
          "localId" : "835",
          "locator" : "259:54-259:64",
          "path" : "value"
        },
        "localId" : "836",
        "locator" : "259:1-259:64",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "837",
            "locator" : "260:32-260:42",
            "name" : "{http://hl7.org/fhir}FHIRVersion"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "FHIRVersion" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "837"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "838"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "839"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "839"
                  },
                  "globalScope" : true
                } ],
                "r" : "839"
              },
              "globalScope" : true
            } ],
            "r" : "840"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "838",
            "locator" : "260:46-260:50",
            "name" : "value"
          },
          "localId" : "839",
          "locator" : "260:46-260:56",
          "path" : "value"
        },
        "localId" : "840",
        "locator" : "260:1-260:56",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "841",
            "locator" : "261:32-261:50",
            "name" : "{http://hl7.org/fhir}FamilyHistoryStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "FamilyHistoryStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "841"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "842"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "843"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "843"
                  },
                  "globalScope" : true
                } ],
                "r" : "843"
              },
              "globalScope" : true
            } ],
            "r" : "844"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "842",
            "locator" : "261:54-261:58",
            "name" : "value"
          },
          "localId" : "843",
          "locator" : "261:54-261:64",
          "path" : "value"
        },
        "localId" : "844",
        "locator" : "261:1-261:64",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "845",
            "locator" : "262:32-262:45",
            "name" : "{http://hl7.org/fhir}FilterOperator"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "FilterOperator" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "845"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "846"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "847"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "847"
                  },
                  "globalScope" : true
                } ],
                "r" : "847"
              },
              "globalScope" : true
            } ],
            "r" : "848"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "846",
            "locator" : "262:49-262:53",
            "name" : "value"
          },
          "localId" : "847",
          "locator" : "262:49-262:59",
          "path" : "value"
        },
        "localId" : "848",
        "locator" : "262:1-262:59",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "849",
            "locator" : "263:32-263:41",
            "name" : "{http://hl7.org/fhir}FlagStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "FlagStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "849"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "850"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "851"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "851"
                  },
                  "globalScope" : true
                } ],
                "r" : "851"
              },
              "globalScope" : true
            } ],
            "r" : "852"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "850",
            "locator" : "263:45-263:49",
            "name" : "value"
          },
          "localId" : "851",
          "locator" : "263:45-263:55",
          "path" : "value"
        },
        "localId" : "852",
        "locator" : "263:1-263:55",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "853",
            "locator" : "264:32-264:50",
            "name" : "{http://hl7.org/fhir}GoalLifecycleStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "GoalLifecycleStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "853"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "854"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "855"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "855"
                  },
                  "globalScope" : true
                } ],
                "r" : "855"
              },
              "globalScope" : true
            } ],
            "r" : "856"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "854",
            "locator" : "264:54-264:58",
            "name" : "value"
          },
          "localId" : "855",
          "locator" : "264:54-264:64",
          "path" : "value"
        },
        "localId" : "856",
        "locator" : "264:1-264:64",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "857",
            "locator" : "265:32-265:51",
            "name" : "{http://hl7.org/fhir}GraphCompartmentRule"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "GraphCompartmentRule" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "857"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "858"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "859"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "859"
                  },
                  "globalScope" : true
                } ],
                "r" : "859"
              },
              "globalScope" : true
            } ],
            "r" : "860"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "858",
            "locator" : "265:55-265:59",
            "name" : "value"
          },
          "localId" : "859",
          "locator" : "265:55-265:65",
          "path" : "value"
        },
        "localId" : "860",
        "locator" : "265:1-265:65",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "861",
            "locator" : "266:32-266:50",
            "name" : "{http://hl7.org/fhir}GraphCompartmentUse"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "GraphCompartmentUse" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "861"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "862"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "863"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "863"
                  },
                  "globalScope" : true
                } ],
                "r" : "863"
              },
              "globalScope" : true
            } ],
            "r" : "864"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "862",
            "locator" : "266:54-266:58",
            "name" : "value"
          },
          "localId" : "863",
          "locator" : "266:54-266:64",
          "path" : "value"
        },
        "localId" : "864",
        "locator" : "266:1-266:64",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "865",
            "locator" : "267:32-267:43",
            "name" : "{http://hl7.org/fhir}GroupMeasure"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "GroupMeasure" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "865"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "866"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "867"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "867"
                  },
                  "globalScope" : true
                } ],
                "r" : "867"
              },
              "globalScope" : true
            } ],
            "r" : "868"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "866",
            "locator" : "267:47-267:51",
            "name" : "value"
          },
          "localId" : "867",
          "locator" : "267:47-267:57",
          "path" : "value"
        },
        "localId" : "868",
        "locator" : "267:1-267:57",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "869",
            "locator" : "268:32-268:40",
            "name" : "{http://hl7.org/fhir}GroupType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "GroupType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "869"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "870"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "871"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "871"
                  },
                  "globalScope" : true
                } ],
                "r" : "871"
              },
              "globalScope" : true
            } ],
            "r" : "872"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "870",
            "locator" : "268:44-268:48",
            "name" : "value"
          },
          "localId" : "871",
          "locator" : "268:44-268:54",
          "path" : "value"
        },
        "localId" : "872",
        "locator" : "268:1-268:54",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "873",
            "locator" : "269:32-269:53",
            "name" : "{http://hl7.org/fhir}GuidanceResponseStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "GuidanceResponseStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "873"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "874"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "875"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "875"
                  },
                  "globalScope" : true
                } ],
                "r" : "875"
              },
              "globalScope" : true
            } ],
            "r" : "876"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "874",
            "locator" : "269:57-269:61",
            "name" : "value"
          },
          "localId" : "875",
          "locator" : "269:57-269:67",
          "path" : "value"
        },
        "localId" : "876",
        "locator" : "269:1-269:67",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "877",
            "locator" : "270:32-270:50",
            "name" : "{http://hl7.org/fhir}GuidePageGeneration"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "GuidePageGeneration" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "877"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "878"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "879"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "879"
                  },
                  "globalScope" : true
                } ],
                "r" : "879"
              },
              "globalScope" : true
            } ],
            "r" : "880"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "878",
            "locator" : "270:54-270:58",
            "name" : "value"
          },
          "localId" : "879",
          "locator" : "270:54-270:64",
          "path" : "value"
        },
        "localId" : "880",
        "locator" : "270:1-270:64",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "881",
            "locator" : "271:32-271:49",
            "name" : "{http://hl7.org/fhir}GuideParameterCode"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "GuideParameterCode" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "881"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "882"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "883"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "883"
                  },
                  "globalScope" : true
                } ],
                "r" : "883"
              },
              "globalScope" : true
            } ],
            "r" : "884"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "882",
            "locator" : "271:53-271:57",
            "name" : "value"
          },
          "localId" : "883",
          "locator" : "271:53-271:63",
          "path" : "value"
        },
        "localId" : "884",
        "locator" : "271:1-271:63",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "885",
            "locator" : "272:32-272:39",
            "name" : "{http://hl7.org/fhir}HTTPVerb"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "HTTPVerb" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "885"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "886"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "887"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "887"
                  },
                  "globalScope" : true
                } ],
                "r" : "887"
              },
              "globalScope" : true
            } ],
            "r" : "888"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "886",
            "locator" : "272:43-272:47",
            "name" : "value"
          },
          "localId" : "887",
          "locator" : "272:43-272:53",
          "path" : "value"
        },
        "localId" : "888",
        "locator" : "272:1-272:53",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "889",
            "locator" : "273:32-273:44",
            "name" : "{http://hl7.org/fhir}IdentifierUse"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "IdentifierUse" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "889"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "890"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "891"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "891"
                  },
                  "globalScope" : true
                } ],
                "r" : "891"
              },
              "globalScope" : true
            } ],
            "r" : "892"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "890",
            "locator" : "273:48-273:52",
            "name" : "value"
          },
          "localId" : "891",
          "locator" : "273:48-273:58",
          "path" : "value"
        },
        "localId" : "892",
        "locator" : "273:1-273:58",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "893",
            "locator" : "274:32-274:53",
            "name" : "{http://hl7.org/fhir}IdentityAssuranceLevel"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "IdentityAssuranceLevel" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "893"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "894"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "895"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "895"
                  },
                  "globalScope" : true
                } ],
                "r" : "895"
              },
              "globalScope" : true
            } ],
            "r" : "896"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "894",
            "locator" : "274:57-274:61",
            "name" : "value"
          },
          "localId" : "895",
          "locator" : "274:57-274:67",
          "path" : "value"
        },
        "localId" : "896",
        "locator" : "274:1-274:67",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "897",
            "locator" : "275:32-275:49",
            "name" : "{http://hl7.org/fhir}ImagingStudyStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ImagingStudyStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "897"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "898"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "899"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "899"
                  },
                  "globalScope" : true
                } ],
                "r" : "899"
              },
              "globalScope" : true
            } ],
            "r" : "900"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "898",
            "locator" : "275:53-275:57",
            "name" : "value"
          },
          "localId" : "899",
          "locator" : "275:53-275:63",
          "path" : "value"
        },
        "localId" : "900",
        "locator" : "275:1-275:63",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "901",
            "locator" : "276:32-276:59",
            "name" : "{http://hl7.org/fhir}ImmunizationEvaluationStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ImmunizationEvaluationStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "901"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "902"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "903"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "903"
                  },
                  "globalScope" : true
                } ],
                "r" : "903"
              },
              "globalScope" : true
            } ],
            "r" : "904"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "902",
            "locator" : "276:63-276:67",
            "name" : "value"
          },
          "localId" : "903",
          "locator" : "276:63-276:73",
          "path" : "value"
        },
        "localId" : "904",
        "locator" : "276:1-276:73",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "905",
            "locator" : "277:32-277:49",
            "name" : "{http://hl7.org/fhir}ImmunizationStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ImmunizationStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "905"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "906"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "907"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "907"
                  },
                  "globalScope" : true
                } ],
                "r" : "907"
              },
              "globalScope" : true
            } ],
            "r" : "908"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "906",
            "locator" : "277:53-277:57",
            "name" : "value"
          },
          "localId" : "907",
          "locator" : "277:53-277:63",
          "path" : "value"
        },
        "localId" : "908",
        "locator" : "277:1-277:63",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "909",
            "locator" : "278:32-278:56",
            "name" : "{http://hl7.org/fhir}InvoicePriceComponentType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "InvoicePriceComponentType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "909"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "910"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "911"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "911"
                  },
                  "globalScope" : true
                } ],
                "r" : "911"
              },
              "globalScope" : true
            } ],
            "r" : "912"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "910",
            "locator" : "278:60-278:64",
            "name" : "value"
          },
          "localId" : "911",
          "locator" : "278:60-278:70",
          "path" : "value"
        },
        "localId" : "912",
        "locator" : "278:1-278:70",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "913",
            "locator" : "279:32-279:44",
            "name" : "{http://hl7.org/fhir}InvoiceStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "InvoiceStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "913"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "914"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "915"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "915"
                  },
                  "globalScope" : true
                } ],
                "r" : "915"
              },
              "globalScope" : true
            } ],
            "r" : "916"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "914",
            "locator" : "279:48-279:52",
            "name" : "value"
          },
          "localId" : "915",
          "locator" : "279:48-279:58",
          "path" : "value"
        },
        "localId" : "916",
        "locator" : "279:1-279:58",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "917",
            "locator" : "280:32-280:44",
            "name" : "{http://hl7.org/fhir}IssueSeverity"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "IssueSeverity" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "917"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "918"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "919"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "919"
                  },
                  "globalScope" : true
                } ],
                "r" : "919"
              },
              "globalScope" : true
            } ],
            "r" : "920"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "918",
            "locator" : "280:48-280:52",
            "name" : "value"
          },
          "localId" : "919",
          "locator" : "280:48-280:58",
          "path" : "value"
        },
        "localId" : "920",
        "locator" : "280:1-280:58",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "921",
            "locator" : "281:32-281:40",
            "name" : "{http://hl7.org/fhir}IssueType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "IssueType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "921"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "922"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "923"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "923"
                  },
                  "globalScope" : true
                } ],
                "r" : "923"
              },
              "globalScope" : true
            } ],
            "r" : "924"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "922",
            "locator" : "281:44-281:48",
            "name" : "value"
          },
          "localId" : "923",
          "locator" : "281:44-281:54",
          "path" : "value"
        },
        "localId" : "924",
        "locator" : "281:1-281:54",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "925",
            "locator" : "282:32-282:39",
            "name" : "{http://hl7.org/fhir}LinkType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "LinkType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "925"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "926"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "927"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "927"
                  },
                  "globalScope" : true
                } ],
                "r" : "927"
              },
              "globalScope" : true
            } ],
            "r" : "928"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "926",
            "locator" : "282:43-282:47",
            "name" : "value"
          },
          "localId" : "927",
          "locator" : "282:43-282:53",
          "path" : "value"
        },
        "localId" : "928",
        "locator" : "282:1-282:53",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "929",
            "locator" : "283:32-283:42",
            "name" : "{http://hl7.org/fhir}LinkageType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "LinkageType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "929"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "930"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "931"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "931"
                  },
                  "globalScope" : true
                } ],
                "r" : "931"
              },
              "globalScope" : true
            } ],
            "r" : "932"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "930",
            "locator" : "283:46-283:50",
            "name" : "value"
          },
          "localId" : "931",
          "locator" : "283:46-283:56",
          "path" : "value"
        },
        "localId" : "932",
        "locator" : "283:1-283:56",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "933",
            "locator" : "284:32-284:39",
            "name" : "{http://hl7.org/fhir}ListMode"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ListMode" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "933"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "934"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "935"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "935"
                  },
                  "globalScope" : true
                } ],
                "r" : "935"
              },
              "globalScope" : true
            } ],
            "r" : "936"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "934",
            "locator" : "284:43-284:47",
            "name" : "value"
          },
          "localId" : "935",
          "locator" : "284:43-284:53",
          "path" : "value"
        },
        "localId" : "936",
        "locator" : "284:1-284:53",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "937",
            "locator" : "285:32-285:41",
            "name" : "{http://hl7.org/fhir}ListStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ListStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "937"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "938"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "939"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "939"
                  },
                  "globalScope" : true
                } ],
                "r" : "939"
              },
              "globalScope" : true
            } ],
            "r" : "940"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "938",
            "locator" : "285:45-285:49",
            "name" : "value"
          },
          "localId" : "939",
          "locator" : "285:45-285:55",
          "path" : "value"
        },
        "localId" : "940",
        "locator" : "285:1-285:55",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "941",
            "locator" : "286:32-286:43",
            "name" : "{http://hl7.org/fhir}LocationMode"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "LocationMode" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "941"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "942"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "943"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "943"
                  },
                  "globalScope" : true
                } ],
                "r" : "943"
              },
              "globalScope" : true
            } ],
            "r" : "944"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "942",
            "locator" : "286:47-286:51",
            "name" : "value"
          },
          "localId" : "943",
          "locator" : "286:47-286:57",
          "path" : "value"
        },
        "localId" : "944",
        "locator" : "286:1-286:57",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "945",
            "locator" : "287:32-287:45",
            "name" : "{http://hl7.org/fhir}LocationStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "LocationStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "945"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "946"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "947"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "947"
                  },
                  "globalScope" : true
                } ],
                "r" : "947"
              },
              "globalScope" : true
            } ],
            "r" : "948"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "946",
            "locator" : "287:49-287:53",
            "name" : "value"
          },
          "localId" : "947",
          "locator" : "287:49-287:59",
          "path" : "value"
        },
        "localId" : "948",
        "locator" : "287:1-287:59",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "949",
            "locator" : "288:32-288:50",
            "name" : "{http://hl7.org/fhir}MeasureReportStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "MeasureReportStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "949"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "950"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "951"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "951"
                  },
                  "globalScope" : true
                } ],
                "r" : "951"
              },
              "globalScope" : true
            } ],
            "r" : "952"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "950",
            "locator" : "288:54-288:58",
            "name" : "value"
          },
          "localId" : "951",
          "locator" : "288:54-288:64",
          "path" : "value"
        },
        "localId" : "952",
        "locator" : "288:1-288:64",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "953",
            "locator" : "289:32-289:48",
            "name" : "{http://hl7.org/fhir}MeasureReportType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "MeasureReportType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "953"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "954"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "955"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "955"
                  },
                  "globalScope" : true
                } ],
                "r" : "955"
              },
              "globalScope" : true
            } ],
            "r" : "956"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "954",
            "locator" : "289:52-289:56",
            "name" : "value"
          },
          "localId" : "955",
          "locator" : "289:52-289:62",
          "path" : "value"
        },
        "localId" : "956",
        "locator" : "289:1-289:62",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "957",
            "locator" : "290:32-290:42",
            "name" : "{http://hl7.org/fhir}MediaStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "MediaStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "957"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "958"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "959"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "959"
                  },
                  "globalScope" : true
                } ],
                "r" : "959"
              },
              "globalScope" : true
            } ],
            "r" : "960"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "958",
            "locator" : "290:46-290:50",
            "name" : "value"
          },
          "localId" : "959",
          "locator" : "290:46-290:56",
          "path" : "value"
        },
        "localId" : "960",
        "locator" : "290:1-290:56",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "961",
            "locator" : "291:32-291:61",
            "name" : "{http://hl7.org/fhir}MedicationAdministrationStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "MedicationAdministrationStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "961"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "962"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "963"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "963"
                  },
                  "globalScope" : true
                } ],
                "r" : "963"
              },
              "globalScope" : true
            } ],
            "r" : "964"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "962",
            "locator" : "291:65-291:69",
            "name" : "value"
          },
          "localId" : "963",
          "locator" : "291:65-291:75",
          "path" : "value"
        },
        "localId" : "964",
        "locator" : "291:1-291:75",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "965",
            "locator" : "292:32-292:55",
            "name" : "{http://hl7.org/fhir}MedicationDispenseStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "MedicationDispenseStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "965"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "966"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "967"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "967"
                  },
                  "globalScope" : true
                } ],
                "r" : "967"
              },
              "globalScope" : true
            } ],
            "r" : "968"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "966",
            "locator" : "292:59-292:63",
            "name" : "value"
          },
          "localId" : "967",
          "locator" : "292:59-292:69",
          "path" : "value"
        },
        "localId" : "968",
        "locator" : "292:1-292:69",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "969",
            "locator" : "293:32-293:56",
            "name" : "{http://hl7.org/fhir}MedicationKnowledgeStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "MedicationKnowledgeStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "969"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "970"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "971"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "971"
                  },
                  "globalScope" : true
                } ],
                "r" : "971"
              },
              "globalScope" : true
            } ],
            "r" : "972"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "970",
            "locator" : "293:60-293:64",
            "name" : "value"
          },
          "localId" : "971",
          "locator" : "293:60-293:70",
          "path" : "value"
        },
        "localId" : "972",
        "locator" : "293:1-293:70",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "973",
            "locator" : "294:32-294:54",
            "name" : "{http://hl7.org/fhir}MedicationRequestIntent"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "MedicationRequestIntent" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "973"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "974"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "975"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "975"
                  },
                  "globalScope" : true
                } ],
                "r" : "975"
              },
              "globalScope" : true
            } ],
            "r" : "976"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "974",
            "locator" : "294:58-294:62",
            "name" : "value"
          },
          "localId" : "975",
          "locator" : "294:58-294:68",
          "path" : "value"
        },
        "localId" : "976",
        "locator" : "294:1-294:68",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "977",
            "locator" : "295:32-295:56",
            "name" : "{http://hl7.org/fhir}MedicationRequestPriority"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "MedicationRequestPriority" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "977"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "978"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "979"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "979"
                  },
                  "globalScope" : true
                } ],
                "r" : "979"
              },
              "globalScope" : true
            } ],
            "r" : "980"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "978",
            "locator" : "295:60-295:64",
            "name" : "value"
          },
          "localId" : "979",
          "locator" : "295:60-295:70",
          "path" : "value"
        },
        "localId" : "980",
        "locator" : "295:1-295:70",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "981",
            "locator" : "296:32-296:54",
            "name" : "{http://hl7.org/fhir}MedicationRequestStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "MedicationRequestStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "981"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "982"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "983"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "983"
                  },
                  "globalScope" : true
                } ],
                "r" : "983"
              },
              "globalScope" : true
            } ],
            "r" : "984"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "982",
            "locator" : "296:58-296:62",
            "name" : "value"
          },
          "localId" : "983",
          "locator" : "296:58-296:68",
          "path" : "value"
        },
        "localId" : "984",
        "locator" : "296:1-296:68",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "985",
            "locator" : "297:32-297:56",
            "name" : "{http://hl7.org/fhir}MedicationStatementStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "MedicationStatementStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "985"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "986"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "987"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "987"
                  },
                  "globalScope" : true
                } ],
                "r" : "987"
              },
              "globalScope" : true
            } ],
            "r" : "988"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "986",
            "locator" : "297:60-297:64",
            "name" : "value"
          },
          "localId" : "987",
          "locator" : "297:60-297:70",
          "path" : "value"
        },
        "localId" : "988",
        "locator" : "297:1-297:70",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "989",
            "locator" : "298:32-298:47",
            "name" : "{http://hl7.org/fhir}MedicationStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "MedicationStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "989"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "990"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "991"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "991"
                  },
                  "globalScope" : true
                } ],
                "r" : "991"
              },
              "globalScope" : true
            } ],
            "r" : "992"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "990",
            "locator" : "298:51-298:55",
            "name" : "value"
          },
          "localId" : "991",
          "locator" : "298:51-298:61",
          "path" : "value"
        },
        "localId" : "992",
        "locator" : "298:1-298:61",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "993",
            "locator" : "299:32-299:58",
            "name" : "{http://hl7.org/fhir}MessageSignificanceCategory"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "MessageSignificanceCategory" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "993"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "994"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "995"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "995"
                  },
                  "globalScope" : true
                } ],
                "r" : "995"
              },
              "globalScope" : true
            } ],
            "r" : "996"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "994",
            "locator" : "299:62-299:66",
            "name" : "value"
          },
          "localId" : "995",
          "locator" : "299:62-299:72",
          "path" : "value"
        },
        "localId" : "996",
        "locator" : "299:1-299:72",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "997",
            "locator" : "300:32-300:61",
            "name" : "{http://hl7.org/fhir}Messageheader_Response_Request"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Messageheader_Response_Request" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "997"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "998"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "999"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "999"
                  },
                  "globalScope" : true
                } ],
                "r" : "999"
              },
              "globalScope" : true
            } ],
            "r" : "1000"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "998",
            "locator" : "300:65-300:69",
            "name" : "value"
          },
          "localId" : "999",
          "locator" : "300:65-300:75",
          "path" : "value"
        },
        "localId" : "1000",
        "locator" : "300:1-300:75",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1001",
            "locator" : "301:32-301:39",
            "name" : "{http://hl7.org/fhir}MimeType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "MimeType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1001"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1002"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1003"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1003"
                  },
                  "globalScope" : true
                } ],
                "r" : "1003"
              },
              "globalScope" : true
            } ],
            "r" : "1004"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1002",
            "locator" : "301:43-301:47",
            "name" : "value"
          },
          "localId" : "1003",
          "locator" : "301:43-301:53",
          "path" : "value"
        },
        "localId" : "1004",
        "locator" : "301:1-301:53",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1005",
            "locator" : "302:32-302:38",
            "name" : "{http://hl7.org/fhir}NameUse"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "NameUse" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1005"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1006"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1007"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1007"
                  },
                  "globalScope" : true
                } ],
                "r" : "1007"
              },
              "globalScope" : true
            } ],
            "r" : "1008"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1006",
            "locator" : "302:42-302:46",
            "name" : "value"
          },
          "localId" : "1007",
          "locator" : "302:42-302:52",
          "path" : "value"
        },
        "localId" : "1008",
        "locator" : "302:1-302:52",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1009",
            "locator" : "303:32-303:57",
            "name" : "{http://hl7.org/fhir}NamingSystemIdentifierType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "NamingSystemIdentifierType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1009"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1010"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1011"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1011"
                  },
                  "globalScope" : true
                } ],
                "r" : "1011"
              },
              "globalScope" : true
            } ],
            "r" : "1012"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1010",
            "locator" : "303:61-303:65",
            "name" : "value"
          },
          "localId" : "1011",
          "locator" : "303:61-303:71",
          "path" : "value"
        },
        "localId" : "1012",
        "locator" : "303:1-303:71",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1013",
            "locator" : "304:32-304:47",
            "name" : "{http://hl7.org/fhir}NamingSystemType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "NamingSystemType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1013"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1014"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1015"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1015"
                  },
                  "globalScope" : true
                } ],
                "r" : "1015"
              },
              "globalScope" : true
            } ],
            "r" : "1016"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1014",
            "locator" : "304:51-304:55",
            "name" : "value"
          },
          "localId" : "1015",
          "locator" : "304:51-304:61",
          "path" : "value"
        },
        "localId" : "1016",
        "locator" : "304:1-304:61",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1017",
            "locator" : "305:32-305:46",
            "name" : "{http://hl7.org/fhir}NarrativeStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "NarrativeStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1017"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1018"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1019"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1019"
                  },
                  "globalScope" : true
                } ],
                "r" : "1019"
              },
              "globalScope" : true
            } ],
            "r" : "1020"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1018",
            "locator" : "305:50-305:54",
            "name" : "value"
          },
          "localId" : "1019",
          "locator" : "305:50-305:60",
          "path" : "value"
        },
        "localId" : "1020",
        "locator" : "305:1-305:60",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1021",
            "locator" : "306:32-306:39",
            "name" : "{http://hl7.org/fhir}NoteType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "NoteType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1021"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1022"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1023"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1023"
                  },
                  "globalScope" : true
                } ],
                "r" : "1023"
              },
              "globalScope" : true
            } ],
            "r" : "1024"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1022",
            "locator" : "306:43-306:47",
            "name" : "value"
          },
          "localId" : "1023",
          "locator" : "306:43-306:53",
          "path" : "value"
        },
        "localId" : "1024",
        "locator" : "306:1-306:53",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1025",
            "locator" : "307:32-307:52",
            "name" : "{http://hl7.org/fhir}NutritiionOrderIntent"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "NutritiionOrderIntent" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1025"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1026"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1027"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1027"
                  },
                  "globalScope" : true
                } ],
                "r" : "1027"
              },
              "globalScope" : true
            } ],
            "r" : "1028"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1026",
            "locator" : "307:56-307:60",
            "name" : "value"
          },
          "localId" : "1027",
          "locator" : "307:56-307:66",
          "path" : "value"
        },
        "localId" : "1028",
        "locator" : "307:1-307:66",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1029",
            "locator" : "308:32-308:51",
            "name" : "{http://hl7.org/fhir}NutritionOrderStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "NutritionOrderStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1029"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1030"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1031"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1031"
                  },
                  "globalScope" : true
                } ],
                "r" : "1031"
              },
              "globalScope" : true
            } ],
            "r" : "1032"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1030",
            "locator" : "308:55-308:59",
            "name" : "value"
          },
          "localId" : "1031",
          "locator" : "308:55-308:65",
          "path" : "value"
        },
        "localId" : "1032",
        "locator" : "308:1-308:65",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1033",
            "locator" : "309:32-309:50",
            "name" : "{http://hl7.org/fhir}ObservationDataType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ObservationDataType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1033"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1034"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1035"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1035"
                  },
                  "globalScope" : true
                } ],
                "r" : "1035"
              },
              "globalScope" : true
            } ],
            "r" : "1036"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1034",
            "locator" : "309:54-309:58",
            "name" : "value"
          },
          "localId" : "1035",
          "locator" : "309:54-309:64",
          "path" : "value"
        },
        "localId" : "1036",
        "locator" : "309:1-309:64",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1037",
            "locator" : "310:32-310:55",
            "name" : "{http://hl7.org/fhir}ObservationRangeCategory"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ObservationRangeCategory" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1037"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1038"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1039"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1039"
                  },
                  "globalScope" : true
                } ],
                "r" : "1039"
              },
              "globalScope" : true
            } ],
            "r" : "1040"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1038",
            "locator" : "310:59-310:63",
            "name" : "value"
          },
          "localId" : "1039",
          "locator" : "310:59-310:69",
          "path" : "value"
        },
        "localId" : "1040",
        "locator" : "310:1-310:69",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1041",
            "locator" : "311:32-311:48",
            "name" : "{http://hl7.org/fhir}ObservationStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ObservationStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1041"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1042"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1043"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1043"
                  },
                  "globalScope" : true
                } ],
                "r" : "1043"
              },
              "globalScope" : true
            } ],
            "r" : "1044"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1042",
            "locator" : "311:52-311:56",
            "name" : "value"
          },
          "localId" : "1043",
          "locator" : "311:52-311:62",
          "path" : "value"
        },
        "localId" : "1044",
        "locator" : "311:1-311:62",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1045",
            "locator" : "312:32-312:44",
            "name" : "{http://hl7.org/fhir}OperationKind"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "OperationKind" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1045"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1046"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1047"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1047"
                  },
                  "globalScope" : true
                } ],
                "r" : "1047"
              },
              "globalScope" : true
            } ],
            "r" : "1048"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1046",
            "locator" : "312:48-312:52",
            "name" : "value"
          },
          "localId" : "1047",
          "locator" : "312:48-312:58",
          "path" : "value"
        },
        "localId" : "1048",
        "locator" : "312:1-312:58",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1049",
            "locator" : "313:32-313:52",
            "name" : "{http://hl7.org/fhir}OperationParameterUse"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "OperationParameterUse" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1049"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1050"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1051"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1051"
                  },
                  "globalScope" : true
                } ],
                "r" : "1051"
              },
              "globalScope" : true
            } ],
            "r" : "1052"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1050",
            "locator" : "313:56-313:60",
            "name" : "value"
          },
          "localId" : "1051",
          "locator" : "313:56-313:66",
          "path" : "value"
        },
        "localId" : "1052",
        "locator" : "313:1-313:66",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1053",
            "locator" : "314:32-314:46",
            "name" : "{http://hl7.org/fhir}OrientationType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "OrientationType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1053"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1054"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1055"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1055"
                  },
                  "globalScope" : true
                } ],
                "r" : "1055"
              },
              "globalScope" : true
            } ],
            "r" : "1056"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1054",
            "locator" : "314:50-314:54",
            "name" : "value"
          },
          "localId" : "1055",
          "locator" : "314:50-314:60",
          "path" : "value"
        },
        "localId" : "1056",
        "locator" : "314:1-314:60",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1057",
            "locator" : "315:32-315:43",
            "name" : "{http://hl7.org/fhir}ParameterUse"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ParameterUse" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1057"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1058"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1059"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1059"
                  },
                  "globalScope" : true
                } ],
                "r" : "1059"
              },
              "globalScope" : true
            } ],
            "r" : "1060"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1058",
            "locator" : "315:47-315:51",
            "name" : "value"
          },
          "localId" : "1059",
          "locator" : "315:47-315:57",
          "path" : "value"
        },
        "localId" : "1060",
        "locator" : "315:1-315:57",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1061",
            "locator" : "316:32-316:50",
            "name" : "{http://hl7.org/fhir}ParticipantRequired"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ParticipantRequired" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1061"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1062"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1063"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1063"
                  },
                  "globalScope" : true
                } ],
                "r" : "1063"
              },
              "globalScope" : true
            } ],
            "r" : "1064"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1062",
            "locator" : "316:54-316:58",
            "name" : "value"
          },
          "localId" : "1063",
          "locator" : "316:54-316:64",
          "path" : "value"
        },
        "localId" : "1064",
        "locator" : "316:1-316:64",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1065",
            "locator" : "317:32-317:48",
            "name" : "{http://hl7.org/fhir}ParticipantStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ParticipantStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1065"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1066"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1067"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1067"
                  },
                  "globalScope" : true
                } ],
                "r" : "1067"
              },
              "globalScope" : true
            } ],
            "r" : "1068"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1066",
            "locator" : "317:52-317:56",
            "name" : "value"
          },
          "localId" : "1067",
          "locator" : "317:52-317:62",
          "path" : "value"
        },
        "localId" : "1068",
        "locator" : "317:1-317:62",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1069",
            "locator" : "318:32-318:50",
            "name" : "{http://hl7.org/fhir}ParticipationStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ParticipationStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1069"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1070"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1071"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1071"
                  },
                  "globalScope" : true
                } ],
                "r" : "1071"
              },
              "globalScope" : true
            } ],
            "r" : "1072"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1070",
            "locator" : "318:54-318:58",
            "name" : "value"
          },
          "localId" : "1071",
          "locator" : "318:54-318:64",
          "path" : "value"
        },
        "localId" : "1072",
        "locator" : "318:1-318:64",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1073",
            "locator" : "319:32-319:50",
            "name" : "{http://hl7.org/fhir}PaymentNoticeStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "PaymentNoticeStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1073"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1074"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1075"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1075"
                  },
                  "globalScope" : true
                } ],
                "r" : "1075"
              },
              "globalScope" : true
            } ],
            "r" : "1076"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1074",
            "locator" : "319:54-319:58",
            "name" : "value"
          },
          "localId" : "1075",
          "locator" : "319:54-319:64",
          "path" : "value"
        },
        "localId" : "1076",
        "locator" : "319:1-319:64",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1077",
            "locator" : "320:32-320:58",
            "name" : "{http://hl7.org/fhir}PaymentReconciliationStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "PaymentReconciliationStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1077"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1078"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1079"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1079"
                  },
                  "globalScope" : true
                } ],
                "r" : "1079"
              },
              "globalScope" : true
            } ],
            "r" : "1080"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1078",
            "locator" : "320:62-320:66",
            "name" : "value"
          },
          "localId" : "1079",
          "locator" : "320:62-320:72",
          "path" : "value"
        },
        "localId" : "1080",
        "locator" : "320:1-320:72",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1081",
            "locator" : "321:32-321:46",
            "name" : "{http://hl7.org/fhir}ProcedureStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ProcedureStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1081"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1082"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1083"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1083"
                  },
                  "globalScope" : true
                } ],
                "r" : "1083"
              },
              "globalScope" : true
            } ],
            "r" : "1084"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1082",
            "locator" : "321:50-321:54",
            "name" : "value"
          },
          "localId" : "1083",
          "locator" : "321:50-321:60",
          "path" : "value"
        },
        "localId" : "1084",
        "locator" : "321:1-321:60",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1085",
            "locator" : "322:32-322:53",
            "name" : "{http://hl7.org/fhir}PropertyRepresentation"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "PropertyRepresentation" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1085"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1086"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1087"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1087"
                  },
                  "globalScope" : true
                } ],
                "r" : "1087"
              },
              "globalScope" : true
            } ],
            "r" : "1088"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1086",
            "locator" : "322:57-322:61",
            "name" : "value"
          },
          "localId" : "1087",
          "locator" : "322:57-322:67",
          "path" : "value"
        },
        "localId" : "1088",
        "locator" : "322:1-322:67",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1089",
            "locator" : "323:32-323:43",
            "name" : "{http://hl7.org/fhir}PropertyType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "PropertyType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1089"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1090"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1091"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1091"
                  },
                  "globalScope" : true
                } ],
                "r" : "1091"
              },
              "globalScope" : true
            } ],
            "r" : "1092"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1090",
            "locator" : "323:47-323:51",
            "name" : "value"
          },
          "localId" : "1091",
          "locator" : "323:47-323:57",
          "path" : "value"
        },
        "localId" : "1092",
        "locator" : "323:1-323:57",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1093",
            "locator" : "324:32-324:51",
            "name" : "{http://hl7.org/fhir}ProvenanceEntityRole"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ProvenanceEntityRole" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1093"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1094"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1095"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1095"
                  },
                  "globalScope" : true
                } ],
                "r" : "1095"
              },
              "globalScope" : true
            } ],
            "r" : "1096"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1094",
            "locator" : "324:55-324:59",
            "name" : "value"
          },
          "localId" : "1095",
          "locator" : "324:55-324:65",
          "path" : "value"
        },
        "localId" : "1096",
        "locator" : "324:1-324:65",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1097",
            "locator" : "325:32-325:48",
            "name" : "{http://hl7.org/fhir}PublicationStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "PublicationStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1097"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1098"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1099"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1099"
                  },
                  "globalScope" : true
                } ],
                "r" : "1099"
              },
              "globalScope" : true
            } ],
            "r" : "1100"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1098",
            "locator" : "325:52-325:56",
            "name" : "value"
          },
          "localId" : "1099",
          "locator" : "325:52-325:62",
          "path" : "value"
        },
        "localId" : "1100",
        "locator" : "325:1-325:62",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1101",
            "locator" : "326:32-326:42",
            "name" : "{http://hl7.org/fhir}QualityType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "QualityType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1101"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1102"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1103"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1103"
                  },
                  "globalScope" : true
                } ],
                "r" : "1103"
              },
              "globalScope" : true
            } ],
            "r" : "1104"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1102",
            "locator" : "326:46-326:50",
            "name" : "value"
          },
          "localId" : "1103",
          "locator" : "326:46-326:56",
          "path" : "value"
        },
        "localId" : "1104",
        "locator" : "326:1-326:56",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1105",
            "locator" : "327:32-327:49",
            "name" : "{http://hl7.org/fhir}QuantityComparator"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "QuantityComparator" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1105"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1106"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1107"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1107"
                  },
                  "globalScope" : true
                } ],
                "r" : "1107"
              },
              "globalScope" : true
            } ],
            "r" : "1108"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1106",
            "locator" : "327:53-327:57",
            "name" : "value"
          },
          "localId" : "1107",
          "locator" : "327:53-327:63",
          "path" : "value"
        },
        "localId" : "1108",
        "locator" : "327:1-327:63",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1109",
            "locator" : "328:32-328:56",
            "name" : "{http://hl7.org/fhir}QuestionnaireItemOperator"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "QuestionnaireItemOperator" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1109"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1110"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1111"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1111"
                  },
                  "globalScope" : true
                } ],
                "r" : "1111"
              },
              "globalScope" : true
            } ],
            "r" : "1112"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1110",
            "locator" : "328:60-328:64",
            "name" : "value"
          },
          "localId" : "1111",
          "locator" : "328:60-328:70",
          "path" : "value"
        },
        "localId" : "1112",
        "locator" : "328:1-328:70",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1113",
            "locator" : "329:32-329:52",
            "name" : "{http://hl7.org/fhir}QuestionnaireItemType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "QuestionnaireItemType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1113"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1114"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1115"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1115"
                  },
                  "globalScope" : true
                } ],
                "r" : "1115"
              },
              "globalScope" : true
            } ],
            "r" : "1116"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1114",
            "locator" : "329:56-329:60",
            "name" : "value"
          },
          "localId" : "1115",
          "locator" : "329:56-329:66",
          "path" : "value"
        },
        "localId" : "1116",
        "locator" : "329:1-329:66",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1117",
            "locator" : "330:32-330:58",
            "name" : "{http://hl7.org/fhir}QuestionnaireResponseStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "QuestionnaireResponseStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1117"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1118"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1119"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1119"
                  },
                  "globalScope" : true
                } ],
                "r" : "1119"
              },
              "globalScope" : true
            } ],
            "r" : "1120"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1118",
            "locator" : "330:62-330:66",
            "name" : "value"
          },
          "localId" : "1119",
          "locator" : "330:62-330:72",
          "path" : "value"
        },
        "localId" : "1120",
        "locator" : "330:1-330:72",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1121",
            "locator" : "331:32-331:54",
            "name" : "{http://hl7.org/fhir}ReferenceHandlingPolicy"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ReferenceHandlingPolicy" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1121"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1122"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1123"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1123"
                  },
                  "globalScope" : true
                } ],
                "r" : "1123"
              },
              "globalScope" : true
            } ],
            "r" : "1124"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1122",
            "locator" : "331:58-331:62",
            "name" : "value"
          },
          "localId" : "1123",
          "locator" : "331:58-331:68",
          "path" : "value"
        },
        "localId" : "1124",
        "locator" : "331:1-331:68",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1125",
            "locator" : "332:32-332:52",
            "name" : "{http://hl7.org/fhir}ReferenceVersionRules"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ReferenceVersionRules" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1125"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1126"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1127"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1127"
                  },
                  "globalScope" : true
                } ],
                "r" : "1127"
              },
              "globalScope" : true
            } ],
            "r" : "1128"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1126",
            "locator" : "332:56-332:60",
            "name" : "value"
          },
          "localId" : "1127",
          "locator" : "332:56-332:66",
          "path" : "value"
        },
        "localId" : "1128",
        "locator" : "332:1-332:66",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1129",
            "locator" : "333:32-333:53",
            "name" : "{http://hl7.org/fhir}ReferredDocumentStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ReferredDocumentStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1129"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1130"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1131"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1131"
                  },
                  "globalScope" : true
                } ],
                "r" : "1131"
              },
              "globalScope" : true
            } ],
            "r" : "1132"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1130",
            "locator" : "333:57-333:61",
            "name" : "value"
          },
          "localId" : "1131",
          "locator" : "333:57-333:67",
          "path" : "value"
        },
        "localId" : "1132",
        "locator" : "333:1-333:67",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1133",
            "locator" : "334:32-334:50",
            "name" : "{http://hl7.org/fhir}RelatedArtifactType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "RelatedArtifactType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1133"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1134"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1135"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1135"
                  },
                  "globalScope" : true
                } ],
                "r" : "1135"
              },
              "globalScope" : true
            } ],
            "r" : "1136"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1134",
            "locator" : "334:54-334:58",
            "name" : "value"
          },
          "localId" : "1135",
          "locator" : "334:54-334:64",
          "path" : "value"
        },
        "localId" : "1136",
        "locator" : "334:1-334:64",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1137",
            "locator" : "335:32-335:48",
            "name" : "{http://hl7.org/fhir}RemittanceOutcome"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "RemittanceOutcome" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1137"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1138"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1139"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1139"
                  },
                  "globalScope" : true
                } ],
                "r" : "1139"
              },
              "globalScope" : true
            } ],
            "r" : "1140"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1138",
            "locator" : "335:52-335:56",
            "name" : "value"
          },
          "localId" : "1139",
          "locator" : "335:52-335:62",
          "path" : "value"
        },
        "localId" : "1140",
        "locator" : "335:1-335:62",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1141",
            "locator" : "336:32-336:45",
            "name" : "{http://hl7.org/fhir}RepositoryType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "RepositoryType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1141"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1142"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1143"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1143"
                  },
                  "globalScope" : true
                } ],
                "r" : "1143"
              },
              "globalScope" : true
            } ],
            "r" : "1144"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1142",
            "locator" : "336:49-336:53",
            "name" : "value"
          },
          "localId" : "1143",
          "locator" : "336:49-336:59",
          "path" : "value"
        },
        "localId" : "1144",
        "locator" : "336:1-336:59",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1145",
            "locator" : "337:32-337:44",
            "name" : "{http://hl7.org/fhir}RequestIntent"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "RequestIntent" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1145"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1146"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1147"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1147"
                  },
                  "globalScope" : true
                } ],
                "r" : "1147"
              },
              "globalScope" : true
            } ],
            "r" : "1148"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1146",
            "locator" : "337:48-337:52",
            "name" : "value"
          },
          "localId" : "1147",
          "locator" : "337:48-337:58",
          "path" : "value"
        },
        "localId" : "1148",
        "locator" : "337:1-337:58",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1149",
            "locator" : "338:32-338:46",
            "name" : "{http://hl7.org/fhir}RequestPriority"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "RequestPriority" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1149"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1150"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1151"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1151"
                  },
                  "globalScope" : true
                } ],
                "r" : "1151"
              },
              "globalScope" : true
            } ],
            "r" : "1152"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1150",
            "locator" : "338:50-338:54",
            "name" : "value"
          },
          "localId" : "1151",
          "locator" : "338:50-338:60",
          "path" : "value"
        },
        "localId" : "1152",
        "locator" : "338:1-338:60",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1153",
            "locator" : "339:32-339:44",
            "name" : "{http://hl7.org/fhir}RequestStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "RequestStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1153"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1154"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1155"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1155"
                  },
                  "globalScope" : true
                } ],
                "r" : "1155"
              },
              "globalScope" : true
            } ],
            "r" : "1156"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1154",
            "locator" : "339:48-339:52",
            "name" : "value"
          },
          "localId" : "1155",
          "locator" : "339:48-339:58",
          "path" : "value"
        },
        "localId" : "1156",
        "locator" : "339:1-339:58",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1157",
            "locator" : "340:32-340:50",
            "name" : "{http://hl7.org/fhir}ResearchElementType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ResearchElementType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1157"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1158"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1159"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1159"
                  },
                  "globalScope" : true
                } ],
                "r" : "1159"
              },
              "globalScope" : true
            } ],
            "r" : "1160"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1158",
            "locator" : "340:54-340:58",
            "name" : "value"
          },
          "localId" : "1159",
          "locator" : "340:54-340:64",
          "path" : "value"
        },
        "localId" : "1160",
        "locator" : "340:1-340:64",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1161",
            "locator" : "341:32-341:50",
            "name" : "{http://hl7.org/fhir}ResearchStudyStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ResearchStudyStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1161"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1162"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1163"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1163"
                  },
                  "globalScope" : true
                } ],
                "r" : "1163"
              },
              "globalScope" : true
            } ],
            "r" : "1164"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1162",
            "locator" : "341:54-341:58",
            "name" : "value"
          },
          "localId" : "1163",
          "locator" : "341:54-341:64",
          "path" : "value"
        },
        "localId" : "1164",
        "locator" : "341:1-341:64",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1165",
            "locator" : "342:32-342:52",
            "name" : "{http://hl7.org/fhir}ResearchSubjectStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ResearchSubjectStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1165"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1166"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1167"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1167"
                  },
                  "globalScope" : true
                } ],
                "r" : "1167"
              },
              "globalScope" : true
            } ],
            "r" : "1168"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1166",
            "locator" : "342:56-342:60",
            "name" : "value"
          },
          "localId" : "1167",
          "locator" : "342:56-342:66",
          "path" : "value"
        },
        "localId" : "1168",
        "locator" : "342:1-342:66",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1169",
            "locator" : "343:32-343:43",
            "name" : "{http://hl7.org/fhir}ResourceType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ResourceType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1169"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1170"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1171"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1171"
                  },
                  "globalScope" : true
                } ],
                "r" : "1171"
              },
              "globalScope" : true
            } ],
            "r" : "1172"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1170",
            "locator" : "343:47-343:51",
            "name" : "value"
          },
          "localId" : "1171",
          "locator" : "343:47-343:57",
          "path" : "value"
        },
        "localId" : "1172",
        "locator" : "343:1-343:57",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1173",
            "locator" : "344:32-344:52",
            "name" : "{http://hl7.org/fhir}ResourceVersionPolicy"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ResourceVersionPolicy" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1173"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1174"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1175"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1175"
                  },
                  "globalScope" : true
                } ],
                "r" : "1175"
              },
              "globalScope" : true
            } ],
            "r" : "1176"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1174",
            "locator" : "344:56-344:60",
            "name" : "value"
          },
          "localId" : "1175",
          "locator" : "344:56-344:66",
          "path" : "value"
        },
        "localId" : "1176",
        "locator" : "344:1-344:66",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1177",
            "locator" : "345:32-345:43",
            "name" : "{http://hl7.org/fhir}ResponseType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ResponseType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1177"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1178"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1179"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1179"
                  },
                  "globalScope" : true
                } ],
                "r" : "1179"
              },
              "globalScope" : true
            } ],
            "r" : "1180"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1178",
            "locator" : "345:47-345:51",
            "name" : "value"
          },
          "localId" : "1179",
          "locator" : "345:47-345:57",
          "path" : "value"
        },
        "localId" : "1180",
        "locator" : "345:1-345:57",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1181",
            "locator" : "346:32-346:52",
            "name" : "{http://hl7.org/fhir}RestfulCapabilityMode"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "RestfulCapabilityMode" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1181"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1182"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1183"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1183"
                  },
                  "globalScope" : true
                } ],
                "r" : "1183"
              },
              "globalScope" : true
            } ],
            "r" : "1184"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1182",
            "locator" : "346:56-346:60",
            "name" : "value"
          },
          "localId" : "1183",
          "locator" : "346:56-346:66",
          "path" : "value"
        },
        "localId" : "1184",
        "locator" : "346:1-346:66",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1185",
            "locator" : "347:32-347:51",
            "name" : "{http://hl7.org/fhir}RiskAssessmentStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "RiskAssessmentStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1185"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1186"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1187"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1187"
                  },
                  "globalScope" : true
                } ],
                "r" : "1187"
              },
              "globalScope" : true
            } ],
            "r" : "1188"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1186",
            "locator" : "347:55-347:59",
            "name" : "value"
          },
          "localId" : "1187",
          "locator" : "347:55-347:65",
          "path" : "value"
        },
        "localId" : "1188",
        "locator" : "347:1-347:65",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1189",
            "locator" : "348:32-348:42",
            "name" : "{http://hl7.org/fhir}SPDXLicense"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "SPDXLicense" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1189"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1190"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1191"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1191"
                  },
                  "globalScope" : true
                } ],
                "r" : "1191"
              },
              "globalScope" : true
            } ],
            "r" : "1192"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1190",
            "locator" : "348:46-348:50",
            "name" : "value"
          },
          "localId" : "1191",
          "locator" : "348:46-348:56",
          "path" : "value"
        },
        "localId" : "1192",
        "locator" : "348:1-348:56",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1193",
            "locator" : "349:32-349:47",
            "name" : "{http://hl7.org/fhir}SearchComparator"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "SearchComparator" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1193"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1194"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1195"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1195"
                  },
                  "globalScope" : true
                } ],
                "r" : "1195"
              },
              "globalScope" : true
            } ],
            "r" : "1196"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1194",
            "locator" : "349:51-349:55",
            "name" : "value"
          },
          "localId" : "1195",
          "locator" : "349:51-349:61",
          "path" : "value"
        },
        "localId" : "1196",
        "locator" : "349:1-349:61",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1197",
            "locator" : "350:32-350:46",
            "name" : "{http://hl7.org/fhir}SearchEntryMode"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "SearchEntryMode" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1197"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1198"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1199"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1199"
                  },
                  "globalScope" : true
                } ],
                "r" : "1199"
              },
              "globalScope" : true
            } ],
            "r" : "1200"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1198",
            "locator" : "350:50-350:54",
            "name" : "value"
          },
          "localId" : "1199",
          "locator" : "350:50-350:60",
          "path" : "value"
        },
        "localId" : "1200",
        "locator" : "350:1-350:60",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1201",
            "locator" : "351:32-351:49",
            "name" : "{http://hl7.org/fhir}SearchModifierCode"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "SearchModifierCode" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1201"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1202"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1203"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1203"
                  },
                  "globalScope" : true
                } ],
                "r" : "1203"
              },
              "globalScope" : true
            } ],
            "r" : "1204"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1202",
            "locator" : "351:53-351:57",
            "name" : "value"
          },
          "localId" : "1203",
          "locator" : "351:53-351:63",
          "path" : "value"
        },
        "localId" : "1204",
        "locator" : "351:1-351:63",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1205",
            "locator" : "352:32-352:46",
            "name" : "{http://hl7.org/fhir}SearchParamType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "SearchParamType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1205"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1206"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1207"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1207"
                  },
                  "globalScope" : true
                } ],
                "r" : "1207"
              },
              "globalScope" : true
            } ],
            "r" : "1208"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1206",
            "locator" : "352:50-352:54",
            "name" : "value"
          },
          "localId" : "1207",
          "locator" : "352:50-352:60",
          "path" : "value"
        },
        "localId" : "1208",
        "locator" : "352:1-352:60",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1209",
            "locator" : "353:32-353:42",
            "name" : "{http://hl7.org/fhir}SectionMode"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "SectionMode" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1209"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1210"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1211"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1211"
                  },
                  "globalScope" : true
                } ],
                "r" : "1211"
              },
              "globalScope" : true
            } ],
            "r" : "1212"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1210",
            "locator" : "353:46-353:50",
            "name" : "value"
          },
          "localId" : "1211",
          "locator" : "353:46-353:56",
          "path" : "value"
        },
        "localId" : "1212",
        "locator" : "353:1-353:56",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1213",
            "locator" : "354:32-354:43",
            "name" : "{http://hl7.org/fhir}SequenceType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "SequenceType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1213"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1214"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1215"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1215"
                  },
                  "globalScope" : true
                } ],
                "r" : "1215"
              },
              "globalScope" : true
            } ],
            "r" : "1216"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1214",
            "locator" : "354:47-354:51",
            "name" : "value"
          },
          "localId" : "1215",
          "locator" : "354:47-354:57",
          "path" : "value"
        },
        "localId" : "1216",
        "locator" : "354:1-354:57",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1217",
            "locator" : "355:32-355:51",
            "name" : "{http://hl7.org/fhir}ServiceRequestIntent"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ServiceRequestIntent" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1217"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1218"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1219"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1219"
                  },
                  "globalScope" : true
                } ],
                "r" : "1219"
              },
              "globalScope" : true
            } ],
            "r" : "1220"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1218",
            "locator" : "355:55-355:59",
            "name" : "value"
          },
          "localId" : "1219",
          "locator" : "355:55-355:65",
          "path" : "value"
        },
        "localId" : "1220",
        "locator" : "355:1-355:65",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1221",
            "locator" : "356:32-356:53",
            "name" : "{http://hl7.org/fhir}ServiceRequestPriority"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ServiceRequestPriority" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1221"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1222"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1223"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1223"
                  },
                  "globalScope" : true
                } ],
                "r" : "1223"
              },
              "globalScope" : true
            } ],
            "r" : "1224"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1222",
            "locator" : "356:57-356:61",
            "name" : "value"
          },
          "localId" : "1223",
          "locator" : "356:57-356:67",
          "path" : "value"
        },
        "localId" : "1224",
        "locator" : "356:1-356:67",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1225",
            "locator" : "357:32-357:51",
            "name" : "{http://hl7.org/fhir}ServiceRequestStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "ServiceRequestStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1225"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1226"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1227"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1227"
                  },
                  "globalScope" : true
                } ],
                "r" : "1227"
              },
              "globalScope" : true
            } ],
            "r" : "1228"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1226",
            "locator" : "357:55-357:59",
            "name" : "value"
          },
          "localId" : "1227",
          "locator" : "357:55-357:65",
          "path" : "value"
        },
        "localId" : "1228",
        "locator" : "357:1-357:65",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1229",
            "locator" : "358:32-358:43",
            "name" : "{http://hl7.org/fhir}SlicingRules"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "SlicingRules" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1229"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1230"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1231"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1231"
                  },
                  "globalScope" : true
                } ],
                "r" : "1231"
              },
              "globalScope" : true
            } ],
            "r" : "1232"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1230",
            "locator" : "358:47-358:51",
            "name" : "value"
          },
          "localId" : "1231",
          "locator" : "358:47-358:57",
          "path" : "value"
        },
        "localId" : "1232",
        "locator" : "358:1-358:57",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1233",
            "locator" : "359:32-359:41",
            "name" : "{http://hl7.org/fhir}SlotStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "SlotStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1233"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1234"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1235"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1235"
                  },
                  "globalScope" : true
                } ],
                "r" : "1235"
              },
              "globalScope" : true
            } ],
            "r" : "1236"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1234",
            "locator" : "359:45-359:49",
            "name" : "value"
          },
          "localId" : "1235",
          "locator" : "359:45-359:55",
          "path" : "value"
        },
        "localId" : "1236",
        "locator" : "359:1-359:55",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1237",
            "locator" : "360:32-360:44",
            "name" : "{http://hl7.org/fhir}SortDirection"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "SortDirection" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1237"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1238"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1239"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1239"
                  },
                  "globalScope" : true
                } ],
                "r" : "1239"
              },
              "globalScope" : true
            } ],
            "r" : "1240"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1238",
            "locator" : "360:48-360:52",
            "name" : "value"
          },
          "localId" : "1239",
          "locator" : "360:48-360:58",
          "path" : "value"
        },
        "localId" : "1240",
        "locator" : "360:1-360:58",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1241",
            "locator" : "361:32-361:58",
            "name" : "{http://hl7.org/fhir}SpecimenContainedPreference"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "SpecimenContainedPreference" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1241"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1242"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1243"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1243"
                  },
                  "globalScope" : true
                } ],
                "r" : "1243"
              },
              "globalScope" : true
            } ],
            "r" : "1244"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1242",
            "locator" : "361:62-361:66",
            "name" : "value"
          },
          "localId" : "1243",
          "locator" : "361:62-361:72",
          "path" : "value"
        },
        "localId" : "1244",
        "locator" : "361:1-361:72",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1245",
            "locator" : "362:32-362:45",
            "name" : "{http://hl7.org/fhir}SpecimenStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "SpecimenStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1245"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1246"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1247"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1247"
                  },
                  "globalScope" : true
                } ],
                "r" : "1247"
              },
              "globalScope" : true
            } ],
            "r" : "1248"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1246",
            "locator" : "362:49-362:53",
            "name" : "value"
          },
          "localId" : "1247",
          "locator" : "362:49-362:59",
          "path" : "value"
        },
        "localId" : "1248",
        "locator" : "362:1-362:59",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1249",
            "locator" : "363:32-363:37",
            "name" : "{http://hl7.org/fhir}Status"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Status" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1249"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1250"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1251"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1251"
                  },
                  "globalScope" : true
                } ],
                "r" : "1251"
              },
              "globalScope" : true
            } ],
            "r" : "1252"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1250",
            "locator" : "363:41-363:45",
            "name" : "value"
          },
          "localId" : "1251",
          "locator" : "363:41-363:51",
          "path" : "value"
        },
        "localId" : "1252",
        "locator" : "363:1-363:51",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1253",
            "locator" : "364:32-364:41",
            "name" : "{http://hl7.org/fhir}StrandType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "StrandType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1253"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1254"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1255"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1255"
                  },
                  "globalScope" : true
                } ],
                "r" : "1255"
              },
              "globalScope" : true
            } ],
            "r" : "1256"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1254",
            "locator" : "364:45-364:49",
            "name" : "value"
          },
          "localId" : "1255",
          "locator" : "364:45-364:55",
          "path" : "value"
        },
        "localId" : "1256",
        "locator" : "364:1-364:55",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1257",
            "locator" : "365:32-365:54",
            "name" : "{http://hl7.org/fhir}StructureDefinitionKind"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "StructureDefinitionKind" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1257"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1258"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1259"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1259"
                  },
                  "globalScope" : true
                } ],
                "r" : "1259"
              },
              "globalScope" : true
            } ],
            "r" : "1260"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1258",
            "locator" : "365:58-365:62",
            "name" : "value"
          },
          "localId" : "1259",
          "locator" : "365:58-365:68",
          "path" : "value"
        },
        "localId" : "1260",
        "locator" : "365:1-365:68",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1261",
            "locator" : "366:32-366:54",
            "name" : "{http://hl7.org/fhir}StructureMapContextType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "StructureMapContextType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1261"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1262"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1263"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1263"
                  },
                  "globalScope" : true
                } ],
                "r" : "1263"
              },
              "globalScope" : true
            } ],
            "r" : "1264"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1262",
            "locator" : "366:58-366:62",
            "name" : "value"
          },
          "localId" : "1263",
          "locator" : "366:58-366:68",
          "path" : "value"
        },
        "localId" : "1264",
        "locator" : "366:1-366:68",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1265",
            "locator" : "367:32-367:56",
            "name" : "{http://hl7.org/fhir}StructureMapGroupTypeMode"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "StructureMapGroupTypeMode" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1265"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1266"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1267"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1267"
                  },
                  "globalScope" : true
                } ],
                "r" : "1267"
              },
              "globalScope" : true
            } ],
            "r" : "1268"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1266",
            "locator" : "367:60-367:64",
            "name" : "value"
          },
          "localId" : "1267",
          "locator" : "367:60-367:70",
          "path" : "value"
        },
        "localId" : "1268",
        "locator" : "367:1-367:70",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1269",
            "locator" : "368:32-368:52",
            "name" : "{http://hl7.org/fhir}StructureMapInputMode"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "StructureMapInputMode" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1269"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1270"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1271"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1271"
                  },
                  "globalScope" : true
                } ],
                "r" : "1271"
              },
              "globalScope" : true
            } ],
            "r" : "1272"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1270",
            "locator" : "368:56-368:60",
            "name" : "value"
          },
          "localId" : "1271",
          "locator" : "368:56-368:66",
          "path" : "value"
        },
        "localId" : "1272",
        "locator" : "368:1-368:66",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1273",
            "locator" : "369:32-369:52",
            "name" : "{http://hl7.org/fhir}StructureMapModelMode"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "StructureMapModelMode" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1273"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1274"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1275"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1275"
                  },
                  "globalScope" : true
                } ],
                "r" : "1275"
              },
              "globalScope" : true
            } ],
            "r" : "1276"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1274",
            "locator" : "369:56-369:60",
            "name" : "value"
          },
          "localId" : "1275",
          "locator" : "369:56-369:66",
          "path" : "value"
        },
        "localId" : "1276",
        "locator" : "369:1-369:66",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1277",
            "locator" : "370:32-370:57",
            "name" : "{http://hl7.org/fhir}StructureMapSourceListMode"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "StructureMapSourceListMode" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1277"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1278"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1279"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1279"
                  },
                  "globalScope" : true
                } ],
                "r" : "1279"
              },
              "globalScope" : true
            } ],
            "r" : "1280"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1278",
            "locator" : "370:61-370:65",
            "name" : "value"
          },
          "localId" : "1279",
          "locator" : "370:61-370:71",
          "path" : "value"
        },
        "localId" : "1280",
        "locator" : "370:1-370:71",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1281",
            "locator" : "371:32-371:57",
            "name" : "{http://hl7.org/fhir}StructureMapTargetListMode"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "StructureMapTargetListMode" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1281"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1282"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1283"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1283"
                  },
                  "globalScope" : true
                } ],
                "r" : "1283"
              },
              "globalScope" : true
            } ],
            "r" : "1284"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1282",
            "locator" : "371:61-371:65",
            "name" : "value"
          },
          "localId" : "1283",
          "locator" : "371:61-371:71",
          "path" : "value"
        },
        "localId" : "1284",
        "locator" : "371:1-371:71",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1285",
            "locator" : "372:32-372:52",
            "name" : "{http://hl7.org/fhir}StructureMapTransform"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "StructureMapTransform" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1285"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1286"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1287"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1287"
                  },
                  "globalScope" : true
                } ],
                "r" : "1287"
              },
              "globalScope" : true
            } ],
            "r" : "1288"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1286",
            "locator" : "372:56-372:60",
            "name" : "value"
          },
          "localId" : "1287",
          "locator" : "372:56-372:66",
          "path" : "value"
        },
        "localId" : "1288",
        "locator" : "372:1-372:66",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1289",
            "locator" : "373:32-373:54",
            "name" : "{http://hl7.org/fhir}SubscriptionChannelType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "SubscriptionChannelType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1289"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1290"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1291"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1291"
                  },
                  "globalScope" : true
                } ],
                "r" : "1291"
              },
              "globalScope" : true
            } ],
            "r" : "1292"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1290",
            "locator" : "373:58-373:62",
            "name" : "value"
          },
          "localId" : "1291",
          "locator" : "373:58-373:68",
          "path" : "value"
        },
        "localId" : "1292",
        "locator" : "373:1-373:68",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1293",
            "locator" : "374:32-374:49",
            "name" : "{http://hl7.org/fhir}SubscriptionStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "SubscriptionStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1293"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1294"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1295"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1295"
                  },
                  "globalScope" : true
                } ],
                "r" : "1295"
              },
              "globalScope" : true
            } ],
            "r" : "1296"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1294",
            "locator" : "374:53-374:57",
            "name" : "value"
          },
          "localId" : "1295",
          "locator" : "374:53-374:63",
          "path" : "value"
        },
        "localId" : "1296",
        "locator" : "374:1-374:63",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1297",
            "locator" : "375:32-375:51",
            "name" : "{http://hl7.org/fhir}SupplyDeliveryStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "SupplyDeliveryStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1297"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1298"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1299"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1299"
                  },
                  "globalScope" : true
                } ],
                "r" : "1299"
              },
              "globalScope" : true
            } ],
            "r" : "1300"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1298",
            "locator" : "375:55-375:59",
            "name" : "value"
          },
          "localId" : "1299",
          "locator" : "375:55-375:65",
          "path" : "value"
        },
        "localId" : "1300",
        "locator" : "375:1-375:65",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1301",
            "locator" : "376:32-376:50",
            "name" : "{http://hl7.org/fhir}SupplyRequestStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "SupplyRequestStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1301"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1302"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1303"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1303"
                  },
                  "globalScope" : true
                } ],
                "r" : "1303"
              },
              "globalScope" : true
            } ],
            "r" : "1304"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1302",
            "locator" : "376:54-376:58",
            "name" : "value"
          },
          "localId" : "1303",
          "locator" : "376:54-376:64",
          "path" : "value"
        },
        "localId" : "1304",
        "locator" : "376:1-376:64",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1305",
            "locator" : "377:32-377:55",
            "name" : "{http://hl7.org/fhir}SystemRestfulInteraction"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "SystemRestfulInteraction" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1305"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1306"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1307"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1307"
                  },
                  "globalScope" : true
                } ],
                "r" : "1307"
              },
              "globalScope" : true
            } ],
            "r" : "1308"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1306",
            "locator" : "377:59-377:63",
            "name" : "value"
          },
          "localId" : "1307",
          "locator" : "377:59-377:69",
          "path" : "value"
        },
        "localId" : "1308",
        "locator" : "377:1-377:69",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1309",
            "locator" : "378:32-378:41",
            "name" : "{http://hl7.org/fhir}TaskIntent"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "TaskIntent" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1309"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1310"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1311"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1311"
                  },
                  "globalScope" : true
                } ],
                "r" : "1311"
              },
              "globalScope" : true
            } ],
            "r" : "1312"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1310",
            "locator" : "378:45-378:49",
            "name" : "value"
          },
          "localId" : "1311",
          "locator" : "378:45-378:55",
          "path" : "value"
        },
        "localId" : "1312",
        "locator" : "378:1-378:55",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1313",
            "locator" : "379:32-379:43",
            "name" : "{http://hl7.org/fhir}TaskPriority"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "TaskPriority" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1313"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1314"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1315"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1315"
                  },
                  "globalScope" : true
                } ],
                "r" : "1315"
              },
              "globalScope" : true
            } ],
            "r" : "1316"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1314",
            "locator" : "379:47-379:51",
            "name" : "value"
          },
          "localId" : "1315",
          "locator" : "379:47-379:57",
          "path" : "value"
        },
        "localId" : "1316",
        "locator" : "379:1-379:57",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1317",
            "locator" : "380:32-380:41",
            "name" : "{http://hl7.org/fhir}TaskStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "TaskStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1317"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1318"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1319"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1319"
                  },
                  "globalScope" : true
                } ],
                "r" : "1319"
              },
              "globalScope" : true
            } ],
            "r" : "1320"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1318",
            "locator" : "380:45-380:49",
            "name" : "value"
          },
          "localId" : "1319",
          "locator" : "380:45-380:55",
          "path" : "value"
        },
        "localId" : "1320",
        "locator" : "380:1-380:55",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1321",
            "locator" : "381:32-381:53",
            "name" : "{http://hl7.org/fhir}TestReportActionResult"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "TestReportActionResult" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1321"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1322"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1323"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1323"
                  },
                  "globalScope" : true
                } ],
                "r" : "1323"
              },
              "globalScope" : true
            } ],
            "r" : "1324"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1322",
            "locator" : "381:57-381:61",
            "name" : "value"
          },
          "localId" : "1323",
          "locator" : "381:57-381:67",
          "path" : "value"
        },
        "localId" : "1324",
        "locator" : "381:1-381:67",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1325",
            "locator" : "382:32-382:56",
            "name" : "{http://hl7.org/fhir}TestReportParticipantType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "TestReportParticipantType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1325"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1326"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1327"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1327"
                  },
                  "globalScope" : true
                } ],
                "r" : "1327"
              },
              "globalScope" : true
            } ],
            "r" : "1328"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1326",
            "locator" : "382:60-382:64",
            "name" : "value"
          },
          "localId" : "1327",
          "locator" : "382:60-382:70",
          "path" : "value"
        },
        "localId" : "1328",
        "locator" : "382:1-382:70",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1329",
            "locator" : "383:32-383:47",
            "name" : "{http://hl7.org/fhir}TestReportResult"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "TestReportResult" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1329"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1330"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1331"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1331"
                  },
                  "globalScope" : true
                } ],
                "r" : "1331"
              },
              "globalScope" : true
            } ],
            "r" : "1332"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1330",
            "locator" : "383:51-383:55",
            "name" : "value"
          },
          "localId" : "1331",
          "locator" : "383:51-383:61",
          "path" : "value"
        },
        "localId" : "1332",
        "locator" : "383:1-383:61",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1333",
            "locator" : "384:32-384:47",
            "name" : "{http://hl7.org/fhir}TestReportStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "TestReportStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1333"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1334"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1335"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1335"
                  },
                  "globalScope" : true
                } ],
                "r" : "1335"
              },
              "globalScope" : true
            } ],
            "r" : "1336"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1334",
            "locator" : "384:51-384:55",
            "name" : "value"
          },
          "localId" : "1335",
          "locator" : "384:51-384:61",
          "path" : "value"
        },
        "localId" : "1336",
        "locator" : "384:1-384:61",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1337",
            "locator" : "385:32-385:58",
            "name" : "{http://hl7.org/fhir}TestScriptRequestMethodCode"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "TestScriptRequestMethodCode" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1337"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1338"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1339"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1339"
                  },
                  "globalScope" : true
                } ],
                "r" : "1339"
              },
              "globalScope" : true
            } ],
            "r" : "1340"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1338",
            "locator" : "385:62-385:66",
            "name" : "value"
          },
          "localId" : "1339",
          "locator" : "385:62-385:72",
          "path" : "value"
        },
        "localId" : "1340",
        "locator" : "385:1-385:72",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1341",
            "locator" : "386:32-386:42",
            "name" : "{http://hl7.org/fhir}TriggerType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "TriggerType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1341"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1342"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1343"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1343"
                  },
                  "globalScope" : true
                } ],
                "r" : "1343"
              },
              "globalScope" : true
            } ],
            "r" : "1344"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1342",
            "locator" : "386:46-386:50",
            "name" : "value"
          },
          "localId" : "1343",
          "locator" : "386:46-386:56",
          "path" : "value"
        },
        "localId" : "1344",
        "locator" : "386:1-386:56",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1345",
            "locator" : "387:32-387:49",
            "name" : "{http://hl7.org/fhir}TypeDerivationRule"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "TypeDerivationRule" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1345"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1346"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1347"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1347"
                  },
                  "globalScope" : true
                } ],
                "r" : "1347"
              },
              "globalScope" : true
            } ],
            "r" : "1348"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1346",
            "locator" : "387:53-387:57",
            "name" : "value"
          },
          "localId" : "1347",
          "locator" : "387:53-387:63",
          "path" : "value"
        },
        "localId" : "1348",
        "locator" : "387:1-387:63",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1349",
            "locator" : "388:32-388:53",
            "name" : "{http://hl7.org/fhir}TypeRestfulInteraction"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "TypeRestfulInteraction" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1349"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1350"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1351"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1351"
                  },
                  "globalScope" : true
                } ],
                "r" : "1351"
              },
              "globalScope" : true
            } ],
            "r" : "1352"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1350",
            "locator" : "388:57-388:61",
            "name" : "value"
          },
          "localId" : "1351",
          "locator" : "388:57-388:67",
          "path" : "value"
        },
        "localId" : "1352",
        "locator" : "388:1-388:67",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1353",
            "locator" : "389:32-389:43",
            "name" : "{http://hl7.org/fhir}UDIEntryType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "UDIEntryType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1353"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1354"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1355"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1355"
                  },
                  "globalScope" : true
                } ],
                "r" : "1355"
              },
              "globalScope" : true
            } ],
            "r" : "1356"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1354",
            "locator" : "389:47-389:51",
            "name" : "value"
          },
          "localId" : "1355",
          "locator" : "389:47-389:57",
          "path" : "value"
        },
        "localId" : "1356",
        "locator" : "389:1-389:57",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1357",
            "locator" : "390:32-390:42",
            "name" : "{http://hl7.org/fhir}UnitsOfTime"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "UnitsOfTime" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1357"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1358"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1359"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1359"
                  },
                  "globalScope" : true
                } ],
                "r" : "1359"
              },
              "globalScope" : true
            } ],
            "r" : "1360"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1358",
            "locator" : "390:46-390:50",
            "name" : "value"
          },
          "localId" : "1359",
          "locator" : "390:46-390:56",
          "path" : "value"
        },
        "localId" : "1360",
        "locator" : "390:1-390:56",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1361",
            "locator" : "391:32-391:34",
            "name" : "{http://hl7.org/fhir}Use"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "Use" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1361"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1362"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1363"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1363"
                  },
                  "globalScope" : true
                } ],
                "r" : "1363"
              },
              "globalScope" : true
            } ],
            "r" : "1364"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1362",
            "locator" : "391:38-391:42",
            "name" : "value"
          },
          "localId" : "1363",
          "locator" : "391:38-391:48",
          "path" : "value"
        },
        "localId" : "1364",
        "locator" : "391:1-391:48",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1365",
            "locator" : "392:32-392:43",
            "name" : "{http://hl7.org/fhir}VariableType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "VariableType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1365"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1366"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1367"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1367"
                  },
                  "globalScope" : true
                } ],
                "r" : "1367"
              },
              "globalScope" : true
            } ],
            "r" : "1368"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1366",
            "locator" : "392:47-392:51",
            "name" : "value"
          },
          "localId" : "1367",
          "locator" : "392:47-392:57",
          "path" : "value"
        },
        "localId" : "1368",
        "locator" : "392:1-392:57",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1369",
            "locator" : "393:32-393:41",
            "name" : "{http://hl7.org/fhir}VisionBase"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "VisionBase" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1369"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1370"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1371"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1371"
                  },
                  "globalScope" : true
                } ],
                "r" : "1371"
              },
              "globalScope" : true
            } ],
            "r" : "1372"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1370",
            "locator" : "393:45-393:49",
            "name" : "value"
          },
          "localId" : "1371",
          "locator" : "393:45-393:55",
          "path" : "value"
        },
        "localId" : "1372",
        "locator" : "393:1-393:55",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1373",
            "locator" : "394:32-394:41",
            "name" : "{http://hl7.org/fhir}VisionEyes"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "VisionEyes" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1373"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1374"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1375"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1375"
                  },
                  "globalScope" : true
                } ],
                "r" : "1375"
              },
              "globalScope" : true
            } ],
            "r" : "1376"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1374",
            "locator" : "394:45-394:49",
            "name" : "value"
          },
          "localId" : "1375",
          "locator" : "394:45-394:55",
          "path" : "value"
        },
        "localId" : "1376",
        "locator" : "394:1-394:55",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1377",
            "locator" : "395:32-395:43",
            "name" : "{http://hl7.org/fhir}VisionStatus"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "VisionStatus" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1377"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1378"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1379"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1379"
                  },
                  "globalScope" : true
                } ],
                "r" : "1379"
              },
              "globalScope" : true
            } ],
            "r" : "1380"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1378",
            "locator" : "395:47-395:51",
            "name" : "value"
          },
          "localId" : "1379",
          "locator" : "395:47-395:57",
          "path" : "value"
        },
        "localId" : "1380",
        "locator" : "395:1-395:57",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1381",
            "locator" : "396:32-396:45",
            "name" : "{http://hl7.org/fhir}XPathUsageType"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "XPathUsageType" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1381"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1382"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1383"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1383"
                  },
                  "globalScope" : true
                } ],
                "r" : "1383"
              },
              "globalScope" : true
            } ],
            "r" : "1384"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1382",
            "locator" : "396:49-396:53",
            "name" : "value"
          },
          "localId" : "1383",
          "locator" : "396:49-396:59",
          "path" : "value"
        },
        "localId" : "1384",
        "locator" : "396:1-396:59",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1385",
            "locator" : "397:32-397:43",
            "name" : "{http://hl7.org/fhir}base64Binary"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "base64Binary" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1385"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1386"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1387"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1387"
                  },
                  "globalScope" : true
                } ],
                "r" : "1387"
              },
              "globalScope" : true
            } ],
            "r" : "1388"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1386",
            "locator" : "397:47-397:51",
            "name" : "value"
          },
          "localId" : "1387",
          "locator" : "397:47-397:57",
          "path" : "value"
        },
        "localId" : "1388",
        "locator" : "397:1-397:57",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1389",
            "locator" : "398:33-398:39",
            "name" : "{http://hl7.org/fhir}boolean"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToBoolean", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "boolean" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1389"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1390"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1391"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1391"
                  },
                  "globalScope" : true
                } ],
                "r" : "1391"
              },
              "globalScope" : true
            } ],
            "r" : "1392"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1390",
            "locator" : "398:43-398:47",
            "name" : "value"
          },
          "localId" : "1391",
          "locator" : "398:43-398:53",
          "path" : "value"
        },
        "localId" : "1392",
        "locator" : "398:1-398:53",
        "name" : "ToBoolean",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1393",
            "locator" : "399:30-399:33",
            "name" : "{http://hl7.org/fhir}date"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToDate", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "date" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1393"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1394"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1395"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1395"
                  },
                  "globalScope" : true
                } ],
                "r" : "1395"
              },
              "globalScope" : true
            } ],
            "r" : "1396"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1394",
            "locator" : "399:37-399:41",
            "name" : "value"
          },
          "localId" : "1395",
          "locator" : "399:37-399:47",
          "path" : "value"
        },
        "localId" : "1396",
        "locator" : "399:1-399:47",
        "name" : "ToDate",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1397",
            "locator" : "400:34-400:41",
            "name" : "{http://hl7.org/fhir}dateTime"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToDateTime", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "dateTime" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1397"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1398"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1399"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1399"
                  },
                  "globalScope" : true
                } ],
                "r" : "1399"
              },
              "globalScope" : true
            } ],
            "r" : "1400"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1398",
            "locator" : "400:45-400:49",
            "name" : "value"
          },
          "localId" : "1399",
          "locator" : "400:45-400:55",
          "path" : "value"
        },
        "localId" : "1400",
        "locator" : "400:1-400:55",
        "name" : "ToDateTime",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1401",
            "locator" : "401:33-401:39",
            "name" : "{http://hl7.org/fhir}decimal"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToDecimal", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "decimal" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1401"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1402"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1403"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1403"
                  },
                  "globalScope" : true
                } ],
                "r" : "1403"
              },
              "globalScope" : true
            } ],
            "r" : "1404"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1402",
            "locator" : "401:43-401:47",
            "name" : "value"
          },
          "localId" : "1403",
          "locator" : "401:43-401:53",
          "path" : "value"
        },
        "localId" : "1404",
        "locator" : "401:1-401:53",
        "name" : "ToDecimal",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1405",
            "locator" : "402:34-402:40",
            "name" : "{http://hl7.org/fhir}instant"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToDateTime", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "instant" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1405"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1406"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1407"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1407"
                  },
                  "globalScope" : true
                } ],
                "r" : "1407"
              },
              "globalScope" : true
            } ],
            "r" : "1408"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1406",
            "locator" : "402:44-402:48",
            "name" : "value"
          },
          "localId" : "1407",
          "locator" : "402:44-402:54",
          "path" : "value"
        },
        "localId" : "1408",
        "locator" : "402:1-402:54",
        "name" : "ToDateTime",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1409",
            "locator" : "403:33-403:39",
            "name" : "{http://hl7.org/fhir}integer"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToInteger", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "integer" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1409"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1410"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1411"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1411"
                  },
                  "globalScope" : true
                } ],
                "r" : "1411"
              },
              "globalScope" : true
            } ],
            "r" : "1412"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1410",
            "locator" : "403:43-403:47",
            "name" : "value"
          },
          "localId" : "1411",
          "locator" : "403:43-403:53",
          "path" : "value"
        },
        "localId" : "1412",
        "locator" : "403:1-403:53",
        "name" : "ToInteger",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1413",
            "locator" : "404:32-404:37",
            "name" : "{http://hl7.org/fhir}string"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "string" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1413"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1414"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1415"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1415"
                  },
                  "globalScope" : true
                } ],
                "r" : "1415"
              },
              "globalScope" : true
            } ],
            "r" : "1416"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1414",
            "locator" : "404:41-404:45",
            "name" : "value"
          },
          "localId" : "1415",
          "locator" : "404:41-404:51",
          "path" : "value"
        },
        "localId" : "1416",
        "locator" : "404:1-404:51",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1417",
            "locator" : "405:30-405:33",
            "name" : "{http://hl7.org/fhir}time"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToTime", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "time" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1417"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1418"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1419"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1419"
                  },
                  "globalScope" : true
                } ],
                "r" : "1419"
              },
              "globalScope" : true
            } ],
            "r" : "1420"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1418",
            "locator" : "405:37-405:41",
            "name" : "value"
          },
          "localId" : "1419",
          "locator" : "405:37-405:47",
          "path" : "value"
        },
        "localId" : "1420",
        "locator" : "405:1-405:47",
        "name" : "ToTime",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1421",
            "locator" : "406:32-406:34",
            "name" : "{http://hl7.org/fhir}uri"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "uri" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1421"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1422"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1423"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1423"
                  },
                  "globalScope" : true
                } ],
                "r" : "1423"
              },
              "globalScope" : true
            } ],
            "r" : "1424"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1422",
            "locator" : "406:38-406:42",
            "name" : "value"
          },
          "localId" : "1423",
          "locator" : "406:38-406:48",
          "path" : "value"
        },
        "localId" : "1424",
        "locator" : "406:1-406:48",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      }, {
        "type" : "FunctionDef",
        "operand" : [ {
          "type" : "OperandDef",
          "operandTypeSpecifier" : {
            "type" : "NamedTypeSpecifier",
            "localId" : "1425",
            "locator" : "407:32-407:36",
            "name" : "{http://hl7.org/fhir}xhtml"
          },
          "name" : "value"
        } ],
        "annotation" : [ {
          "s" : {
            "s" : [ {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "", "define function ", "ToString", "(", "value", " " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ "xhtml" ]
                  },
                  "globalScope" : true
                } ],
                "r" : "1425"
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ "): " ]
              },
              "globalScope" : true
            }, {
              "name" : "{urn:hl7-org:cql-annotations:r1}s",
              "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
              "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
              "value" : {
                "s" : [ {
                  "name" : "{urn:hl7-org:cql-annotations:r1}s",
                  "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                  "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                  "value" : {
                    "s" : [ {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1426"
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ "." ]
                      },
                      "globalScope" : true
                    }, {
                      "name" : "{urn:hl7-org:cql-annotations:r1}s",
                      "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                      "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                      "value" : {
                        "s" : [ {
                          "name" : "{urn:hl7-org:cql-annotations:r1}s",
                          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
                          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
                          "value" : {
                            "s" : [ "value" ]
                          },
                          "globalScope" : true
                        } ],
                        "r" : "1427"
                      },
                      "globalScope" : true
                    } ],
                    "r" : "1427"
                  },
                  "globalScope" : true
                } ],
                "r" : "1427"
              },
              "globalScope" : true
            } ],
            "r" : "1428"
          }
        } ],
        "expression" : {
          "type" : "Property",
          "source" : {
            "type" : "OperandRef",
            "localId" : "1426",
            "locator" : "407:40-407:44",
            "name" : "value"
          },
          "localId" : "1427",
          "locator" : "407:40-407:50",
          "path" : "value"
        },
        "localId" : "1428",
        "locator" : "407:1-407:50",
        "name" : "ToString",
        "context" : "Patient",
        "accessLevel" : "Public"
      } ]
    },
    "annotation" : [ {
      "translatorVersion" : "1.3",
      "translatorOptions" : "EnableAnnotations,EnableLocators,DisableListDemotion,DisableListPromotion"
    }, {
      "s" : {
        "s" : [ {
          "name" : "{urn:hl7-org:cql-annotations:r1}s",
          "declaredType" : "org.hl7.cql_annotations.r1.Narrative",
          "scope" : "javax.xml.bind.JAXBElement$GlobalScope",
          "value" : {
            "s" : [ "/*\n@author: Bryn Rhodes\n@description: This library defines functions to convert between FHIR\n data types and CQL system-defined types, as well as functions to support\n FHIRPath implementation. For more information, see the FHIRHelpers wiki page:\n https://github.com/cqframework/clinical_quality_language/wiki/FHIRHelpers\n@allowFluent: true\n*/", "library FHIRHelpers version '4.0.1'" ]
          },
          "globalScope" : true
        } ],
        "r" : "1428"
      }
    } ]
  }
}"
  } ]
}